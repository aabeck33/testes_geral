SELECT OBJ.CDOBJECT, OBJ.CDREVISION, OBJ.IDOBJECT, OBJ.NMOBJECT, OBJ.IDOBJECT + ' - ' + OBJ.NMOBJECT AS NM_FULLNAME, OBJ.FGCURRENT, OBJ.FGAPPLICATION, OBJ.FGREADY, OBJGRP.CDOBJECTGROUP, OBJGRP.FGSTATUS, CASE WHEN OBJGRP.FGSTATUS=1 THEN '#{103645}' WHEN OBJGRP.FGSTATUS=2 THEN '#{104235}' WHEN OBJGRP.FGSTATUS=3 THEN '#{104705}' WHEN OBJGRP.FGSTATUS=4 THEN '#{104230}' END AS NMSTATUS, OBJGRP.FGENABLED, CASE WHEN OBJGRP.FGENABLED=1 THEN '#{102270}' WHEN OBJGRP.FGENABLED=2 THEN '#{102291}' END AS NMENABLED, OBJGRP.CDFAVORITE, OBJTYPE.CDOBJECTTYPE, OBJTYPE.IDOBJECTTYPE, OBJTYPE.NMOBJECTTYPE, OBJTYPE.IDOBJECTTYPE + ' - ' + OBJTYPE.NMOBJECTTYPE AS NMTYPE_FULLNAME, OBJTYPE.FGUSEREVISION, GNREV.IDREVISION, GNREV.DTREVISION, GNREV.FGSTATUS AS FGREVSTATUS, CASE GNREV.FGSTATUS WHEN 1 THEN '#{200242}' WHEN 2 THEN '#{200243}' WHEN 3 THEN '#{200244}' WHEN 4 THEN '#{200245}' WHEN 5 THEN '#{104238}' WHEN 6 THEN '#{100651}' END AS NMREVSTATUS, CASE WHEN GNREVCFG.FGUSEREVISION=2 THEN 1 ELSE (CASE WHEN GNREV.FGSTATUS=1 AND EXISTS (SELECT DISTINCT GN.CDREVISION FROM GNREVISION GN LEFT OUTER JOIN GNREVISIONSTATUS GRS ON (GRS.CDREVISIONSTATUS=GN.CDREVISIONSTATUS) INNER JOIN GNREVISIONSTAGMEM GS ON (GN.CDREVISION=GS.CDREVISION) WHERE GN.CDISOSYSTEM IN(SELECT CDISOSYSTEM FROM ADISOSYSTEM) AND GS.FGSTAGE=GN.FGSTATUS AND GS.DTAPPROVAL IS NULL AND GS.NRCYCLE=(SELECT MAX(NRCYCLE) FROM GNREVISIONSTAGMEM WHERE CDREVISION=GN.CDREVISION AND DTAPPROVAL IS NULL) AND GS.NRSEQUENCE=(SELECT MIN(NRSEQUENCE) FROM GNREVISIONSTAGMEM WHERE CDREVISION=GN.CDREVISION AND DTAPPROVAL IS NULL AND NRCYCLE=GS.NRCYCLE AND FGSTAGE=GS.FGSTAGE) AND (GS.FGACCESSTYPE=6 OR (GS.FGACCESSTYPE=2 AND GS.CDDEPARTMENT IN (SELECT DISTINCT (CDDEPARTMENT) FROM ADUSERDEPTPOS WHERE CDUSER=11792)) OR (GS.FGACCESSTYPE=3 AND EXISTS (SELECT DISTINCT T.CDDEPARTMENT, T.CDPOSITION FROM ADUSERDEPTPOS T WHERE T.CDUSER=11792 AND T.CDPOSITION=GS.CDPOSITION AND T.CDDEPARTMENT=GS.CDDEPARTMENT)) OR (GS.FGACCESSTYPE=4 AND GS.CDPOSITION IN (SELECT DISTINCT (CDPOSITION) FROM ADUSERDEPTPOS WHERE CDUSER=11792)) OR (GS.FGACCESSTYPE=5 AND GS.CDUSER=11792) OR (GS.FGACCESSTYPE=1 AND GS.CDTEAM IN (SELECT DISTINCT(CDTEAM) FROM ADTEAMUSER WHERE CDUSER=11792))) AND GS.FGSTAGE IN (1) AND GNREV.CDREVISION=GN.CDREVISION) THEN 1 WHEN GNREV.FGSTATUS=6 AND OBJGRP.FGSTATUS=2 THEN 1 WHEN GNREV.FGSTATUS=6 AND (SELECT COUNT(GNREVSTAGEMEMBERS.CDMEMBERINDEX) FROM GNREVISIONSTAGMEM GNREVSTAGEMEMBERS WHERE GNREVSTAGEMEMBERS.CDREVISION=GNREV.CDREVISION AND GNREVSTAGEMEMBERS.FGSTAGE=1 AND GNREVSTAGEMEMBERS.NRCYCLE=(SELECT MAX(CHKMAX.NRCYCLE) FROM GNREVISIONSTAGMEM CHKMAX WHERE CHKMAX.CDREVISION=GNREVSTAGEMEMBERS.CDREVISION))=0 AND GNREVCFG.FGTYPEREVISION=1 THEN 1 WHEN OBJGRP.FGSTATUS=1 AND (SELECT COUNT(GNREVSTAGEMEMBERS.CDMEMBERINDEX) FROM GNREVISIONSTAGMEM GNREVSTAGEMEMBERS WHERE GNREVSTAGEMEMBERS.CDREVISION=GNREV.CDREVISION AND GNREVSTAGEMEMBERS.FGSTAGE=1 AND GNREVSTAGEMEMBERS.NRCYCLE=(SELECT MAX(CHKMAX.NRCYCLE) FROM GNREVISIONSTAGMEM CHKMAX WHERE CHKMAX.CDREVISION=GNREVSTAGEMEMBERS.CDREVISION))=0 THEN 1 ELSE 2 END) END AS FGALLOWEDIT, CONTOBJSDS.CONTMSDS, CONTOBJSDS.FGHASSDS, RESPTEAM.IDTEAM, RESPTEAM.NMTEAM, RESPTEAM.IDTEAM + ' - ' + RESPTEAM.NMTEAM AS NMTEAM_FULLNAME, ASAST.FGASSTATUS, ASAST.VLASSETCOST, ASAST.DTPURCHASE, ASAST.IDSERIALNUMBER, ASAST.IDMODEL, CASE WHEN TBL_ASSETDEPRECIATION.VLDEPRECATED IS NOT NULL THEN TBL_ASSETDEPRECIATION.VLDEPRECATED ELSE ASAST.VLACTUALASSETCOST END VLREALACTUALASSETCOST, CASE WHEN ASAST.FGASSTATUS=1 THEN '#{100303}' WHEN ASAST.FGASSTATUS=2 THEN '#{102647}' WHEN ASAST.FGASSTATUS=3 THEN '#{102646}' WHEN ASAST.FGASSTATUS=4 THEN '#{104499}' WHEN ASAST.FGASSTATUS=5 THEN '#{104232}' WHEN ASAST.FGASSTATUS=6 THEN '#{102645}' WHEN ASAST.FGASSTATUS=7 THEN '#{101556}' WHEN ASAST.FGASSTATUS=10 THEN '#{100289}' END NMASSTATUS, ASHISTSITE.CDHISTASSETSITE, AS_SITE.IDSITE, AS_SITE.NMSITE, CASE WHEN AS_SITE.CDSITE IS NOT NULL THEN AS_SITE.IDSITE + ' - ' + AS_SITE.NMSITE ELSE '' END AS NMSITE_FULLNAME, AD_USER.IDUSER AS IDUSERSITE, AD_USER.NMUSER AS NMUSERSITE, CASE WHEN AD_USER.CDUSER IS NOT NULL THEN AD_USER.IDUSER + ' - ' + AD_USER.NMUSER ELSE '' END AS NMUSERSITE_FULLNAME, (CASE WHEN AS_SITE.CDSITE IS NOT NULL THEN '#{100358}: ' + AS_SITE.IDSITE + ' - ' + AS_SITE.NMSITE ELSE '' END + CASE WHEN AD_USER.CDUSER IS NOT NULL AND AS_SITE.CDSITE IS NOT NULL THEN ' | #{100044}: ' + AD_USER.IDUSER + ' - ' + AD_USER.NMUSER WHEN AD_USER.CDUSER IS NOT NULL THEN '#{100044}: ' + AD_USER.IDUSER + ' - ' + AD_USER.NMUSER ELSE '' END) AS NMLOCATION_FULLNAME, ASHISTSTATE.CDHISTASSETSTATE, CASE WHEN AS_STATE.CDSTATE IS NOT NULL THEN AS_STATE.IDSTATE + ' - ' + AS_STATE.NMSTATE ELSE '' END AS NMSTATE_FULLNAME, MANUFACTURER.NMCOMPANY AS IDMANUFACTURER, MANUFACTURER.IDCOMMERCIAL AS NMMANUFACTURER, CASE WHEN MANUFACTURER.CDCOMPANY IS NOT NULL THEN MANUFACTURER.NMCOMPANY + ' - ' + MANUFACTURER.IDCOMMERCIAL ELSE '' END AS NMMAN_FULLNAME, SUPPLIER.NMCOMPANY AS IDSUPPLIER, SUPPLIER.IDCOMMERCIAL AS NMSUPPLIER, CASE WHEN SUPPLIER.CDCOMPANY IS NOT NULL THEN SUPPLIER.NMCOMPANY + ' - ' + SUPPLIER.IDCOMMERCIAL ELSE '' END AS NMSUPPLIER_FULLNAME ,CASE WHEN ASIT.FGWARRANTY=1 THEN DATEADD(DAY, ASIT.QTWARRANTY, ASIT.DTPURCHASE) WHEN ASIT.FGWARRANTY=2 THEN DATEADD(WEEK, ASIT.QTWARRANTY, ASIT.DTPURCHASE) WHEN ASIT.FGWARRANTY=3 THEN DATEADD(MONTH, ASIT.QTWARRANTY, ASIT.DTPURCHASE) WHEN ASIT.FGWARRANTY=4 THEN DATEADD(YEAR, ASIT.QTWARRANTY, ASIT.DTPURCHASE) ELSE NULL END AS DTWARRANTY, ASINV.DTIMPORT, ASINV.QTTIMEIMPORT, ASINVPC.NMNAME, ASINVPC.NMDOMAIN, ASINVPC.NMOS, ASINVPC.NMIPADDRESS, ASINVPC.NMUSERNAME, ASINVPC.NMARCHITECTURE, ASIT.CDWARRANTYDOC, DCDOC.CDREVISION AS CDREV, GNRV.QTVALIDITY, ASINVPC.NMPRODUCTKEY, ASINVPC.CDASSET AS CDASSETINV, ASINVPC.CDREVISION AS CDREVISIONINV, ASIT.FGWARRANTY, ASINVCPU.NMTYPE, CHK_FULLMEMORY_VIEW.FULLMEMORY FROM OBOBJECT OBJ INNER JOIN OBOBJECTGROUP OBJGRP ON (OBJGRP.CDOBJECTGROUP=OBJ.CDOBJECT) INNER JOIN OBOBJECTTYPE OBJTYPE ON (OBJTYPE.CDOBJECTTYPE=OBJGRP.CDOBJECTTYPE) LEFT JOIN GNREVISION GNREV ON (GNREV.CDREVISION=OBJ.CDREVISION) LEFT JOIN GNREVCONFIG GNREVCFG ON (GNREVCFG.CDREVCONFIG=OBJTYPE.CDREVCONFIG) INNER JOIN ADTEAM RESPTEAM ON (RESPTEAM.CDTEAM=OBJ.CDTEAMRESPONSABLE) LEFT JOIN (SELECT OBOBJSDS.CDREVISION, COUNT(CDDOCUMENT) AS CONTMSDS, CASE WHEN COUNT(CDDOCUMENT) > 0 THEN 1 ELSE 0 END FGHASSDS FROM OBOBJECTSDS OBOBJSDS GROUP BY OBOBJSDS.CDREVISION) CONTOBJSDS ON (CONTOBJSDS.CDREVISION=OBJ.CDREVISION) INNER JOIN ASASSET ASAST ON (ASAST.CDASSET=OBJ.CDOBJECT AND ASAST.CDREVISION=OBJ.CDREVISION) LEFT JOIN ASCONTROLS ASCTRL ON (ASCTRL.CDCONTROLS=ASAST.CDCONTROLS) LEFT JOIN ASHISTASSETSITE ASHISTSITE ON (ASHISTSITE.CDASSET=ASAST.CDASSET AND ASHISTSITE.CDREVISION=ASAST.CDREVISION) LEFT JOIN ASSITE AS_SITE ON (AS_SITE.CDSITE=ASHISTSITE.CDSITE) LEFT JOIN ADUSER AD_USER ON (AD_USER.CDUSER=ASHISTSITE.CDUSERSITE) LEFT JOIN ASHISTASSETSTATE ASHISTSTATE ON (ASHISTSTATE.CDASSET=ASAST.CDASSET AND ASHISTSTATE.CDREVISION=ASAST.CDREVISION) LEFT JOIN ASSTATE AS_STATE ON (AS_STATE.CDSTATE=ASHISTSTATE.CDSTATE) LEFT JOIN ADCOMPANY MANUFACTURER ON (MANUFACTURER.CDCOMPANY=ASAST.CDMANUFACTURER) LEFT JOIN ADCOMPANY SUPPLIER ON (SUPPLIER.CDCOMPANY=ASAST.CDSUPPLIER) LEFT JOIN (SELECT ASASTDEPRECVAL.CDASSET, ASASTDEPRECVAL.VLDEPRECATED FROM ASASSETDEPRECVAL ASASTDEPRECVAL WHERE ASASTDEPRECVAL.QTMONTH=(DATEPART(month, (<!%TODAY%>))) AND ASASTDEPRECVAL.QTYEAR=(DATEPART(year, (<!%TODAY%>)))) TBL_ASSETDEPRECIATION ON (TBL_ASSETDEPRECIATION.CDASSET=ASAST.CDASSET) LEFT JOIN ASUSAGEEVENT ASUSGEVT ON (ASUSGEVT.CDASSET=ASAST.CDASSET AND ASAST.CDLASTUSAGEEVENT=ASUSGEVT.CDPROTOCOL) LEFT JOIN ADDEPARTMENT ADDEPT ON (ASUSGEVT.CDUSAGEDEPT=ADDEPT.CDDEPARTMENT) LEFT JOIN ASASSET ASIT ON (ASAST.CDASSET=ASIT.CDASSET AND ASAST.CDREVISION=ASIT.CDREVISION) LEFT JOIN DCDOCREVISION DCDOC ON (ASIT.CDWARRANTYDOC=DCDOC.CDDOCUMENT AND DCDOC.FGCURRENT=1) LEFT JOIN GNREVISION GNRV ON (DCDOC.CDREVISION=GNRV.CDREVISION) LEFT JOIN ASASTINVITCOMPUTER ASINVPC ON (ASAST.CDASSET=ASINVPC.CDASSET AND ASAST.CDREVISION=ASINVPC.CDREVISION) LEFT JOIN ASASTINVCPCPU ASINVCPU ON (ASINVCPU.CDASTINVITCOMPUTER=ASINVPC.CDASTINVITCOMPUTER) LEFT JOIN ASASTINVENTORY ASINV ON (ASINVPC.CDASTINVENTORY=ASINV.CDASTINVENTORY) LEFT JOIN (SELECT CHK_FULLMEMORY.CDASTINVITCOMPUTER, SUM(CHK_FULLMEMORY.VLCAPACITYMB) FULLMEMORY FROM ASASTINVCPMEMORY CHK_FULLMEMORY GROUP BY CHK_FULLMEMORY.CDASTINVITCOMPUTER) CHK_FULLMEMORY_VIEW ON ASINVPC.CDASTINVITCOMPUTER=CHK_FULLMEMORY_VIEW.CDASTINVITCOMPUTER WHERE 1=1 AND OBJ.FGCURRENT=1 AND OBJ.FGTEMPLATE <> 1 AND (ASHISTSITE.CDHISTASSETSITE IS NULL OR ASHISTSITE.FGLASTSITE=1) AND (ASHISTSTATE.CDHISTASSETSTATE IS NULL OR ASHISTSTATE.FGLASTSTATE=1) AND (ASINVPC.CDASTINVENTORY IS NULL OR ASINVPC.CDASTINVENTORY=(SELECT MAX(CDASTINVENTORY) FROM ASASTINVITCOMPUTER ASPC WHERE ASPC.CDASSET=ASAST.CDASSET AND ASPC.CDREVISION=ASAST.CDREVISION)) AND OBJ.FGAPPLICATION=11 AND ASAST.FGASSTATUS IN ('1','2','3','5','6','7','10') AND OBJGRP.FGSTATUS IN ('1','2','3') AND EXISTS (SELECT AHIT.*, ASITE.* FROM ASHISTASSETSITE AHIT LEFT JOIN ASSITE ASITE ON (ASITE.CDSITE=AHIT.CDSITE) WHERE AHIT.FGLASTSITE=1 AND AHIT.CDASSET=ASAST.CDASSET AND AHIT.CDSITE=2) AND CAST(UPPER(ASINVPC.NMOS) AS VARCHAR(255)) LIKE CAST(UPPER('%windows 7%') AS VARCHAR(255)) AND EXISTS (SELECT 1 FROM ASASTINVITCOMPUTER INVPC INNER JOIN ASASTINVCPSOFTWARE INVSOFT ON (INVSOFT.CDASTINVITCOMPUTER=INVPC.CDASTINVITCOMPUTER) WHERE INVPC.CDASTINVITCOMPUTER=ASINVPC.CDASTINVITCOMPUTER AND CAST(UPPER(INVSOFT.NMNAME) AS VARCHAR(255)) LIKE CAST(UPPER('%Microsoft Office Professional Plus 2013%') AS VARCHAR(255))) AND (ASAST.FGVIEWACCESS=2 OR (ASAST.FGVIEWACCESS=1 AND ASAST.CDTEAMVIEWACCESS IN (SELECT DISTINCT(CDTEAM) FROM ADTEAMUSER WHERE CDUSER=11792))) AND (((OBJTYPE.CDTYPEROLE IS NULL OR EXISTS (SELECT NULL FROM (SELECT CHKUSRPERMTYPEROLE.CDTYPEROLE AS CDTYPEROLE, CHKUSRPERMTYPEROLE.CDUSER FROM (SELECT PM.FGPERMISSIONTYPE, PM.CDUSER, PM.CDTYPEROLE FROM GNUSERPERMTYPEROLE PM WHERE 1=1 AND PM.CDUSER <> -1 AND PM.CDPERMISSION=5 /* Nao retirar este comentario */UNION ALL SELECT PM.FGPERMISSIONTYPE, US.CDUSER AS CDUSER, PM.CDTYPEROLE FROM GNUSERPERMTYPEROLE PM CROSS JOIN ADUSER US WHERE 1=1 AND PM.CDUSER=-1 AND US.FGUSERENABLED=1 AND PM.CDPERMISSION=5) CHKUSRPERMTYPEROLE GROUP BY CHKUSRPERMTYPEROLE.CDTYPEROLE, CHKUSRPERMTYPEROLE.CDUSER HAVING MAX(CHKUSRPERMTYPEROLE.FGPERMISSIONTYPE)=1) CHKPERMTYPEROLE WHERE CHKPERMTYPEROLE.CDTYPEROLE=OBJTYPE.CDTYPEROLE AND (CHKPERMTYPEROLE.CDUSER=11792 OR 11792=-1)))))
