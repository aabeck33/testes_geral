SELECT T.FGPARTTYPE, T.FGSTATUS, T.IDTRAIN, T.NMTRAIN, TCONF.IDCONFIGURATION, TCONF.NMCONFIGURATION, C.IDCOURSE, C.NMCOURSE, T.DTPROGSTART, T.DTPROGFINISH, T.VLCOSTPROG AS VLQTPROGCOST, T.QTPARTPROG, T.QTTMTOTPROG, T.DTREALSTART, T.DTREALFINISH, T.VLCOSTREAL AS VLQTREALCOST, T.QTPARTREAL, T.QTTMTOTREAL, T.FGEFF, T.FGEFFEVAL, T.FGCANCEL, T.FGINVALID, T.CDTRAIN, C.CDCOURSE, T.FGPRESENCELIST, T.DTVALID, T.FGAPPROVALENROLL, CASE WHEN T.DTVALID < dateadd(dd, datediff(dd,0, getDate()), 0) THEN 1 ELSE 2 END FGVALID, CASE WHEN EXISTS (SELECT 1 FROM TRTRAINATTACH TRA WHERE TRA.CDTRAIN=T.CDTRAIN) THEN 1 ELSE 2 END FGATTACHMENT, CASE WHEN EXISTS (SELECT 1 FROM TRTRAINDOC TD WHERE TD.CDTRAIN=T.CDTRAIN) THEN 1 ELSE 2 END FGDOCUMENT, TEMPEVAL.FGSTATUSPRE, TEMPEVAL.CDTRAINEVALEXECONFPRE, TEMPEVAL.DTEVALUATION, TEMPEVAL.FGSTATUSTRA, TEMPEVAL.CDTRAINEVALEXECONFTRA, TEMPEVAL.FGSTATUSREAC, TEMPEVAL.CDTRAINEVALEXECONFREAC, TEMPEVAL.FGSTATUSPOS, TEMPEVAL.CDTRAINEVALEXECONFPOS, TEMPEVAL.FGSTATUSEFF, TEMPEVAL.CDTRAINEVALEXECONFEFF ,CASE WHEN T.FGEFFEVAL=1 THEN CASE WHEN T.FGEFF=1 THEN 1 WHEN T.FGEFF=2 THEN 2 END ELSE 3 END AS FGEFF2, (T.QTTMTOTPROG/60) AS QTTMTOTPROGINHOURS, (T.QTTMTOTREAL/60) AS QTTMTOTREALINHOURS, (CAST(T.QTTMTOTPROG AS NUMERIC)*60000) AS QTTOTPROGHOURS, (CAST(T.QTTMTOTREAL AS NUMERIC)*60000) AS QTTOTREALHOURS, CT.CDGENTYPE AS CDCOURSETYPE, CT.IDGENTYPE AS IDCOURSETYPE, CT.NMGENTYPE AS NMCOURSETYPE,C.IDCOURSE+ ' - ' +C.NMCOURSE AS IDNMCOURSE, CT.IDGENTYPE+ ' - ' +CT.NMGENTYPE AS IDNMTYPECOURSE, TCONF.IDCONFIGURATION+ ' - ' +TCONF.NMCONFIGURATION AS IDNMCONFIGURATION ,CASE WHEN T.FGCANCEL=1 THEN (CAST ('#{104230}' AS VARCHAR(255))) WHEN T.FGINVALID=1 THEN (CAST ('#{110951}' AS VARCHAR(255))) WHEN T.FGSTATUS=1 THEN (CAST ('#{100470}' AS VARCHAR(255))) WHEN T.FGSTATUS=2 THEN (CAST ('#{102327}' AS VARCHAR(255))) WHEN T.FGSTATUS=3 THEN (CAST ('#{217835}' AS VARCHAR(255))) WHEN T.FGSTATUS=4 THEN (CAST ('#{201912}' AS VARCHAR(255))) WHEN T.FGSTATUS=5 THEN (CAST ('#{100481}' AS VARCHAR(255))) WHEN T.FGSTATUS=7 THEN (CAST ('#{105053}' AS VARCHAR(255))) WHEN T.FGSTATUS=8 THEN (CAST ('#{100667}' AS VARCHAR(255))) WHEN T.FGSTATUS=10 THEN (CAST ('#{100940}' AS VARCHAR(255))) END AS IDSTATUS, CASE WHEN TRM.IDTRAININGMETHOD IS NOT NULL THEN CAST(TRM.IDTRAININGMETHOD + ' - ' + TRM.NMTRAININGMETHOD AS VARCHAR(350)) ELSE NULL END AS IDNMTRAININGMETHOD ,CASE WHEN COALESCE(TEMPEVAL.CDSURVEYEXECPRE,TEMPEVAL.CDSURVEYEXECTRA,TEMPEVAL.CDSURVEYEXECREAC,TEMPEVAL.CDSURVEYEXECPOS) IS NOT NULL THEN 1 ELSE 2 END AS FGSURVEY, CASE WHEN T.FGEFFEVAL=1 THEN CASE WHEN T.FGEFF=1 THEN CAST('#{100092}' AS VARCHAR(255)) WHEN T.FGEFF=2 THEN CAST('#{100093}' AS VARCHAR(255)) ELSE CASE WHEN T.FGSTATUS=7 THEN CAST('#{217536}' AS VARCHAR(255)) ELSE CAST('#{106734}' AS VARCHAR(255)) END END ELSE CAST('#{216729}' AS VARCHAR(255)) END AS NMFGEFF, CASE WHEN T.FGINVALID IS NOT NULL THEN CASE WHEN T.FGINVALID=1 THEN CAST('#{100092}' AS VARCHAR(255)) WHEN T.FGINVALID=2 THEN CAST('#{100093}' AS VARCHAR(255)) END END AS NMFGINVALID, CASE WHEN COALESCE(T.FGINVALID,2) <> 1 AND COALESCE(T.FGCANCEL,2) <> 1 THEN CASE  WHEN T.FGSTATUS=7  THEN CASE WHEN (T.DTDEADLINE > DATEADD(DAY, 2, dateadd(dd, datediff(dd,0, getDate()), 0)) OR T.DTDEADLINE IS NULL) THEN 1 WHEN T.DTDEADLINE >= dateadd(dd, datediff(dd,0, getDate()), 0) THEN 2 ELSE 3 END WHEN T.FGSTATUS=8  THEN CASE WHEN T.DTVALID IS NOT NULL THEN CASE WHEN (T.DTVALID > DATEADD(DAY, 2, dateadd(dd, datediff(dd,0, getDate()), 0)) OR T.DTVALID IS NULL) THEN 1 WHEN T.DTVALID >= dateadd(dd, datediff(dd,0, getDate()), 0) THEN 2 ELSE 3 END  ELSE CASE WHEN T.DTPROGFINISH IS NULL OR T.DTPROGFINISH >= T.DTREALFINISH THEN 1 ELSE 3 END END WHEN T.FGSTATUS=10  AND TEMPDEADLINE.DTDEADLINE IS NOT NULL  THEN CASE WHEN (TEMPDEADLINE.DTDEADLINE > DATEADD(DAY, 2, dateadd(dd, datediff(dd,0, getDate()), 0)) OR TEMPDEADLINE.DTDEADLINE IS NULL) THEN 1 WHEN TEMPDEADLINE.DTDEADLINE >= dateadd(dd, datediff(dd,0, getDate()), 0) THEN 2 ELSE 3 END WHEN T.DTREALSTART IS NULL  THEN CASE WHEN (T.DTPROGSTART > DATEADD(DAY, 2, dateadd(dd, datediff(dd,0, getDate()), 0)) OR T.DTPROGSTART IS NULL) THEN 1 WHEN T.DTPROGSTART >= dateadd(dd, datediff(dd,0, getDate()), 0) THEN 2 ELSE 3 END WHEN (T.DTREALSTART IS NOT NULL AND T.DTREALFINISH IS NULL)  THEN CASE WHEN (T.DTPROGFINISH > DATEADD(DAY, 2, dateadd(dd, datediff(dd,0, getDate()), 0)) OR T.DTPROGFINISH IS NULL) THEN 1 WHEN T.DTPROGFINISH >= dateadd(dd, datediff(dd,0, getDate()), 0) THEN 2 ELSE 3 END WHEN T.DTREALFINISH IS NOT NULL  THEN CASE WHEN T.DTREALFINISH >= <!%TODAY%> OR T.DTPROGFINISH >= <!%TODAY%> THEN CASE WHEN (T.DTPROGFINISH > DATEADD(DAY, 2, T.DTREALFINISH) OR T.DTPROGFINISH IS NULL OR T.DTREALFINISH IS NULL) THEN 1 WHEN T.DTPROGFINISH >= T.DTREALFINISH THEN 2 ELSE 3 END  ELSE CASE WHEN (T.DTREALFINISH > DATEADD(DAY, 2, dateadd(dd, datediff(dd,0, getDate()), 0)) OR T.DTREALFINISH IS NULL) THEN 1 WHEN T.DTREALFINISH >= dateadd(dd, datediff(dd,0, getDate()), 0) THEN 2 ELSE 3 END  END END END AS FGTRAINDEADLINE, T.FGEXECTYPE, TEMPQTINST.QTINSTRUCTOR, TEMPINST.CDUSERINST, TEMPINST.NMINSTRUCTOR, TEMPINST.IDINSTRUCTOR, TEMPINST.QTWORKLOAD, ADC.IDCOMMERCIAL +' - '+ ADC.NMCOMPANY AS IDNMCOMPANY, T.VLCOSTREAL , T.FGCOSTREAL , T.DTEFF, T.VLCOSTPROG , T.FGCOSTPROG , ADEFF.NMUSER AS NMRESPEFF, CT.CDGENTYPE AS CDTYPECOURSE, CT.IDGENTYPE AS IDTYPECOURSE, CT.NMGENTYPE AS NMTYPECOURSE, 0 AS CDMONTH , CASE WHEN NRENDMONTH IS NULL THEN NULL WHEN NRENDMONTH IS NOT NULL THEN (CAST(NRENDMONTH AS VARCHAR(50)) +'/'+ CAST(NRENDYEAR AS VARCHAR(50))) END AS IDMONTH, 0  AS CDYEAR, CAST(NRENDYEAR AS VARCHAR(50)) AS NMNRENDYEAR, 0  AS CDSTATUS, TEP.CDTEAM AS CDTEAMPROG, TEP.IDTEAM AS IDTEAMPROG, TEP.NMTEAM AS NMTEAMPROG, TER.CDTEAM AS CDTEAMREAL, TER.IDTEAM AS IDTEAMREAL, TER.NMTEAM AS NMTEAMREAL, TEP.IDTEAM+' - '+TEP.NMTEAM AS IDNMTEAMPROG, TER.IDTEAM+' - '+TER.NMTEAM AS IDNMTEAMREAL, CASE WHEN COALESCE(T.FGINVALID,2) <> 1 AND COALESCE(T.FGCANCEL,2) <> 1 THEN CASE  WHEN T.FGSTATUS=7  THEN CASE WHEN (T.DTDEADLINE > DATEADD(DAY, 2, dateadd(dd, datediff(dd,0, getDate()), 0)) OR T.DTDEADLINE IS NULL) THEN CAST('#{100900}' AS VARCHAR(256)) WHEN T.DTDEADLINE >= dateadd(dd, datediff(dd,0, getDate()), 0) THEN CAST('#{201639}' AS VARCHAR(256)) ELSE CAST('#{100899}' AS VARCHAR(256)) END WHEN T.FGSTATUS=8  THEN CASE WHEN T.DTVALID IS NOT NULL THEN CASE WHEN (T.DTVALID > DATEADD(DAY, 2, dateadd(dd, datediff(dd,0, getDate()), 0)) OR T.DTVALID IS NULL) THEN CAST('#{100900}' AS VARCHAR(256)) WHEN T.DTVALID >= dateadd(dd, datediff(dd,0, getDate()), 0) THEN CAST('#{201639}' AS VARCHAR(256)) ELSE CAST('#{100899}' AS VARCHAR(256)) END  ELSE CASE WHEN T.DTPROGFINISH IS NULL OR T.DTPROGFINISH >= T.DTREALFINISH THEN CAST('#{100900}' AS VARCHAR(256)) ELSE CAST('#{100899}' AS VARCHAR(256)) END END WHEN T.FGSTATUS=10  AND TEMPDEADLINE.DTDEADLINE IS NOT NULL  THEN CASE WHEN (TEMPDEADLINE.DTDEADLINE > DATEADD(DAY, 2, dateadd(dd, datediff(dd,0, getDate()), 0)) OR TEMPDEADLINE.DTDEADLINE IS NULL) THEN CAST('#{100900}' AS VARCHAR(256)) WHEN TEMPDEADLINE.DTDEADLINE >= dateadd(dd, datediff(dd,0, getDate()), 0) THEN CAST('#{201639}' AS VARCHAR(256)) ELSE CAST('#{100899}' AS VARCHAR(256)) END WHEN T.DTREALSTART IS NULL  THEN CASE WHEN (T.DTPROGSTART > DATEADD(DAY, 2, dateadd(dd, datediff(dd,0, getDate()), 0)) OR T.DTPROGSTART IS NULL) THEN CAST('#{100900}' AS VARCHAR(256)) WHEN T.DTPROGSTART >= dateadd(dd, datediff(dd,0, getDate()), 0) THEN CAST('#{201639}' AS VARCHAR(256)) ELSE CAST('#{100899}' AS VARCHAR(256)) END WHEN (T.DTREALSTART IS NOT NULL AND T.DTREALFINISH IS NULL)  THEN CASE WHEN (T.DTPROGFINISH > DATEADD(DAY, 2, dateadd(dd, datediff(dd,0, getDate()), 0)) OR T.DTPROGFINISH IS NULL) THEN CAST('#{100900}' AS VARCHAR(256)) WHEN T.DTPROGFINISH >= dateadd(dd, datediff(dd,0, getDate()), 0) THEN CAST('#{201639}' AS VARCHAR(256)) ELSE CAST('#{100899}' AS VARCHAR(256)) END WHEN T.DTREALFINISH IS NOT NULL  THEN CASE WHEN T.DTREALFINISH >= <!%TODAY%> OR T.DTPROGFINISH >= <!%TODAY%> THEN CASE WHEN (T.DTPROGFINISH > DATEADD(DAY, 2, T.DTREALFINISH) OR T.DTPROGFINISH IS NULL OR T.DTREALFINISH IS NULL) THEN CAST('#{100900}' AS VARCHAR(256)) WHEN T.DTPROGFINISH >= T.DTREALFINISH THEN CAST('#{201639}' AS VARCHAR(256)) ELSE CAST('#{100899}' AS VARCHAR(256)) END  ELSE CASE WHEN (T.DTREALFINISH > DATEADD(DAY, 2, dateadd(dd, datediff(dd,0, getDate()), 0)) OR T.DTREALFINISH IS NULL) THEN CAST('#{100900}' AS VARCHAR(256)) WHEN T.DTREALFINISH >= dateadd(dd, datediff(dd,0, getDate()), 0) THEN CAST('#{201639}' AS VARCHAR(256)) ELSE CAST('#{100899}' AS VARCHAR(256)) END  END END END AS NMFGTRAINDEADLINE, CASE WHEN TEMPQTINST.QTINSTRUCTOR > 1 THEN (CAST ('#{300482}' AS VARCHAR(255))) WHEN (TEMPQTINST.QTINSTRUCTOR=1 AND TEMPINST.IDINSTRUCTOR IS NOT NULL) THEN CAST(TEMPINST.IDINSTRUCTOR + ' - ' + TEMPINST.NMINSTRUCTOR AS VARCHAR(350)) ELSE TEMPINST.NMINSTRUCTOR END AS NMUSERINSTRUCTOR, CASE WHEN T.FGPARTTYPE=1 THEN (CAST ('#{207292}' AS VARCHAR(255))) WHEN T.FGPARTTYPE=2 THEN (CAST ('#{105415}' AS VARCHAR(255))) END AS IDPARTTYPE, CASE WHEN T.FGEXECTYPE=1 THEN CAST('#{101417}' AS VARCHAR(50)) ELSE CAST('#{101419}' AS VARCHAR(50)) END AS NMFGEXECTYPE FROM TRTRAINING T INNER JOIN TRCOURSE C ON (T.CDCOURSE=C.CDCOURSE) INNER JOIN TRCONFIGURATION TCONF ON (T.CDCONFIGURATION=TCONF.CDCONFIGURATION) LEFT OUTER JOIN ADTEAM TEP ON (TEP.CDTEAM=T.CDTEAMPROG) LEFT OUTER JOIN ADTEAM TER ON (TER.CDTEAM=T.CDTEAMREAL) LEFT OUTER JOIN (SELECT TRTEVL.CDTRAIN, TREXPREMAX.*, TREXTRAINMAX.*, TEEVEXREAMAX.*, TEVEXPOSMAX.*, TEEVEXEFFMAX.* FROM TRTRAINING TRTEVL LEFT OUTER JOIN  ( SELECT TREXPRE.DTEVALUATION AS DTEVALUATIONPRE,  TREXPRE.CDTRAIN AS CDTRAINPRE,  TREXPRE.FGSTATUS AS FGSTATUSPRE,  TREXPRE.CDSURVEYEXEC AS CDSURVEYEXECPRE,  TREXPRE.DTDEADLINECOMPLETE AS DTDEADLINECOMPLETEPRE,  TREXPRE.CDTRAINEVALEXECONF AS CDTRAINEVALEXECONFPRE,  TRECFPRE.FGREQUIREDTOSTEP AS FGREQUIREDTOSTEPPRE,  TRECFPRE.FGUSESURVEY AS FGUSESURVEYPRE,  TRECFPRE.DSEVALUATION AS DSEVALPRE,  TRECFPRE.CDSURVEYANSWERTEAM AS CDTEAMTESTPRE,  TRECFPRE.CDSURVEYTEMPLATE AS CDTESTPRE,  TRECFPRE.FGEVALTYPE AS FGEVALTYPEPRE,  TRECFPRE.FGDEADLINE AS FGDEADLINEPRE,  TRECFPRE.QTDEADLINE AS QTDEADLINEPRE  FROM TRTRAINEVALEXECONF TREXPRE  INNER JOIN TREVALUATIONCONFIG TRECFPRE  ON ( TREXPRE.CDEVALUATIONCONFIG=TRECFPRE.CDEVALUATIONCONFIG)  WHERE TRECFPRE.FGTYPE=1)  TREXPREMAX ON ( TREXPREMAX.CDTRAINPRE=TRTEVL.CDTRAIN) LEFT OUTER JOIN  ( SELECT TREXTRAIN.DTEVALUATION,  TREXTRAIN.CDTRAIN AS CDTRAINTRAIN,  TREXTRAIN.FGSTATUS AS FGSTATUSTRA,  TREXTRAIN.CDSURVEYEXEC AS CDSURVEYEXECTRA,  TREXTRAIN.DTDEADLINECOMPLETE AS DTDEADLINECOMPLETETRA,  TREXTRAIN.CDTRAINEVALEXECONF AS CDTRAINEVALEXECONFTRA,  TEVALTRAIN.QTMAXATTEMPTS AS QTMAXATTEMPTSTRA,  TEVALTRAIN.FGUSETOAPPROVAL AS FGUSETOAPPROVALTRA,  TEVALTRAIN.FGUSESURVEY AS FGUSESURVEYTRA,  TEVALTRAIN.DSEVALUATION AS DSEVALTRAIN,  TEVALTRAIN.CDSURVEYANSWERTEAM AS CDTEAMTESTTRAIN,  TEVALTRAIN.CDSURVEYTEMPLATE AS CDTESTTRAIN,  TEVALTRAIN.FGEVALTYPE AS FGEVALTYPETRAIN,  TEVALTRAIN.FGEVALFREQUENCE AS FGEVALFREQUENCE,  TEVALTRAIN.FGDEADLINE AS FGDEADLINETRAIN,  TEVALTRAIN.QTDEADLINE AS QTDEADLINETRAIN,  TEVALTRAIN.VLMINNOTE AS VLMINNOTETRAIN,  TEVALTRAIN.FGUSECONTENTRESULT AS FGUSECONTENTRESULTTRAIN  FROM TRTRAINEVALEXECONF TREXTRAIN  INNER JOIN TREVALUATIONCONFIG TEVALTRAIN  ON ( TREXTRAIN.CDEVALUATIONCONFIG=TEVALTRAIN.CDEVALUATIONCONFIG)  WHERE TEVALTRAIN.FGTYPE=2)  TREXTRAINMAX ON ( TREXTRAINMAX.CDTRAINTRAIN=TRTEVL.CDTRAIN) LEFT OUTER JOIN  ( SELECT TEEVEXREA.DTEVALUATION AS DTEVALUATIONREAC,  TRECFREA.FGUSESURVEY AS FGUSESURVEYREAC,  TRECFREA.FGREQUIREDTOSTEP AS FGREQUIREDTOSTEPREAC,  TEEVEXREA.CDSURVEYEXEC AS CDSURVEYEXECREAC,  TEEVEXREA.CDTRAINEVALEXECONF AS CDTRAINEVALEXECONFREAC,  TEEVEXREA.DTDEADLINECOMPLETE AS DTDEADLINECOMPLETEREA,  TEEVEXREA.DTLACKEVALUATION AS DTLACKEVALUATIONREAC,  TEEVEXREA.CDTRAIN AS CDTRAINREAC,  TEEVEXREA.FGSTATUS AS FGSTATUSREAC,  TRECFREA.DSEVALUATION AS DSEVALREAC,  TRECFREA.FGEVALTYPE AS FGEVALTYPEREAC,  TRECFREA.CDSURVEYANSWERTEAM AS CDTEAMSURVEYREAC,  TRECFREA.CDSURVEYTEMPLATE AS CDSURVEYREAC,  TRECFREA.QTDEADLINE AS QTDEADLINEREAC,  TRECFREA.FGDEADLINE AS FGDEADLINEREAC,  TRECFREA.FGANONYMOUS  FROM TRTRAINEVALEXECONF TEEVEXREA  INNER JOIN TREVALUATIONCONFIG TRECFREA  ON ( TEEVEXREA.CDEVALUATIONCONFIG=TRECFREA.CDEVALUATIONCONFIG)  WHERE TRECFREA.FGTYPE=3)  TEEVEXREAMAX ON ( TEEVEXREAMAX.CDTRAINREAC=TRTEVL.CDTRAIN) LEFT OUTER JOIN  ( SELECT TEVEXPOS.DTLACKEVALUATION AS DTLACKEVALUATIONPOS,  TEVEXPOS.CDTRAIN AS CDTRAINPOS,  TEVEXPOS.FGSTATUS AS FGSTATUSPOS,  TEVEXPOS.CDSURVEYEXEC AS CDSURVEYEXECPOS,  TEVEXPOS.CDTRAINEVALEXECONF AS CDTRAINEVALEXECONFPOS,  TEVEXPOS.DTDEADLINECOMPLETE AS DTDEADLINECOMPLETEPOS,  TREVCFPOS.FGUSETOAPPROVAL AS FGUSETOAPPROVALPOS,  TREVCFPOS.QTLACK AS QTLACKPOS,  TREVCFPOS.FGUSESURVEY AS FGUSESURVEYPOS,  TREVCFPOS.FGLACK AS FGLACKPOS,  TREVCFPOS.DSEVALUATION AS DSEVALPOS,  TREVCFPOS.FGEVALTYPE AS FGEVALTYPEPOS,  TREVCFPOS.CDSURVEYANSWERTEAM AS CDTEAMTESTPOS,  TREVCFPOS.CDSURVEYTEMPLATE AS CDTESTPOS,  TREVCFPOS.FGDEADLINE AS FGDEADLINEPOS,  TREVCFPOS.QTDEADLINE AS QTDEADLINEPOS,  TREVCFPOS.VLMINNOTE AS VLMINNOTEPOS  FROM TRTRAINEVALEXECONF TEVEXPOS  INNER JOIN TREVALUATIONCONFIG TREVCFPOS  ON ( TEVEXPOS.CDEVALUATIONCONFIG=TREVCFPOS.CDEVALUATIONCONFIG)  WHERE TREVCFPOS.FGTYPE=4)  TEVEXPOSMAX ON ( TEVEXPOSMAX.CDTRAINPOS=TRTEVL.CDTRAIN) LEFT OUTER JOIN  ( SELECT TEEVEXEFF.DTLACKEVALUATION AS DTLACKEVALUATIONEFF,  TEEVEXEFF.CDTRAIN AS CDTRAINEFF,  TEEVEXEFF.FGSTATUS AS FGSTATUSEFF,  TEEVEXEFF.CDSURVEYEXEC AS CDSURVEYEXECEFF,  TEEVEXEFF.CDTRAINEVALEXECONF AS CDTRAINEVALEXECONFEFF,  TEEVEXEFF.DTDEADLINECOMPLETE AS DTDEADLINECOMPLETEEFF,  TRECFEFF.FGUSETOAPPROVAL AS FGUSETOAPPROVALEFF,  TRECFEFF.FGUSESURVEY AS FGUSESURVEYEFF,  TRECFEFF.QTLACK AS QTLACKEFF,  TRECFEFF.FGLACK AS FGLACKEFF,  TRECFEFF.DSEVALUATION AS DSEVALEFF,  TRECFEFF.FGEVALTYPE AS FGEVALTYPEEFF,  TRECFEFF.CDSURVEYANSWERTEAM AS CDTEAMTESTEFF,  TRECFEFF.CDSURVEYTEMPLATE AS CDTESTEFF,  TRECFEFF.FGDEADLINE AS FGDEADLINEEFF,  TRECFEFF.QTDEADLINE AS QTDEADLINEEFF,  TRECFEFF.VLMINNOTE AS VLMINNOTEEFF  FROM TRTRAINEVALEXECONF TEEVEXEFF  INNER JOIN TREVALUATIONCONFIG TRECFEFF  ON ( TEEVEXEFF.CDEVALUATIONCONFIG=TRECFEFF.CDEVALUATIONCONFIG)  WHERE TRECFEFF.FGTYPE=5)  TEEVEXEFFMAX ON ( TEEVEXEFFMAX.CDTRAINEFF=TRTEVL.CDTRAIN) WHERE 1=1) TEMPEVAL ON (TEMPEVAL.CDTRAIN=T.CDTRAIN) LEFT OUTER JOIN (SELECT T.CDTRAIN, MIN( CASE  WHEN TEC.FGTYPE NOT IN (4,5)  THEN TC.DTDEADLINECOMPLETE  ELSE CASE WHEN TC.FGSTATUS=1 THEN TC.DTLACKEVALUATION ELSE TC.DTDEADLINECOMPLETE END END) AS DTDEADLINE FROM TRTRAINING T INNER JOIN TRTRAINEVALEXECONF TC ON (TC.CDTRAIN=T.CDTRAIN) INNER JOIN TREVALUATIONCONFIG TEC ON (TEC.CDEVALUATIONCONFIG=TC.CDEVALUATIONCONFIG) WHERE 1=1 AND ((((T.FGPRE=1 AND TEC.FGTYPE=1) OR (T.FGTRAIN=1 AND TEC.FGTYPE=2) OR (T.FGREACTION=1 AND TEC.FGTYPE=3))  AND TC.FGSTATUS <> 3  AND TC.DTDEADLINECOMPLETE IS NOT NULL) OR  (((T.FGPOS=1 AND TEC.FGTYPE=4) OR (TEC.FGEVALTYPE IS NOT NULL AND TEC.FGTYPE=5))  AND TC.FGSTATUS <> 3  AND (( TC.FGSTATUS=1 AND TC.DTLACKEVALUATION IS NOT NULL) OR TC.DTDEADLINECOMPLETE IS NOT NULL))) GROUP BY T.CDTRAIN) TEMPDEADLINE ON (TEMPDEADLINE.CDTRAIN=T.CDTRAIN) INNER JOIN GNGENTYPE CT ON ( C.CDCOURSETYPE=CT.CDGENTYPE AND (CT.CDTYPEROLE IS NULL OR EXISTS (SELECT NULL FROM (SELECT CHKUSRPERMTYPEROLE.CDTYPEROLE AS CDTYPEROLE, CHKUSRPERMTYPEROLE.CDUSER FROM (SELECT PM.FGPERMISSIONTYPE, PM.CDUSER, PM.CDTYPEROLE FROM GNUSERPERMTYPEROLE PM WHERE 1=1 AND PM.CDUSER <> -1 AND PM.CDPERMISSION=5 /* Nao retirar este comentario */UNION ALL SELECT PM.FGPERMISSIONTYPE, US.CDUSER AS CDUSER, PM.CDTYPEROLE FROM GNUSERPERMTYPEROLE PM CROSS JOIN ADUSER US WHERE 1=1 AND PM.CDUSER=-1 AND US.FGUSERENABLED=1 AND PM.CDPERMISSION=5) CHKUSRPERMTYPEROLE GROUP BY CHKUSRPERMTYPEROLE.CDTYPEROLE, CHKUSRPERMTYPEROLE.CDUSER HAVING MAX(CHKUSRPERMTYPEROLE.FGPERMISSIONTYPE)=1) CHKPERMTYPEROLE WHERE CHKPERMTYPEROLE.CDTYPEROLE=CT.CDTYPEROLE AND (CHKPERMTYPEROLE.CDUSER=8947 OR 8947=-1)))) LEFT OUTER JOIN TRTRAININGMETHOD TRM ON (TRM.CDTRAININGMETHOD=T.CDTRAININGMETHOD) LEFT OUTER JOIN ADALLUSERS ADEFF ON ( ADEFF.CDUSER=T.CDRESPEFF) LEFT OUTER JOIN ADCOMPANY ADC ON ( T.CDCOMPANY=ADC.CDCOMPANY) LEFT OUTER JOIN ( SELECT COUNT(TRTI.CDTRAININSTRUCTOR) AS QTINSTRUCTOR, TRTI.CDTRAIN  FROM TRTRAININSTRUCTOR TRTI  GROUP BY TRTI.CDTRAIN) TEMPQTINST ON ( TEMPQTINST.CDTRAIN=T.CDTRAIN) LEFT OUTER JOIN ( SELECT TEMPTB.CDTRAIN, TRT.CDUSERINST, COALESCE (TRT.NMINSTRUCTOR, USU.NMUSER) AS NMINSTRUCTOR, USU.IDUSER AS IDINSTRUCTOR, TRT.QTWORKLOAD  FROM (SELECT TRTI.CDTRAIN FROM TRTRAININSTRUCTOR TRTI GROUP BY TRTI.CDTRAIN HAVING COUNT(TRTI.CDTRAININSTRUCTOR)=1) TEMPTB INNER JOIN TRTRAININSTRUCTOR TRT ON ( TRT.CDTRAIN=TEMPTB.CDTRAIN) LEFT OUTER JOIN ADUSER USU ON ( TRT.CDUSERINST=USU.CDUSER)) TEMPINST ON ( TEMPINST.CDTRAIN=T.CDTRAIN) WHERE T.FGPROFILE <> 1 AND CT.CDGENTYPE IN (<!%FUNC(com.softexpert.generic.parameter.InClauseBuilder, R05HRU5UWVBF, Q0RHRU5UWVBF, Q0RHRU5UWVBFT1dORVI=,, Mzc=, Q1Q=)%>)
