SELECT IDPENDENCYDOC,IDCATEGORY,IDDOCUMENT,NMTITLE,IDREVISION,DTREVISION,DTDEADLINE,NMUSERNOTIFY,CDREVISION,CODE,FGSTATUS,CAST(CDMEMBERINDEX AS VARCHAR(255)) AS CDMEMBERINDEX,FGTYPEREVISION,NMDEADLINE,FGDEADLINE,FGEXECUTORTYPE,IDTASK,FGLOGO,NMREVISIONSTATUS,FGMULTITASK,USERTASK,CDBASEDEPT,NMEXECUTOR,FGEXECUTORTPTASK, 1 AS CNT_ FROM (SELECT IDPENDENCYDOC,IDCATEGORY,IDDOCUMENT,NMTITLE,IDREVISION,DTREVISION,DTDEADLINE,NMUSERNOTIFY,CDREVISION,CODE,FGSTATUS,CAST(CDMEMBERINDEX AS VARCHAR(255)) AS CDMEMBERINDEX,FGTYPEREVISION,NMDEADLINE,FGDEADLINE,FGEXECUTORTYPE,IDTASK,FGLOGO,NMREVISIONSTATUS,FGMULTITASK,USERTASK,CDBASEDEPT,NMEXECUTOR,FGEXECUTORTPTASK FROM (SELECT DISTINCT GN.CDREVISION, GN.IDREVISION, CT.IDCATEGORY, DR.IDDOCUMENT, DR.NMTITLE, DR.CDDOCUMENT, CT.CDCATEGORY, CASE WHEN (SELECT COUNT (GNF.CDFILE) FROM/*SUB*/ DCFILE DAE, GNCOMPFILECONTCOPY GCP, GNFILE GNF WHERE DAE.CDCOMPLEXFILECONT=GCP.CDCOMPLEXFILECONT AND GCP.CDCOMPLEXFILECONT=GNF.CDCOMPLEXFILECONT AND DAE.CDDOCUMENT=DC.CDDOCUMENT AND (DAE.CDREVISION=DR.CDREVISION)) > 1 THEN '.MULTIFILE' ELSE (SELECT GNF.NMFILE FROM/*SUB*/ DCFILE DAE, GNCOMPFILECONTCOPY GCP, GNFILE GNF WHERE DAE.CDCOMPLEXFILECONT=GCP.CDCOMPLEXFILECONT AND GCP.CDCOMPLEXFILECONT=GNF.CDCOMPLEXFILECONT AND DAE.CDDOCUMENT=DC.CDDOCUMENT AND (DAE.CDREVISION=DR.CDREVISION)) END AS NMFILE, (SELECT MIN(GNF.FGDIGITALSIGNED) FROM/*SUB*/ DCFILE DCF, GNCOMPFILECONTCOPY GNC, GNFILE GNF WHERE DCF.CDCOMPLEXFILECONT=GNC.CDCOMPLEXFILECONT AND GNC.CDCOMPLEXFILECONT=GNF.CDCOMPLEXFILECONT AND DCF.CDDOCUMENT=DC.CDDOCUMENT AND (DCF.CDREVISION=DR.CDREVISION) AND (GNF.FGDIGITALSIGNED=1 OR (GNF.FGDIGITALSIGNED=2 AND GNF.FGSIGNATURETYPE=4))) AS SIGNATURE, (SELECT MAX(GNF.FGSIGNATURETYPE) FROM/*SUB*/ DCFILE DCF, GNCOMPFILECONTCOPY GNC, GNFILE GNF WHERE DCF.CDCOMPLEXFILECONT=GNC.CDCOMPLEXFILECONT AND GNC.CDCOMPLEXFILECONT=GNF.CDCOMPLEXFILECONT AND DCF.CDDOCUMENT=DC.CDDOCUMENT AND (DCF.CDREVISION=DR.CDREVISION) AND GNF.FGDIGITALSIGNED=1) AS SIGNATURETYPE, (SELECT COUNT(GNF.CDFILE) FROM/*SUB*/ DCFILE DCF, GNCOMPFILECONTCOPY GNC, GNFILE GNF WHERE DCF.CDCOMPLEXFILECONT=GNC.CDCOMPLEXFILECONT AND GNC.CDCOMPLEXFILECONT=GNF.CDCOMPLEXFILECONT AND DCF.CDDOCUMENT=DC.CDDOCUMENT AND (DCF.CDREVISION=DR.CDREVISION) AND GNF.FLMARKUPFILE IS NOT NULL) AS MARKUP, (SELECT COUNT(GNF.CDFILE) FROM/*SUB*/ DCFILE DCF, GNCOMPFILECONTCOPY GNC, GNFILE GNF, GNFILEMARKUP GNM WHERE DCF.CDCOMPLEXFILECONT=GNC.CDCOMPLEXFILECONT AND GNC.CDCOMPLEXFILECONT=GNF.CDCOMPLEXFILECONT AND GNF.CDFILE=GNM.CDFILE AND DCF.CDDOCUMENT=DC.CDDOCUMENT AND (DCF.CDREVISION=DR.CDREVISION)) AS MARKUPVUE, CT.FGLOGO AS FGLOGOCAT, TBBLOCK.CONTUSERLOCK, TBBLOCK.CDUSERLOCK, DC.CDFAVORITE, CT.CDELETRONICFILECFG, DE.CDCOMPLEXFILECONT, GN.DTREVPROGFINISH, DR.NMAUTHOR, DR.OIDREVISIONFORM, DR.OIDENTITYREG, EFF.OIDENTITY, GRC.FGREVAPPROVALMODE, (SELECT COUNT(GNF.OIDFORM) FROM GNFORMCFGTEMP GNF WHERE GNF.CDELETRONICFILECFG=CFG.CDELETRONICFILECFG AND GNF.OIDFORM IS NOT NULL) AS QTFORM, CFG.FGTYPEMODEL, CFG.FGFILETYPE, CFG.FGSIGNTYPE, CFG.NMIDTEMPLATEDOCUSIGN, CFG.NMTEMPLATEDOCUSIGN, CFG.FGDOCUSIGNROUTETYPE, CAST(' > ' + CASE GN.FGSTATUS WHEN 1 THEN 'Elaboração' WHEN 2 THEN 'Consenso' WHEN 3 THEN 'Aprovação' WHEN 4 THEN 'Homologação' WHEN 5 THEN 'Encerramento' ELSE 'Executar revisão' END AS VARCHAR(255)) AS IDPENDENCYDOC, 1 AS FGTYPEREVISION, DR.CDDOCUMENT AS CODE, GN.DTREVISION, GS.FGSTAGE, CASE WHEN (( GS.DTDEADLINE > (DATEADD(DAY, COALESCE((SELECT QTDAYS FROM ADMAILTASKEXEC WHERE CDMAILTASKEXEC=(SELECT TASK.CDAHEAD FROM ADMAILTASKREL TASK WHERE TASK.CDMAILTASKREL=(SELECT TBL.CDMAILTASKSETTINGS FROM CONOTIFICATION TBL))), 0), CAST('2020-12-23' AS DATETIME)))) OR (GS.DTDEADLINE IS NULL)) THEN 1 WHEN (( GS.DTDEADLINE=CAST('2020-12-23' AS DATETIME)) OR (GS.DTDEADLINE > CAST('2020-12-23' AS DATETIME))) THEN 2 ELSE 3  END AS FGDEADLINE,  CASE WHEN (( GS.DTDEADLINE > (DATEADD(DAY, COALESCE((SELECT QTDAYS FROM ADMAILTASKEXEC WHERE CDMAILTASKEXEC=(SELECT TASK.CDAHEAD FROM ADMAILTASKREL TASK WHERE TASK.CDMAILTASKREL=(SELECT TBL.CDMAILTASKSETTINGS FROM CONOTIFICATION TBL))), 0), CAST('2020-12-23' AS DATETIME)))) OR (GS.DTDEADLINE IS NULL)) THEN 'Em dia' WHEN (( GS.DTDEADLINE=CAST('2020-12-23' AS DATETIME)) OR (GS.DTDEADLINE > CAST('2020-12-23' AS DATETIME))) THEN 'Próximo do vencimento' ELSE 'Em atraso'  END AS NMDEADLINE, CAST(NULL AS INTEGER) AS FGLOGO, CAST(NULL AS VARCHAR(255)) AS NMREVISIONSTATUS, CAST(NULL AS INTEGER) AS CDPROCESS, CAST(NULL AS INTEGER) AS CDPROCESSMODEL, CAST(NULL AS VARCHAR(255)) AS ID_PROCESS, CAST(NULL AS VARCHAR(255)) AS IDPROCESSMODEL, CAST(NULL AS VARCHAR(255)) AS NMPROCESS, CAST(NULL AS VARCHAR(255)) AS NMSTRUCT, CAST(NULL AS VARCHAR(255)) AS NMUSERSTART, CAST(NULL AS DATETIME) AS DTSTART, CAST(NULL AS VARCHAR(255)) AS NMROLE, CAST(NULL AS DATETIME) AS DTESTIMATEDFINISH, CAST(NULL AS INTEGER) AS FGEXECUTORTYPE, CAST(NULL AS VARCHAR(255)) AS OID_PRO, CAST(NULL AS VARCHAR(255)) AS IDTASK, CAST(NULL AS INTEGER) AS CDUSER, CAST(NULL AS INTEGER) AS FGMULTITASK, CAST(NULL AS INTEGER) AS USERTASK, CAST(NULL AS VARCHAR(255)) AS NMPOSITION, CAST(NULL AS INTEGER) AS CDBASEDEPT, CAST(NULL AS VARCHAR(255)) AS NMEXECUTOR, CAST(NULL AS INTEGER) AS FGEXECUTORTPTASK, CAST(NULL AS INTEGER) AS QTD_ATT, CAST(NULL AS INTEGER) AS QTD_COMM, CAST(GS.CDMEMBERINDEX AS VARCHAR (255)) AS CDMEMBERINDEX, GS.DTDEADLINE AS DTDEADLINE, GN.FGSTATUS, CASE WHEN GS.FGSTAGE=1 THEN 'Elaboração' WHEN GS.FGSTAGE=2 THEN 'Consenso' WHEN GS.FGSTAGE=3 THEN 'Aprovação' WHEN GS.FGSTAGE=4 THEN 'Homologação' END AS STATUSREVISION, AUSER.NMUSER AS NMUSERNOTIFY, AUSER.CDUSER AS CDRESPONSIBLE FROM GNREVISION GN INNER JOIN DCDOCREVISION DR ON (DR.CDREVISION=GN.CDREVISION) INNER JOIN DCFILE DE ON (DE.CDREVISION=DR.CDREVISION) INNER JOIN DCDOCUMENT DC ON (DR.CDDOCUMENT=DC.CDDOCUMENT) INNER JOIN DCCATEGORY CT ON (DR.CDCATEGORY=CT.CDCATEGORY) LEFT OUTER JOIN (SELECT DISTINCT MAX(GNF.CDUSERLOCK) AS CDUSERLOCK, COUNT(GNF.CDUSERLOCK) AS CONTUSERLOCK, DCF.CDDOCUMENT, DCF.CDREVISION FROM GNFILE GNF INNER JOIN DCFILE DCF ON (DCF.CDCOMPLEXFILECONT=GNF.CDCOMPLEXFILECONT) WHERE GNF.CDUSERLOCK IS NOT NULL GROUP BY/*SUB*/ DCF.CDDOCUMENT, DCF.CDREVISION) TBBLOCK ON (TBBLOCK.CDDOCUMENT=DR.CDDOCUMENT AND TBBLOCK.CDREVISION=DR.CDREVISION) LEFT OUTER JOIN GNREVCONFIG GRC ON (GN.CDREVCONFIG=GRC.CDREVCONFIG) LEFT OUTER JOIN EFREVISIONFORM ERF ON (DR.OIDREVISIONFORM=ERF.OID) LEFT OUTER JOIN EFFORM EFF ON (ERF.OIDFORM=EFF.OID) LEFT OUTER JOIN GNELETRONICFILECFG CFG ON (CT.CDELETRONICFILECFG=CFG.CDELETRONICFILECFG)  INNER JOIN GNREVISIONSTAGMEM GS ON (GN.CDREVISION=GS.CDREVISION) LEFT OUTER JOIN GNREVISIONSTATUS GRS ON (GRS.CDREVISIONSTATUS=GN.CDREVISIONSTATUS) INNER JOIN (SELECT GSTEMP.CDREVISION, GSTEMP.CDMEMBERINDEX, UDPTEMP.CDUSER FROM GNREVISIONSTAGMEM GSTEMP, ADUSERDEPTPOS UDPTEMP WHERE GSTEMP.FGACCESSTYPE =2 AND UDPTEMP.CDDEPARTMENT=GSTEMP.CDDEPARTMENT UNION/*sub*/ ALL SELECT GSTEMP.CDREVISION, GSTEMP.CDMEMBERINDEX, UDPTEMP.CDUSER FROM GNREVISIONSTAGMEM GSTEMP, ADUSERDEPTPOS UDPTEMP WHERE GSTEMP.FGACCESSTYPE =4 AND UDPTEMP.CDPOSITION =GSTEMP.CDPOSITION UNION/*sub*/ ALL SELECT GSTEMP.CDREVISION, GSTEMP.CDMEMBERINDEX, UDPTEMP.CDUSER FROM GNREVISIONSTAGMEM GSTEMP, ADUSERDEPTPOS UDPTEMP WHERE GSTEMP.FGACCESSTYPE =3 AND UDPTEMP.CDPOSITION =GSTEMP.CDPOSITION AND UDPTEMP.CDDEPARTMENT=GSTEMP.CDDEPARTMENT UNION/*sub*/ ALL SELECT GSTEMP.CDREVISION, GSTEMP.CDMEMBERINDEX, GSTEMP.CDUSER FROM GNREVISIONSTAGMEM GSTEMP WHERE GSTEMP.FGACCESSTYPE=5 UNION/*sub*/ ALL SELECT GSTEMP.CDREVISION, GSTEMP.CDMEMBERINDEX, TEAMTEMP.CDUSER FROM GNREVISIONSTAGMEM GSTEMP, ADTEAMUSER TEAMTEMP WHERE GSTEMP.FGACCESSTYPE=1 AND GSTEMP.CDTEAM =TEAMTEMP.CDTEAM) STAGMEMTEMP ON (STAGMEMTEMP.CDREVISION =GS.CDREVISION AND STAGMEMTEMP.CDMEMBERINDEX=GS.CDMEMBERINDEX) INNER JOIN ADUSER AUSER ON (AUSER.CDUSER=STAGMEMTEMP.CDUSER) WHERE 1=1 AND DC.FGSTATUS IN (1,3) AND (ERF.FGRESPONSIVEFORM <> 1 OR ERF.FGRESPONSIVEFORM IS NULL) AND GS.FGSTAGE=GN.FGSTATUS AND GS.DTAPPROVAL IS NULL AND (AUSER.FGUSERENABLED=1 OR GS.FGACCESSTYPE=5) AND GS.NRCYCLE=(SELECT MAX(NRCYCLE) FROM GNREVISIONSTAGMEM WHERE CDREVISION=GN.CDREVISION AND DTAPPROVAL IS NULL) AND GS.NRSEQUENCE=(SELECT MIN(NRSEQUENCE) FROM GNREVISIONSTAGMEM WHERE CDREVISION=GN.CDREVISION AND DTAPPROVAL IS NULL AND NRCYCLE=GS.NRCYCLE AND FGSTAGE=GS.FGSTAGE) AND AUSER.CDUSER=11160 UNION/*SUB*/ ALL SELECT DISTINCT GN.CDREVISION, GN.IDREVISION, CT.IDCATEGORY, DR.IDDOCUMENT, DR.NMTITLE, DR.CDDOCUMENT, CT.CDCATEGORY, CASE WHEN (SELECT COUNT (GNF.CDFILE) FROM/*SUB*/ DCFILE DAE, GNCOMPFILECONTCOPY GCP, GNFILE GNF WHERE DAE.CDCOMPLEXFILECONT=GCP.CDCOMPLEXFILECONT AND GCP.CDCOMPLEXFILECONT=GNF.CDCOMPLEXFILECONT AND DAE.CDDOCUMENT=DC.CDDOCUMENT AND (DAE.CDREVISION=DR.CDREVISION)) > 1 THEN '.MULTIFILE' ELSE (SELECT GNF.NMFILE FROM/*SUB*/ DCFILE DAE, GNCOMPFILECONTCOPY GCP, GNFILE GNF WHERE DAE.CDCOMPLEXFILECONT=GCP.CDCOMPLEXFILECONT AND GCP.CDCOMPLEXFILECONT=GNF.CDCOMPLEXFILECONT AND DAE.CDDOCUMENT=DC.CDDOCUMENT AND (DAE.CDREVISION=DR.CDREVISION)) END AS NMFILE, (SELECT MIN(GNF.FGDIGITALSIGNED) FROM/*SUB*/ DCFILE DCF, GNCOMPFILECONTCOPY GNC, GNFILE GNF WHERE DCF.CDCOMPLEXFILECONT=GNC.CDCOMPLEXFILECONT AND GNC.CDCOMPLEXFILECONT=GNF.CDCOMPLEXFILECONT AND DCF.CDDOCUMENT=DC.CDDOCUMENT AND (DCF.CDREVISION=DR.CDREVISION) AND (GNF.FGDIGITALSIGNED=1 OR (GNF.FGDIGITALSIGNED=2 AND GNF.FGSIGNATURETYPE=4))) AS SIGNATURE, (SELECT MAX(GNF.FGSIGNATURETYPE) FROM/*SUB*/ DCFILE DCF, GNCOMPFILECONTCOPY GNC, GNFILE GNF WHERE DCF.CDCOMPLEXFILECONT=GNC.CDCOMPLEXFILECONT AND GNC.CDCOMPLEXFILECONT=GNF.CDCOMPLEXFILECONT AND DCF.CDDOCUMENT=DC.CDDOCUMENT AND (DCF.CDREVISION=DR.CDREVISION) AND GNF.FGDIGITALSIGNED=1) AS SIGNATURETYPE, (SELECT COUNT(GNF.CDFILE) FROM/*SUB*/ DCFILE DCF, GNCOMPFILECONTCOPY GNC, GNFILE GNF WHERE DCF.CDCOMPLEXFILECONT=GNC.CDCOMPLEXFILECONT AND GNC.CDCOMPLEXFILECONT=GNF.CDCOMPLEXFILECONT AND DCF.CDDOCUMENT=DC.CDDOCUMENT AND (DCF.CDREVISION=DR.CDREVISION) AND GNF.FLMARKUPFILE IS NOT NULL) AS MARKUP, (SELECT COUNT(GNF.CDFILE) FROM/*SUB*/ DCFILE DCF, GNCOMPFILECONTCOPY GNC, GNFILE GNF, GNFILEMARKUP GNM WHERE DCF.CDCOMPLEXFILECONT=GNC.CDCOMPLEXFILECONT AND GNC.CDCOMPLEXFILECONT=GNF.CDCOMPLEXFILECONT AND GNF.CDFILE=GNM.CDFILE AND DCF.CDDOCUMENT=DC.CDDOCUMENT AND (DCF.CDREVISION=DR.CDREVISION)) AS MARKUPVUE, CT.FGLOGO AS FGLOGOCAT, TBBLOCK.CONTUSERLOCK, TBBLOCK.CDUSERLOCK, DC.CDFAVORITE, CT.CDELETRONICFILECFG, DE.CDCOMPLEXFILECONT, GN.DTREVPROGFINISH, DR.NMAUTHOR, DR.OIDREVISIONFORM, DR.OIDENTITYREG, EFF.OIDENTITY, GRC.FGREVAPPROVALMODE, (SELECT COUNT(GNF.OIDFORM) FROM GNFORMCFGTEMP GNF WHERE GNF.CDELETRONICFILECFG=CFG.CDELETRONICFILECFG AND GNF.OIDFORM IS NOT NULL) AS QTFORM, CFG.FGTYPEMODEL, CFG.FGFILETYPE, CFG.FGSIGNTYPE, CFG.NMIDTEMPLATEDOCUSIGN, CFG.NMTEMPLATEDOCUSIGN, CFG.FGDOCUSIGNROUTETYPE, CAST(' > ' + CASE GN.FGSTATUS WHEN 1 THEN 'Elaboração' WHEN 2 THEN 'Consenso' WHEN 3 THEN 'Aprovação' WHEN 4 THEN 'Homologação' WHEN 5 THEN 'Encerramento' ELSE 'Executar revisão' END AS VARCHAR(255)) AS IDPENDENCYDOC, 1 AS FGTYPEREVISION, DR.CDDOCUMENT AS CODE, GN.DTREVISION, CAST(NULL AS INTEGER) AS FGSTAGE, CASE WHEN (( GN.DTREVPROGFINISH > (DATEADD(DAY, COALESCE((SELECT QTDAYS FROM ADMAILTASKEXEC WHERE CDMAILTASKEXEC=(SELECT TASK.CDAHEAD FROM ADMAILTASKREL TASK WHERE TASK.CDMAILTASKREL=(SELECT TBL.CDMAILTASKSETTINGS FROM CONOTIFICATION TBL))), 0), CAST('2020-12-23' AS DATETIME)))) OR (GN.DTREVPROGFINISH IS NULL)) THEN 1 WHEN (( GN.DTREVPROGFINISH=CAST('2020-12-23' AS DATETIME)) OR (GN.DTREVPROGFINISH > CAST('2020-12-23' AS DATETIME))) THEN 2 ELSE 3  END AS FGDEADLINE,  CASE WHEN (( GN.DTREVPROGFINISH > (DATEADD(DAY, COALESCE((SELECT QTDAYS FROM ADMAILTASKEXEC WHERE CDMAILTASKEXEC=(SELECT TASK.CDAHEAD FROM ADMAILTASKREL TASK WHERE TASK.CDMAILTASKREL=(SELECT TBL.CDMAILTASKSETTINGS FROM CONOTIFICATION TBL))), 0), CAST('2020-12-23' AS DATETIME)))) OR (GN.DTREVPROGFINISH IS NULL)) THEN 'Em dia' WHEN (( GN.DTREVPROGFINISH=CAST('2020-12-23' AS DATETIME)) OR (GN.DTREVPROGFINISH > CAST('2020-12-23' AS DATETIME))) THEN 'Próximo do vencimento' ELSE 'Em atraso'  END AS NMDEADLINE, CAST(NULL AS INTEGER) AS FGLOGO, CAST(NULL AS VARCHAR(255)) AS NMREVISIONSTATUS, CAST(NULL AS INTEGER) AS CDPROCESS, CAST(NULL AS INTEGER) AS CDPROCESSMODEL, CAST(NULL AS VARCHAR(255)) AS ID_PROCESS, CAST(NULL AS VARCHAR(255)) AS IDPROCESSMODEL, CAST(NULL AS VARCHAR(255)) AS NMPROCESS, CAST(NULL AS VARCHAR(255)) AS NMSTRUCT, CAST(NULL AS VARCHAR(255)) AS NMUSERSTART, CAST(NULL AS DATETIME) AS DTSTART, CAST(NULL AS VARCHAR(255)) AS NMROLE, CAST(NULL AS DATETIME) AS DTESTIMATEDFINISH, CAST(NULL AS INTEGER) AS FGEXECUTORTYPE, CAST(NULL AS VARCHAR(255)) AS OID_PRO, CAST(NULL AS VARCHAR(255)) AS IDTASK, CAST(NULL AS INTEGER) AS CDUSER, CAST(NULL AS INTEGER) AS FGMULTITASK, CAST(NULL AS INTEGER) AS USERTASK, CAST(NULL AS VARCHAR(255)) AS NMPOSITION, CAST(NULL AS INTEGER) AS CDBASEDEPT, CAST(NULL AS VARCHAR(255)) AS NMEXECUTOR, CAST(NULL AS INTEGER) AS FGEXECUTORTPTASK, CAST(NULL AS INTEGER) AS QTD_ATT, CAST(NULL AS INTEGER) AS QTD_COMM, CAST(GN.CDREVUSERCREATE AS VARCHAR(255)) AS CDMEMBERINDEX, GN.DTREVPROGFINISH AS DTDEADLINE, GN.FGSTATUS, 'Liberação' AS STATUSREVISION, AUSER.NMUSER AS NMUSERNOTIFY, AUSER.CDUSER AS CDRESPONSIBLE FROM GNREVISION GN INNER JOIN DCDOCREVISION DR ON (DR.CDREVISION=GN.CDREVISION) INNER JOIN DCFILE DE ON (DE.CDREVISION=DR.CDREVISION) INNER JOIN DCDOCUMENT DC ON (DR.CDDOCUMENT=DC.CDDOCUMENT) INNER JOIN DCCATEGORY CT ON (DR.CDCATEGORY=CT.CDCATEGORY) LEFT OUTER JOIN (SELECT DISTINCT MAX(GNF.CDUSERLOCK) AS CDUSERLOCK, COUNT(GNF.CDUSERLOCK) AS CONTUSERLOCK, DCF.CDDOCUMENT, DCF.CDREVISION FROM GNFILE GNF INNER JOIN DCFILE DCF ON (DCF.CDCOMPLEXFILECONT=GNF.CDCOMPLEXFILECONT) WHERE GNF.CDUSERLOCK IS NOT NULL GROUP BY/*SUB*/ DCF.CDDOCUMENT, DCF.CDREVISION) TBBLOCK ON (TBBLOCK.CDDOCUMENT=DR.CDDOCUMENT AND TBBLOCK.CDREVISION=DR.CDREVISION) LEFT OUTER JOIN GNREVCONFIG GRC ON (GN.CDREVCONFIG=GRC.CDREVCONFIG) LEFT OUTER JOIN EFREVISIONFORM ERF ON (DR.OIDREVISIONFORM=ERF.OID) LEFT OUTER JOIN EFFORM EFF ON (ERF.OIDFORM=EFF.OID) LEFT OUTER JOIN GNELETRONICFILECFG CFG ON (CT.CDELETRONICFILECFG=CFG.CDELETRONICFILECFG) LEFT OUTER JOIN ADPARAMS ADP ON (ADP.CDISOSYSTEM=21 AND ADP.CDPARAM=151 AND ADP.IDPARAM='1') LEFT JOIN( SELECT MAX(CASE WHEN PERM.CDPERMISSION=8 THEN PERM.FGPERMISSIONTYPE ELSE NULL END) AS FGACCESSREVISION, PERM.CDUSER, PERM.CDDOCUMENT FROM/*sub*/ (SELECT PM.FGPERMISSIONTYPE, PM.CDPERMISSION, PM.CDUSER, PM.CDDOCUMENT FROM/*sub*/ DCUSERPERMISSION_V PM WHERE 1=1 AND PM.CDUSER <> -1 AND PM.CDPERMISSION IN (8) /*sub*/UNION ALL SELECT PM.FGPERMISSIONTYPE, PM.CDPERMISSION, US.CDUSER, PM.CDDOCUMENT FROM/*sub*/ DCUSERPERMISSION_V PM CROSS JOIN ADUSER US WHERE 1=1 AND PM.CDUSER=-1 AND US.FGUSERENABLED=1 AND PM.CDPERMISSION IN (8))PERM WHERE 1=1 GROUP BY PERM.CDUSER, PERM.CDDOCUMENT) Z ON DC.CDDOCUMENT=Z.CDDOCUMENT  LEFT OUTER JOIN ADUSER AUSER ON (AUSER.CDUSER=Z.CDUSER) LEFT OUTER JOIN GNREVISIONSTATUS GRS ON (GRS.CDREVISIONSTATUS=GN.CDREVISIONSTATUS) WHERE 1=1 AND DC.FGSTATUS IN (1,3) AND (ERF.FGRESPONSIVEFORM <> 1 OR ERF.FGRESPONSIVEFORM IS NULL) AND (( ADP.IDPARAM IS NULL AND (FGACCESSREVISION=1)) OR (ADP.IDPARAM='1' AND AUSER.CDUSER=GN.CDREVUSERCREATE)) AND EXISTS (SELECT CDUSUARIO FROM USUACESS WHERE CDUSUARIO=Z.CDUSER AND CDPRODUTO IN (73, 88) AND CDITEM='2200024') AND GN.FGSTATUS=5 AND Z.CDUSER=11160) TB WHERE 1=1 UNION/*SUB*/ ALL SELECT IDPENDENCYDOC,IDCATEGORY,IDDOCUMENT,NMTITLE,IDREVISION,DTREVISION,DTDEADLINE,NMUSERNOTIFY,CDREVISION,CODE,FGSTATUS,CAST(CDMEMBERINDEX AS VARCHAR(255)) AS CDMEMBERINDEX,FGTYPEREVISION,NMDEADLINE,FGDEADLINE,FGEXECUTORTYPE,IDTASK,FGLOGO,NMREVISIONSTATUS,FGMULTITASK,USERTASK,CDBASEDEPT,NMEXECUTOR,FGEXECUTORTPTASK FROM (SELECT GNRP.CDREVISION, TASK.IDOBJECT AS IDTASK, PRS.IDOBJECT AS OID_PRO, ACT.FGEXECUTORTYPE, TASK.FGEXECUTORTPTASK, PRS.CDPROCESS, PRS.CDPROCESSMODEL, PRS.IDPROCESS AS ID_PROCESS, PRS.IDPROCESSMODEL, PRS.NMPROCESSMODEL, PRS.NMPROCESS, STR.NMSTRUCT, PRS.NMUSERSTART, PRS.DTSTART, ACT.NMROLE, ACT.NMUSER AS NMEXECUTOR, ACT.FGMULTITASK, TASK.CDUSER AS USERTASK, TASK.CDUSER, STR.VLTIMEEXECUTION, STR.DTESTIMATEDFINISH, STR.IDPROCESS, PRS.IDOBJECT, STR.DTENABLED, STR.TMENABLED, PRS.VLTIMEFINISH, ACT.QTHOURS, TASK.CDBASEDEPT, ACT.NMPOSITION, (SELECT COUNT(WFDOC.IDPROCESS) FROM WFPROCDOCUMENT WFDOC WHERE WFDOC.IDPROCESS=PRS.IDOBJECT) AS QTD_DOC, (SELECT COUNT(WFATT.IDPROCESS) FROM WFPROCATTACHMENT WFATT WHERE WFATT.IDPROCESS=PRS.IDOBJECT) AS QTD_ATT, (SELECT COUNT(WFH.IDOBJECT) FROM WFHISTORY WFH WHERE WFH.IDPROCESS=PRS.IDOBJECT AND WFH.FGTYPE IN(9, 11) AND WFH.DSCOMMENT IS NOT NULL) AS QTD_COMM, GN.IDREVISION, GN.FGSTATUS, GRS.CDREVISIONSTATUS, GRS.FGLOGO AS FGLOGOREV, GRS.IDREVISIONSTATUS, GRS.NMREVISIONSTATUS, 2 AS FGTYPEREVISION, GRS.FGLOGO, STR.DTESTIMATEDFINISH AS DTDEADLINE, CAST( CAST(COALESCE(CAST(TASK.CDUSER AS VARCHAR(255)),'') + '|' + TASK.IDOBJECT AS VARCHAR(255)) + '|' + PRS.IDOBJECT AS VARCHAR(255)) AS CDMEMBERINDEX, CT.IDCATEGORY, DR.IDDOCUMENT, DR.NMTITLE, DR.CDDOCUMENT, CT.CDCATEGORY, CASE WHEN (SELECT COUNT (GNF.CDFILE) FROM/*SUB*/ DCFILE DAE, GNCOMPFILECONTCOPY GCP, GNFILE GNF WHERE DAE.CDCOMPLEXFILECONT=GCP.CDCOMPLEXFILECONT AND GCP.CDCOMPLEXFILECONT=GNF.CDCOMPLEXFILECONT AND DAE.CDDOCUMENT=DC.CDDOCUMENT AND (DAE.CDREVISION=DR.CDREVISION)) > 1 THEN '.MULTIFILE' ELSE (SELECT GNF.NMFILE FROM/*SUB*/ DCFILE DAE, GNCOMPFILECONTCOPY GCP, GNFILE GNF WHERE DAE.CDCOMPLEXFILECONT=GCP.CDCOMPLEXFILECONT AND GCP.CDCOMPLEXFILECONT=GNF.CDCOMPLEXFILECONT AND DAE.CDDOCUMENT=DC.CDDOCUMENT AND (DAE.CDREVISION=DR.CDREVISION)) END AS NMFILE, (SELECT MIN(GNF.FGDIGITALSIGNED) FROM/*SUB*/ DCFILE DCF, GNCOMPFILECONTCOPY GNC, GNFILE GNF WHERE DCF.CDCOMPLEXFILECONT=GNC.CDCOMPLEXFILECONT AND GNC.CDCOMPLEXFILECONT=GNF.CDCOMPLEXFILECONT AND DCF.CDDOCUMENT=DC.CDDOCUMENT AND (DCF.CDREVISION=DR.CDREVISION) AND (GNF.FGDIGITALSIGNED=1 OR (GNF.FGDIGITALSIGNED=2 AND GNF.FGSIGNATURETYPE=4))) AS SIGNATURE, (SELECT MAX(GNF.FGSIGNATURETYPE) FROM/*SUB*/ DCFILE DCF, GNCOMPFILECONTCOPY GNC, GNFILE GNF WHERE DCF.CDCOMPLEXFILECONT=GNC.CDCOMPLEXFILECONT AND GNC.CDCOMPLEXFILECONT=GNF.CDCOMPLEXFILECONT AND DCF.CDDOCUMENT=DC.CDDOCUMENT AND (DCF.CDREVISION=DR.CDREVISION) AND GNF.FGDIGITALSIGNED=1) AS SIGNATURETYPE, (SELECT COUNT(GNF.CDFILE) FROM/*SUB*/ DCFILE DCF, GNCOMPFILECONTCOPY GNC, GNFILE GNF WHERE DCF.CDCOMPLEXFILECONT=GNC.CDCOMPLEXFILECONT AND GNC.CDCOMPLEXFILECONT=GNF.CDCOMPLEXFILECONT AND DCF.CDDOCUMENT=DC.CDDOCUMENT AND (DCF.CDREVISION=DR.CDREVISION) AND GNF.FLMARKUPFILE IS NOT NULL) AS MARKUP, (SELECT COUNT(GNF.CDFILE) FROM/*SUB*/ DCFILE DCF, GNCOMPFILECONTCOPY GNC, GNFILE GNF, GNFILEMARKUP GNM WHERE DCF.CDCOMPLEXFILECONT=GNC.CDCOMPLEXFILECONT AND GNC.CDCOMPLEXFILECONT=GNF.CDCOMPLEXFILECONT AND GNF.CDFILE=GNM.CDFILE AND DCF.CDDOCUMENT=DC.CDDOCUMENT AND (DCF.CDREVISION=DR.CDREVISION)) AS MARKUPVUE, CT.FGLOGO AS FGLOGOCAT, TBBLOCK.CONTUSERLOCK, TBBLOCK.CDUSERLOCK, DC.CDFAVORITE, CT.CDELETRONICFILECFG, DE.CDCOMPLEXFILECONT, GN.DTREVPROGFINISH, DR.NMAUTHOR, DR.OIDREVISIONFORM, DR.OIDENTITYREG, EFF.OIDENTITY, GRC.FGREVAPPROVALMODE, (SELECT COUNT(GNF.OIDFORM) FROM GNFORMCFGTEMP GNF WHERE GNF.CDELETRONICFILECFG=CFG.CDELETRONICFILECFG AND GNF.OIDFORM IS NOT NULL) AS QTFORM, CFG.FGTYPEMODEL, CFG.FGFILETYPE, CFG.FGSIGNTYPE, CFG.NMIDTEMPLATEDOCUSIGN, CFG.NMTEMPLATEDOCUSIGN, CFG.FGDOCUSIGNROUTETYPE, CAST(' > ' + CASE GN.FGSTATUS WHEN 1 THEN 'Elaboração' WHEN 2 THEN 'Consenso' WHEN 3 THEN 'Aprovação' WHEN 4 THEN 'Homologação' WHEN 5 THEN 'Encerramento' ELSE 'Executar revisão' END AS VARCHAR(255)) AS IDPENDENCYDOC, DR.CDDOCUMENT AS CODE, GN.DTREVISION, -1 AS FGSTAGE, CASE WHEN (( STR.DTESTIMATEDFINISH > (DATEADD(DAY, COALESCE((SELECT QTDAYS FROM ADMAILTASKEXEC WHERE CDMAILTASKEXEC=(SELECT TASK.CDAHEAD FROM ADMAILTASKREL TASK WHERE TASK.CDMAILTASKREL=(SELECT TBL.CDMAILTASKSETTINGS FROM CONOTIFICATION TBL))), 0), CAST('2020-12-23' AS DATETIME)))) OR (STR.DTESTIMATEDFINISH IS NULL)) THEN 1 WHEN (( STR.DTESTIMATEDFINISH=CAST('2020-12-23' AS DATETIME)) OR (STR.DTESTIMATEDFINISH > CAST('2020-12-23' AS DATETIME))) THEN 2 ELSE 3  END AS FGDEADLINE,  CASE WHEN (( STR.DTESTIMATEDFINISH > (DATEADD(DAY, COALESCE((SELECT QTDAYS FROM ADMAILTASKEXEC WHERE CDMAILTASKEXEC=(SELECT TASK.CDAHEAD FROM ADMAILTASKREL TASK WHERE TASK.CDMAILTASKREL=(SELECT TBL.CDMAILTASKSETTINGS FROM CONOTIFICATION TBL))), 0), CAST('2020-12-23' AS DATETIME)))) OR (STR.DTESTIMATEDFINISH IS NULL)) THEN 'Em dia' WHEN (( STR.DTESTIMATEDFINISH=CAST('2020-12-23' AS DATETIME)) OR (STR.DTESTIMATEDFINISH > CAST('2020-12-23' AS DATETIME))) THEN 'Próximo do vencimento' ELSE 'Em atraso'  END AS NMDEADLINE, AUSER.NMUSER AS NMUSERNOTIFY, AUSER.CDUSER AS CDRESPONSIBLE, GRS.NMREVISIONSTATUS AS STATUSREVISION FROM WFTASK TASK INNER JOIN WFACTIVITY ACT ON (TASK.IDACTIVITY=ACT.IDOBJECT) INNER JOIN WFSTRUCT STR ON (ACT.IDOBJECT=STR.IDOBJECT) INNER JOIN WFPROCESS PRS ON (STR.IDPROCESS=PRS.IDOBJECT) INNER JOIN GNREVISIONPROCESS GNRP ON (GNRP.IDPROCESS=PRS.IDOBJECT) INNER JOIN GNREVISION GN ON (GNRP.CDREVISION=GN.CDREVISION) INNER JOIN GNREVISIONSTATUS GRS ON (GRS.CDREVISIONSTATUS=GN.CDREVISIONSTATUS) INNER JOIN ADUSER AUSER ON (1=1) INNER JOIN DCDOCREVISION DR ON (DR.CDREVISION=GN.CDREVISION) INNER JOIN DCFILE DE ON (DE.CDREVISION=DR.CDREVISION) INNER JOIN DCDOCUMENT DC ON (DR.CDDOCUMENT=DC.CDDOCUMENT) INNER JOIN DCCATEGORY CT ON (DR.CDCATEGORY=CT.CDCATEGORY) LEFT OUTER JOIN (SELECT DISTINCT MAX(GNF.CDUSERLOCK) AS CDUSERLOCK, COUNT(GNF.CDUSERLOCK) AS CONTUSERLOCK, DCF.CDDOCUMENT, DCF.CDREVISION FROM GNFILE GNF INNER JOIN DCFILE DCF ON (DCF.CDCOMPLEXFILECONT=GNF.CDCOMPLEXFILECONT) WHERE GNF.CDUSERLOCK IS NOT NULL GROUP BY/*SUB*/ DCF.CDDOCUMENT, DCF.CDREVISION) TBBLOCK ON (TBBLOCK.CDDOCUMENT=DR.CDDOCUMENT AND TBBLOCK.CDREVISION=DR.CDREVISION) LEFT OUTER JOIN GNREVCONFIG GRC ON (GN.CDREVCONFIG=GRC.CDREVCONFIG) LEFT OUTER JOIN EFREVISIONFORM ERF ON (DR.OIDREVISIONFORM=ERF.OID) LEFT OUTER JOIN EFFORM EFF ON (ERF.OIDFORM=EFF.OID) LEFT OUTER JOIN GNELETRONICFILECFG CFG ON (CT.CDELETRONICFILECFG=CFG.CDELETRONICFILECFG) WHERE 1=1 AND (PRS.FGSTATUS=1 OR PRS.FGSTATUS=5) AND TASK.FGTYPE=1 AND TASK.FGEXECUTEACTION IS NULL AND (( TASK.CDUSER=AUSER.CDUSER OR (TASK.CDUSER IS NULL AND ((TASK.FGEXECUTORTPTASK=2 AND EXISTS (SELECT 1 FROM ADUSERROLE WHERE CDROLE=TASK.CDROLE AND CDUSER=AUSER.CDUSER)) OR (TASK.FGEXECUTORTPTASK=3 AND EXISTS (SELECT 1 FROM ADUSERROLE WHERE CDROLE=TASK.CDROLE AND CDUSER=AUSER.CDUSER) AND EXISTS (SELECT 1 FROM ADUSERDEPTPOS WHERE CDDEPARTMENT=TASK.CDBASEDEPT AND CDUSER=AUSER.CDUSER)) OR (TASK.FGEXECUTORTPTASK=4 AND EXISTS (SELECT 1 FROM ADUSERDEPTPOS WHERE CDDEPARTMENT=TASK.CDBASEDEPT AND CDUSER=AUSER.CDUSER)) OR (TASK.FGEXECUTORTPTASK=5 AND EXISTS (SELECT 1 FROM ADUSERDEPTPOS WHERE CDDEPARTMENT=TASK.CDBASEDEPT AND CDPOSITION=TASK.CDPOSITION AND CDUSER=AUSER.CDUSER)))))) AND DC.FGSTATUS IN (1,3) AND (ERF.FGRESPONSIVEFORM <> 1 OR ERF.FGRESPONSIVEFORM IS NULL) AND AUSER.CDUSER=11160) TB2 WHERE 1=1) TB3 WHERE 1=1
