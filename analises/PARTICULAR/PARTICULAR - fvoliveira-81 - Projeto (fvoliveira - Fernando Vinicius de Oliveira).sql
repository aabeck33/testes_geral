SELECT AB.NMIDTASK, AB.NMTASK, COALESCE(AB.QTACTPERC, 0) AS NMACTPERC, AB.DTPLANST, AB.DTREPLST, AB.DTACTST, AB.DTPLANEND, AB.DTREPLEND, AB.DTACTEND, AB.QTPLANDUR AS NMPLANDUR, AB.QTREPLDUR AS NMREPLDUR, AB.QTACTDUR AS NMACTDUR, CASE WHEN AB.FGPHASE=6 THEN CAST ('Suspenso' AS VARCHAR(255)) WHEN AB.FGPHASE=7 THEN CAST ('Cancelado' AS VARCHAR(255)) WHEN AB.FGAPPROVAL=3 THEN CAST ('Reprovado' AS VARCHAR(255)) WHEN AB.FGPHASE=1 THEN CAST ('Planejamento' AS VARCHAR(255)) WHEN (AB.FGPHASE=2 AND AB.FGCLOSING=1) OR AB.FGPHASE=5 THEN CAST ('Aprovação' AS VARCHAR(255)) WHEN AB.FGPHASE=2 AND AB.FGCLOSING=3 THEN CAST ('Reprovado' AS VARCHAR(255)) WHEN AB.FGPHASE=2 AND AB.DTACTST IS NULL THEN CAST ('Iniciar' AS VARCHAR(255)) WHEN AB.FGPHASE=2 AND AB.DTACTST IS NOT NULL THEN CAST ('Execução' AS VARCHAR(255)) WHEN AB.FGPHASE=3 THEN CAST ('Verificação' AS VARCHAR(255)) WHEN AB.FGPHASE=4 THEN CAST ('Encerrada' AS VARCHAR(255)) END AS PHASEPROJECT, (TA.IDTASKTYPE + ' - ' + TA.NMTASKTYPE) AS PROJECTTYPE, (AR.IDDEPARTMENT + ' - ' + AR.NMDEPARTMENT) AS PROJECTDEPT, (US.IDUSER + ' - ' + US.NMUSER) AS PROJECTRESP, PRI.IDPRIORITY, 1 AS CDTASK, /* QTD HORAS */ CAST( CASE WHEN (AB.CDTASK IN (-1)) THEN 0 ELSE CAST( ATV.QTPLANMINUTES AS NUMERIC(28,12)) * CAST( 60*1000 AS NUMERIC(28,12)) END AS NUMERIC(28,12)) AS QTPLANMINUTES, CAST( CASE WHEN (AB.CDTASK IN (-1)) THEN 0 ELSE CAST( ATV.QTREPLMINUTES AS NUMERIC(28,12)) * CAST( 60*1000 AS NUMERIC(28,12)) END AS NUMERIC(28,12)) AS QTREPLMINUTES, CAST( CASE WHEN (AB.CDTASK IN (-1)) THEN 0 ELSE CAST( ATV.QTACTMINUTES AS NUMERIC(28,12)) * CAST( 60*1000 AS NUMERIC(28,12)) END AS NUMERIC(28,12)) AS QTACTMINUTES, /* CUSTO DO RECURSO */ CAST( CASE WHEN (AB.CDTASK IN (-1)) THEN 0 ELSE COALESCE(ATV.MNCOSTBUDGETRESOURCE, 0) END AS NUMERIC(28,12)) AS MNCOSTBUDGETRESOURCE, CAST( CASE WHEN (AB.CDTASK IN (-1)) THEN 0 ELSE COALESCE(ATV.MNPLANHOURS, 0) END AS NUMERIC(28,12)) AS MNPLANHOURS, CAST( CASE WHEN (AB.CDTASK IN (-1)) THEN 0 ELSE COALESCE(ATV.MNREPLHOURS, 0) END AS NUMERIC(28,12)) AS MNREPLHOURS, CAST( CASE WHEN (AB.CDTASK IN (-1)) THEN 0 ELSE COALESCE(ATV.MNACTHOURS, 0) END AS NUMERIC(28,12)) AS MNACTHOURS, /* CUSTO */ CAST( CASE WHEN (AB.CDTASK IN (-1)) THEN 0 ELSE COALESCE(ATV.MNCOSTBUDGET, 0) END AS NUMERIC(28,12)) AS MNCOSTBUDGET, CAST( CASE WHEN (AB.CDTASK IN (-1)) THEN 0 ELSE COALESCE(ATV.MNPLANCOST, 0) END AS NUMERIC(28,12)) AS MNPLANCOST, CAST( CASE WHEN (AB.CDTASK IN (-1)) THEN 0 ELSE COALESCE(ATV.MNREPLCOST, 0) END AS NUMERIC(28,12)) AS MNREPLCOST, CAST( CASE WHEN (AB.CDTASK IN (-1)) THEN 0 ELSE COALESCE(ATV.MNACTCOST, 0) END AS NUMERIC(28,12)) AS MNACTCOST, /* RECEITA DO RECURSO */ CAST( CASE WHEN (AB.CDTASK IN (-1)) THEN 0 ELSE COALESCE(ATV.MNREVBUDGETRESOURCE, 0) END AS NUMERIC(28,12)) AS MNREVBUDGETRESOURCE, CAST( CASE WHEN (AB.CDTASK IN (-1)) THEN 0 ELSE COALESCE(ATV.MNPLANHOURSREVENUE, 0) END AS NUMERIC(28,12)) AS MNPLANHOURSREVENUE, CAST( CASE WHEN (AB.CDTASK IN (-1)) THEN 0 ELSE COALESCE(ATV.MNREPLHOURSREVENUE, 0) END AS NUMERIC(28,12)) AS MNREPLHOURSREVENUE, CAST( CASE WHEN (AB.CDTASK IN (-1)) THEN 0 ELSE COALESCE(ATV.MNACTHOURSREVENUE, 0) END AS NUMERIC(28,12)) AS MNACTHOURSREVENUE, /* RECEITA */ CAST( CASE WHEN (AB.CDTASK IN (-1)) THEN 0 ELSE COALESCE(ATV.MNREVBUDGET, 0) END AS NUMERIC(28,12)) AS MNREVBUDGET, CAST( CASE WHEN (AB.CDTASK IN (-1)) THEN 0 ELSE COALESCE(ATV.MNPLANREVENUE, 0) END AS NUMERIC(28,12)) AS MNPLANREVENUE, CAST( CASE WHEN (AB.CDTASK IN (-1)) THEN 0 ELSE COALESCE(ATV.MNREPLREVENUE, 0) END AS NUMERIC(28,12)) AS MNREPLREVENUE, CAST( CASE WHEN (AB.CDTASK IN (-1)) THEN 0 ELSE COALESCE(ATV.MNACTREVENUE, 0) END AS NUMERIC(28,12)) AS MNACTREVENUE, /* CUSTO TOTAL */ CAST( CASE WHEN (AB.CDTASK IN (-1)) THEN 0 ELSE (COALESCE( ATV.MNCOSTBUDGET,0) + COALESCE( ATV.MNCOSTBUDGETRESOURCE,0)) END AS NUMERIC(28,12)) AS MNBUDGETTOTCOST, CAST( CASE WHEN (AB.CDTASK IN (-1)) THEN 0 ELSE (COALESCE( ATV.MNPLANHOURS,0) + COALESCE( ATV.MNPLANCOST,0)) END AS NUMERIC(28,12)) AS MNPLANTOTCOST, CAST( CASE WHEN (AB.CDTASK IN (-1)) THEN 0 ELSE (COALESCE( ATV.MNREPLHOURS,0) + COALESCE( ATV.MNREPLCOST,0)) END AS NUMERIC(28,12)) AS MNREPLTOTCOST, CAST( CASE WHEN (AB.CDTASK IN (-1)) THEN 0 ELSE (COALESCE( ATV.MNACTHOURS,0) + COALESCE( ATV.MNACTCOST,0)) END AS NUMERIC(28,12)) AS MNACTTOTCOST, /* RECEITA TOTAL */ CAST( CASE WHEN (AB.CDTASK IN (-1)) THEN 0 ELSE (COALESCE( ATV.MNREVBUDGET,0) + COALESCE( ATV.MNREVBUDGETRESOURCE,0)) END AS NUMERIC(28,12)) AS MNBUDGETTOTREVENUE, CAST( CASE WHEN (AB.CDTASK IN (-1)) THEN 0 ELSE (COALESCE( ATV.MNPLANHOURSREVENUE,0) + COALESCE( ATV.MNPLANREVENUE,0)) END AS NUMERIC(28,12)) AS MNPLANTOTREVENUE, CAST( CASE WHEN (AB.CDTASK IN (-1)) THEN 0 ELSE (COALESCE( ATV.MNREPLHOURSREVENUE,0) + COALESCE( ATV.MNREPLREVENUE,0)) END AS NUMERIC(28,12)) AS MNREPLTOTREVENUE, CAST( CASE WHEN (AB.CDTASK IN (-1)) THEN 0 ELSE (COALESCE( ATV.MNACTHOURSREVENUE,0) + COALESCE( ATV.MNACTREVENUE,0)) END AS NUMERIC(28,12)) AS MNACTTOTREVENUE, /* RESULTADO */ CAST( CASE WHEN (AB.CDTASK IN (-1)) THEN 0 ELSE ((COALESCE(ATV.MNREVBUDGET,0) + COALESCE(ATV.MNREVBUDGETRESOURCE,0))-(COALESCE(ATV.MNCOSTBUDGET,0) + COALESCE(ATV.MNCOSTBUDGETRESOURCE,0))) END AS NUMERIC(28,12)) AS BUDGETRESULT, CAST( CASE WHEN (AB.CDTASK IN (-1)) THEN 0 ELSE ((COALESCE(ATV.MNPLANHOURSREVENUE,0) + COALESCE(ATV.MNPLANREVENUE,0))-(COALESCE(ATV.MNPLANHOURS,0) + COALESCE(ATV.MNPLANCOST,0))) END AS NUMERIC(28,12)) AS PLANRESULT, CAST( CASE WHEN (AB.CDTASK IN (-1)) THEN 0 ELSE ((COALESCE(ATV.MNREPLHOURSREVENUE,0) + COALESCE(ATV.MNREPLREVENUE,0))-(COALESCE(ATV.MNREPLHOURS,0) + COALESCE(ATV.MNREPLCOST,0))) END AS NUMERIC(28,12)) AS REPLRESULT, CAST( CASE WHEN (AB.CDTASK IN (-1)) THEN 0 ELSE ((COALESCE(ATV.MNACTHOURSREVENUE,0) + COALESCE(ATV.MNACTREVENUE,0))-(COALESCE(ATV.MNACTHOURS,0) + COALESCE(ATV.MNACTCOST,0))) END AS NUMERIC(28,12)) AS ACTRESULT, /* RENTABILIDADE $ */ CAST( CASE WHEN (AB.CDTASK IN (-1)) THEN 0 ELSE ((COALESCE(ATV.MNREVBUDGETRESOURCE,0) + COALESCE(ATV.MNREVBUDGET, 0)) - (COALESCE(ATV.MNCOSTBUDGETRESOURCE,0) + COALESCE(ATV.MNCOSTBUDGET, 0))) END AS NUMERIC(28,12)) AS MNBUDGETHOURSRENT, CAST( CASE WHEN (AB.CDTASK IN (-1)) THEN 0 ELSE ((COALESCE(ATV.MNPLANREVENUE,0) + COALESCE(ATV.MNPLANHOURSREVENUE, 0)) - (COALESCE(ATV.MNPLANCOST,0) + COALESCE(ATV.MNPLANHOURS, 0))) END AS NUMERIC(28,12)) AS MNPLANHOURSRENT, CAST( CASE WHEN (AB.CDTASK IN (-1)) THEN 0 ELSE ((COALESCE(ATV.MNREPLREVENUE,0) + COALESCE(ATV.MNREPLHOURSREVENUE, 0)) - (COALESCE(ATV.MNREPLCOST,0) + COALESCE(ATV.MNREPLHOURS, 0))) END AS NUMERIC(28,12)) AS MNREPLHOURSRENT, CAST( CASE WHEN (AB.CDTASK IN (-1)) THEN 0 ELSE ((COALESCE(ATV.MNACTREVENUE,0) + COALESCE(ATV.MNACTHOURSREVENUE, 0)) - (COALESCE(ATV.MNACTCOST,0) + COALESCE(ATV.MNACTHOURS, 0))) END AS NUMERIC(28,12)) AS MNACTHOURSRENT, /* RENTABILIDADE % */ CAST( CASE WHEN (AB.CDTASK IN (-1)) THEN 0 ELSE CASE WHEN (COALESCE(ATV.MNREVBUDGETRESOURCE,0) + COALESCE(ATV.MNREVBUDGET,0)) <> 0 THEN (((COALESCE(ATV.MNREVBUDGETRESOURCE,0) + COALESCE(ATV.MNREVBUDGET,0)) - (COALESCE(ATV.MNCOSTBUDGETRESOURCE,0) + COALESCE(ATV.MNCOSTBUDGET,0))) / (COALESCE(ATV.MNREVBUDGETRESOURCE,0) + COALESCE(ATV.MNREVBUDGET,0))) * 100 ELSE NULL END END AS NUMERIC(28,12)) AS MNBUDGETHOURSRENTPERCENT, CAST( CASE WHEN (AB.CDTASK IN (-1)) THEN 0 ELSE CASE WHEN (COALESCE(ATV.MNPLANREVENUE,0) + COALESCE(ATV.MNPLANHOURSREVENUE,0)) <> 0 THEN (((COALESCE(ATV.MNPLANREVENUE,0) + COALESCE(ATV.MNPLANHOURSREVENUE,0)) - (COALESCE(ATV.MNPLANCOST,0) + COALESCE(ATV.MNPLANHOURS,0))) / (COALESCE(ATV.MNPLANREVENUE,0) + COALESCE(ATV.MNPLANHOURSREVENUE,0))) * 100 ELSE NULL END END AS NUMERIC(28,12)) AS MNPLANHOURSRENTPERCENT, CAST( CASE WHEN (AB.CDTASK IN (-1)) THEN 0 ELSE CASE WHEN (COALESCE(ATV.MNREPLREVENUE,0) + COALESCE(ATV.MNREPLHOURSREVENUE,0)) <> 0 THEN (((COALESCE(ATV.MNREPLREVENUE,0) + COALESCE(ATV.MNREPLHOURSREVENUE,0)) - (COALESCE(ATV.MNREPLCOST,0) + COALESCE(ATV.MNREPLHOURS,0))) / (COALESCE(ATV.MNREPLREVENUE,0) + COALESCE(ATV.MNREPLHOURSREVENUE,0))) * 100 ELSE NULL END END AS NUMERIC(28,12)) AS MNREPLHOURSRENTPERCENT, CAST( CASE WHEN (AB.CDTASK IN (-1)) THEN 0 ELSE CASE WHEN (COALESCE(ATV.MNACTREVENUE,0) + COALESCE(ATV.MNACTHOURSREVENUE,0)) <> 0 THEN (((COALESCE(ATV.MNACTREVENUE,0) + COALESCE(ATV.MNACTHOURSREVENUE,0)) - (COALESCE(ATV.MNACTCOST,0) + COALESCE(ATV.MNACTHOURS,0))) / (COALESCE(ATV.MNACTREVENUE,0) + COALESCE(ATV.MNACTHOURSREVENUE,0))) * 100 ELSE NULL END END AS NUMERIC(28,12)) AS MNACTHOURSRENTPERCENT, CASE WHEN AB.FGOUTDATED=1 AND AB.FGPHASE NOT IN (6,7) THEN 'Desatualizado' WHEN AB.FGPHASE=5 AND AB.CDTASK <> AB.CDBASETASK THEN '' WHEN (AB.FGPHASE IN (8,5) OR AB.FGPHASE=2 AND AB.FGCLOSING=1 OR AB.FGREVISION IN (2,3)) AND AB.FGAPPROVAL IS NOT NULL AND AB.CDTASK=AB.CDBASETASK THEN STATUSAPROV.APPROVDEADLINE WHEN (AD1.IDPARAM='1' AND AD2.IDPARAM='2' AND AB.FGPHASE NOT IN (6,7,1)) THEN CASE WHEN (AB.DTACTST IS NULL) THEN CASE WHEN (COALESCE(AB.DTPLANEND, AB.DTREPLEND) < AB.DTSCHEDULEDEND OR COALESCE(AB.DTPLANST, AB.DTREPLST) < <!%TODAY%>) THEN 'Em atraso' WHEN (COALESCE(AB.DTPLANST, AB.DTREPLST)=<!%TODAY%>) THEN 'Em dia' END WHEN (AB.DTACTST IS NOT NULL AND AB.DTACTEND IS NULL) THEN CASE WHEN (COALESCE(AB.DTPLANEND, AB.DTREPLEND) < AB.DTSCHEDULEDEND OR COALESCE(AB.DTPLANEND, AB.DTREPLEND) < <!%TODAY%>) THEN 'Em atraso' ELSE 'Em dia' END WHEN (AB.DTACTST IS NOT NULL AND AB.DTACTEND IS NOT NULL) THEN CASE WHEN (AB.DTACTEND > COALESCE(AB.DTPLANEND, AB.DTREPLEND)) THEN 'Em atraso' ELSE 'Em dia' END END WHEN (AD1.IDPARAM='2' AND AD2.IDPARAM='2' AND AB.FGPHASE NOT IN (6,7,1)) THEN CASE WHEN (AB.DTACTST IS NULL) THEN CASE WHEN (<!%TODAY%>=AB.DTSCHEDULEDST) THEN 'Em dia' WHEN (<!%TODAY%> > AB.DTSCHEDULEDST) THEN 'Em atraso' END WHEN (AB.DTACTST IS NOT NULL AND AB.DTACTEND IS NULL) THEN CASE WHEN (AB.DTSCHEDULEDEND <= AB.DTREPLEND AND AB.DTREPLEND >= <!%TODAY%>) THEN 'Em dia' ELSE 'Em atraso' END WHEN (AB.DTACTST IS NOT NULL AND AB.DTACTEND IS NOT NULL) THEN CASE WHEN (AB.DTACTEND <= AB.DTREPLEND) THEN 'Em dia' ELSE 'Em atraso' END END WHEN (AD1.IDPARAM='1' AND AD2.IDPARAM='3' AND AB.FGPHASE NOT IN (6,7,1)) THEN CASE WHEN (AB.DTACTST IS NULL) THEN CASE WHEN (COALESCE(AB.DTPLANEND, AB.DTREPLEND) < COALESCE(AB.DTPLANEND, AB.DTREPLEND) OR COALESCE(AB.DTPLANST, AB.DTREPLST) < <!%TODAY%>) THEN 'Em atraso' WHEN (COALESCE(AB.DTPLANST, AB.DTREPLST)=<!%TODAY%>) THEN 'Em dia' END WHEN (AB.DTACTST IS NOT NULL AND AB.DTACTEND IS NULL) THEN CASE WHEN (COALESCE(AB.DTPLANEND, AB.DTREPLEND) < COALESCE(AB.DTPLANEND, AB.DTREPLEND) OR COALESCE(AB.DTPLANEND, AB.DTREPLEND) < <!%TODAY%>) THEN 'Em atraso' ELSE 'Em dia' END WHEN (AB.DTACTST IS NOT NULL AND AB.DTACTEND IS NOT NULL) THEN CASE WHEN (AB.DTACTEND > COALESCE(AB.DTPLANEND, AB.DTREPLEND)) THEN 'Em atraso' ELSE 'Em dia' END END WHEN (AD1.IDPARAM='2' AND AD2.IDPARAM='3' AND AB.FGPHASE NOT IN (6,7,1)) THEN CASE WHEN (AB.DTACTST IS NULL) THEN CASE WHEN (<!%TODAY%>=AB.DTREPLST) THEN 'Em dia' WHEN (<!%TODAY%> > AB.DTREPLST) THEN 'Em atraso' END WHEN (AB.DTACTST IS NOT NULL AND AB.DTACTEND IS NULL) THEN CASE WHEN (AB.DTREPLEND <= AB.DTREPLEND AND AB.DTREPLEND >= <!%TODAY%>) THEN 'Em dia' ELSE 'Em atraso' END WHEN (AB.DTACTST IS NOT NULL AND AB.DTACTEND IS NOT NULL) THEN CASE WHEN (AB.DTACTEND <= AB.DTREPLEND) THEN 'Em dia' ELSE 'Em atraso' END END WHEN (AD1.IDPARAM='1' AND AD2.IDPARAM='1' AND AB.FGPHASE NOT IN (6,7,1)) THEN CASE WHEN (AB.FGPHASE=2 AND AB.DTACTEND IS NULL) THEN CASE WHEN (<!%TODAY%> < COALESCE(AB.DTPLANST, AB.DTREPLST)) THEN '' WHEN (COALESCE(AB.DTPLANEND, AB.DTREPLEND) <= <!%TODAY%> AND COALESCE(AB.QTACTPERC, 0) >= 100) THEN 'Em dia' WHEN (AB.QTACTPERC >= ((dbo.SEF_QT_WK_DAYS_PERIOD (CONVERT(DATETIME, COALESCE(AB.DTPLANST, AB.DTREPLST)), CONVERT(DATETIME, <!%TODAY%>), NULL) * 100) / dbo.SEF_QT_WK_DAYS_PERIOD (CONVERT(DATETIME, COALESCE(AB.DTPLANST, AB.DTREPLST)), CONVERT(DATETIME, COALESCE(AB.DTPLANEND, AB.DTREPLEND)), NULL)) OR ((COALESCE(AB.DTPLANST, AB.DTREPLST) <= <!%TODAY%> OR <!%TODAY%>=COALESCE(AB.DTPLANST, AB.DTREPLST)) AND COALESCE(AB.QTACTPERC, 0) >= 100)) THEN 'Em dia' ELSE 'Em atraso' END ELSE CASE WHEN (AB.DTACTEND > COALESCE(AB.DTPLANEND, AB.DTREPLEND)) THEN 'Em atraso' ELSE 'Em dia' END END WHEN (AD1.IDPARAM='2' AND AD2.IDPARAM='1' AND AB.FGPHASE NOT IN (6,7,1)) THEN CASE WHEN (AB.FGPHASE=2 AND AB.DTACTEND IS NULL) THEN CASE WHEN (<!%TODAY%> < AB.DTREPLST) THEN 'Em dia' WHEN (AB.QTACTPERC >= ((dbo.SEF_QT_WK_DAYS_PERIOD (CONVERT(DATETIME, AB.DTREPLST), CONVERT(DATETIME, <!%TODAY%>), NULL) * 100) / dbo.SEF_QT_WK_DAYS_PERIOD (CONVERT(DATETIME, AB.DTREPLST), CONVERT(DATETIME, AB.DTREPLEND), NULL)) OR ((AB.DTREPLEND <= <!%TODAY%> OR <!%TODAY%>=AB.DTREPLST) AND COALESCE(AB.QTACTPERC, 0) >= 100)) THEN 'Em dia' ELSE 'Em atraso' END ELSE CASE WHEN (AB.DTACTEND <= AB.DTREPLEND) THEN 'Em dia' ELSE 'Em atraso' END END END AS FGDEADLINE FROM PRTASKFINANCES ATV, PRTASKBROADCAST PRTB, PRTASK AB LEFT JOIN (SELECT DISTINCT PVIEW.PR_CDTASK FROM (SELECT ACCVIEW.CDTASK AS PR_CDTASK, ACCVIEW.FGACCESSCOST, UDP.CDUSER FROM PRTASKACCESS ACCVIEW INNER JOIN ADUSERDEPTPOS UDP ON UDP.CDDEPARTMENT=ACCVIEW.CDDEPARTMENT  WHERE ACCVIEW.FGACCESS=1 AND ACCVIEW.FGTEAMMEMBER=1 AND UDP.CDUSER=11771 /*DONTREMOVE*/UNION ALL/*DONTREMOVE*/ SELECT ACCVIEW.CDTASK AS PR_CDTASK, ACCVIEW.FGACCESSCOST, UDP.CDUSER FROM PRTASKACCESS ACCVIEW INNER JOIN ADUSERDEPTPOS UDP ON UDP.CDPOSITION=ACCVIEW.CDPOSITION  WHERE ACCVIEW.FGACCESS=1 AND ACCVIEW.FGTEAMMEMBER=2 AND UDP.CDUSER=11771 /*DONTREMOVE*/UNION ALL/*DONTREMOVE*/ SELECT ACCVIEW.CDTASK AS PR_CDTASK, ACCVIEW.FGACCESSCOST, UDP.CDUSER FROM PRTASKACCESS ACCVIEW INNER JOIN ADUSERDEPTPOS UDP ON UDP.CDDEPARTMENT=ACCVIEW.CDDEPARTMENT AND UDP.CDPOSITION=ACCVIEW.CDPOSITION  WHERE ACCVIEW.FGACCESS=1 AND ACCVIEW.FGTEAMMEMBER=3 AND UDP.CDUSER=11771 /*DONTREMOVE*/UNION ALL/*DONTREMOVE*/ SELECT ACCVIEW.CDTASK AS PR_CDTASK, ACCVIEW.FGACCESSCOST, ACCVIEW.CDUSER FROM PRTASKACCESS ACCVIEW  WHERE ACCVIEW.FGACCESS=1 AND ACCVIEW.FGTEAMMEMBER=4 AND ACCVIEW.CDUSER=11771 /*DONTREMOVE*/UNION ALL/*DONTREMOVE*/ SELECT ACCVIEW.CDTASK AS PR_CDTASK, ACCVIEW.FGACCESSCOST, TMM.CDUSER FROM PRTASKACCESS ACCVIEW INNER JOIN ADTEAMUSER TMM ON TMM.CDTEAM=ACCVIEW.CDTEAM  WHERE ACCVIEW.FGACCESS=1 AND ACCVIEW.FGTEAMMEMBER=5 AND TMM.CDUSER=11771) PVIEW WHERE 1=1) PRTASKSECURITY ON PRTASKSECURITY.PR_CDTASK=AB.CDBASETASK AND AB.FGRESTRICT=1, ADDEPARTMENT AR, ADUSER US, PRTASKTYPE TA, PRPRIORITY PRI, ADPARAMS AD1, ADPARAMS AD2, (SELECT CASE WHEN (GNA.DTDEADLINE > (<!%TODAY%> + 1) OR GNA.DTDEADLINE IS NULL) THEN 'Em dia' WHEN (GNA.DTDEADLINE=<!%TODAY%> OR GNA.DTDEADLINE=(<!%TODAY%> + 1)) THEN 'Próximo do vencimento' WHEN GNA.DTDEADLINE < <!%TODAY%> THEN 'Em atraso' END AS APPROVDEADLINE, ATB.CDTASK FROM PRTASK ATB LEFT JOIN (SELECT REV2.CDTASK, MAX(REV2.CDREVISION) CDREVISION FROM PRTASKREVISION REV2 GROUP BY REV2.CDTASK) ABC ON ABC.CDTASK=ATB.CDTASK LEFT JOIN PRTASKREVISION REV ON REV.CDREVISION=ABC.CDREVISION AND ATB.CDTASK=REV.CDTASK LEFT JOIN GNVWAPPROVRESP GNA ON GNA.FGPEND=1 AND (REV.CDAPPROV=GNA.CDAPPROV AND REV.CDPROD=GNA.CDPROD OR ATB.CDPLANPRODROUTE=GNA.CDPROD AND ATB.CDPLANROUTE=GNA.CDAPPROV OR ATB.CDEXECPRODROUTE=GNA.CDPROD AND ATB.CDEXECROUTE=GNA.CDAPPROV OR ATB.CDCLOSINGPRODROUTE=GNA.CDPROD AND ATB.CDCLOSINGROUTE=GNA.CDAPPROV) WHERE (GNA.DTDEADLINE IN (SELECT MIN(DTDEADLINE) DTDEADLINE FROM GNVWAPPROVRESP  WHERE CDPROD=GNA.CDPROD  AND CDAPPROV=GNA.CDAPPROV  AND FGPEND=1) OR GNA.CDAPPROV IS NULL) AND (GNA.CDCYCLE IN (SELECT MAX(CDCYCLE) FROM GNVWAPPROVRESP WHERE CDPROD=GNA.CDPROD AND CDAPPROV=GNA.CDAPPROV) OR GNA.CDAPPROV IS NULL) GROUP BY GNA.DTDEADLINE, ATB.CDTASK) STATUSAPROV WHERE AB.CDTASK=AB.CDBASETASK AND ATV.CDTASK=AB.CDTASK AND PRTB.CDTASK=AB.CDTASK AND AB.FGTASKTYPE=1 AND (( AB.FGRESTRICT=2 OR AB.FGRESTRICT IS NULL OR AB.FGRESTRICT=0) OR (PRTASKSECURITY.PR_CDTASK IS NOT NULL)) AND AR.CDDEPARTMENT=AB.CDTASKDEPT AND US.CDUSER=AB.CDTASKRESP AND TA.CDTASKTYPE=AB.CDTASKTYPE AND PRI.CDPRIORITY=AB.CDPRIORITY AND AB.CDTASKTYPE IN (<!%FUNC(com.softexpert.generic.parameter.InClauseBuilder, UFJUQVNLVFlQRQ==, Q0RUQVNLVFlQRQ==, Q0RUQVNLVFlQRU9XTkVS,, MTE=,)%>) AND AD1.CDPARAM=9 AND AD2.CDPARAM=73 AND AD1.CDISOSYSTEM=41 AND AD2.CDISOSYSTEM=41 AND AB.FGTASKTYPE=1 AND AB.CDTASK=STATUSAPROV.CDTASK
