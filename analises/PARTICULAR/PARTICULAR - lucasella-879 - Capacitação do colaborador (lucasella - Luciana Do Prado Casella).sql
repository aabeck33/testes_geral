SELECT  ROW_NUMBER() OVER(PARTITION BY USU.NMUSER, USU.CDUSER, TEMPTB.CDDEPARTMENT, TEMPTB.CDPOSITION ORDER BY USU.NMUSER ASC, COALESCE(TEMPTB.DTREALFINISH, COALESCE(TEMPTB.DTREALSTART, COALESCE(TEMPTB.DTPROGSTART, CAST(CURRENT_TIMESTAMP AS DATE)))) ASC, C.IDCOURSE ASC) AS FGSHOWGROUPFOOTER, ROW_NUMBER() OVER(PARTITION BY USU.NMUSER, USU.CDUSER, TEMPTB.CDDEPARTMENT, TEMPTB.CDPOSITION ORDER BY USU.NMUSER DESC, COALESCE(TEMPTB.DTREALFINISH, COALESCE(TEMPTB.DTREALSTART, COALESCE(TEMPTB.DTPROGSTART, CAST(CURRENT_TIMESTAMP AS DATE)))) DESC, C.IDCOURSE DESC) AS FGSHOWGROUPHEADER, '<label class=''x-grid-group-header-label-ct''>' + '<div class=''x-grid-group-header-div-flex-ct''>' + '<div class=''x-grid-group-header-div-flex-1''>' + '<div class=''profile x-grid-group-header-div-flex-ct''>' + '<div class=''x-grid-group-header-div-avatar-ct''>' + '<div class=''avatar img-circle''>' + '<img src=''https://sesuite.uniaoquimica.com.br/se/v43596//temp/dXNlcnBob3RvLWh0dHBzOi8vc2VzdWl0ZS51bmlhb3F1aW1pY2EuY29tLmJyL3NlL3Y0MzU5Ni8=-' + CAST(USU.CDUSER AS VARCHAR(50)) + '.jpg'' id=''imguser_' + CAST(USU.CDUSER AS VARCHAR(50)) + ''' cduser=''' + CAST(USU.CDUSER AS VARCHAR(50)) + ''' title=''Visualizar detalhes do colaborador'' onclick=''createTooltipForGroupColumnUser(this);event.preventDefault();event.stopPropagation();''>' + '</div>' + '</div>' + '<div class=''x-grid-group-header-div-flex-1 x-grid-group-header-div-display-flex x-grid-group-header-div-flex-dir-column''>' + '<div class=''x-grid-group-header-div-flex-1 x-grid-group-header-div-label-title-ct''><label class=''x-grid-group-header-label-title''>Colaborador</label></div>' + '<div class=''x-grid-group-header-div-flex-1''>' + '<span id=''spanuser_' + CAST(USU.CDUSER AS VARCHAR(50)) + ''' cduser=''' + CAST(USU.CDUSER AS VARCHAR(50)) + ''' class=''x-grid-group-header-span-hidden-idnmuser''>' + USU.IDUSER + ' - ' + USU.NMUSER + '</span>' + '<a class=''x-grid-group-header-avatar-user-link'' id=''spanusera_' + CAST(USU.CDUSER AS VARCHAR(50)) + ''' cduser=''' + CAST(USU.CDUSER AS VARCHAR(50)) + ''' title=''Visualizar detalhes do colaborador'' onclick=''createTooltipForGroupColumnUser(this);event.preventDefault();event.stopPropagation();''>' + USU.IDUSER + ' - ' + USU.NMUSER + '</a>' + '</div>' + '</div>' + '</div>' + '</div>' + '<div class=''x-grid-group-header-div-flex-1 x-grid-group-header-div-flex-padding-left''>' + '<div class=''x-grid-group-header-div-flex-1 x-grid-group-header-div-flex-dir-column''>' + '<div class=''x-grid-group-header-div-flex-1 x-grid-group-header-div-label-title-ct''><label class=''x-grid-group-header-label-title''>Área</label></div>' + '<div class=''x-grid-group-header-div-flex-1 x-grid-group-header-div-label-title-ct''>' + '<label class=''x-grid-group-header-label-strong-text x-grid-group-header-label-strong-text-with-a-tag-in-group''>' + TEMPTB.IDDEPARTMENT + ' - ' + TEMPTB.NMDEPARTMENT + '</label>' + '</div>' + '</div>' + '</div>' + '<div class=''x-grid-group-header-div-flex-1 x-grid-group-header-div-flex-padding-left''>' + '<div class=''x-grid-group-header-div-flex-1 x-grid-group-header-div-flex-dir-column''>' + '<div class=''x-grid-group-header-div-flex-1 x-grid-group-header-div-label-title-ct''><label class=''x-grid-group-header-label-title''>Função</label></div>' + '<div class=''x-grid-group-header-div-flex-1 x-grid-group-header-div-label-title-ct''>' + '<label class=''x-grid-group-header-label-strong-text x-grid-group-header-label-strong-text-with-a-tag-in-group''>' + TEMPTB.IDPOSITION + ' - ' + TEMPTB.NMPOSITION + '</label>' + '</div>' + '</div>' + '</div>' + '</div>' + '</label>' AS NMUSERINFO, TEMPTB.FGSTATUS AS FGSTATUSCBK, TEMPTB.FGSTATUS, TEMPTB.FGRESULT, TEMPTB.VLNOTE, TEMPTB.VLFREQ, TEMPTB.VLPROGRESS, USU.CDUSER, USU.IDUSER, USU.NMUSER, TEMPTB.CDDEPARTMENT, TEMPTB.IDDEPARTMENT, TEMPTB.NMDEPARTMENT, TEMPTB.IDNMDEPARTMENT, TEMPTB.CDPOSITION, TEMPTB.IDPOSITION, TEMPTB.NMPOSITION, TEMPTB.IDNMPOSITION, TEMPTB.CDTRAINUSER, TEMPTB.FGTRAUSRCONTACCESS, TEMPTB.FGATTACHMENT, TEMPTB.FGDOCUMENT, TEMPTB.CDTRAIN, TEMPTB.IDTRAIN, TEMPTB.NMTRAIN, TEMPTB.IDNMTRAIN, TEMPTB.FGPARTTYPE, TEMPTB.DTVALID, TEMPTB.FGVALID, TEMPTB.DTPROGSTART, TEMPTB.DTPROGFINISH, TEMPTB.VLQTPROGCOST, TEMPTB.QTPARTPROG, TEMPTB.QTTMTOTPROG, TEMPTB.DTREALSTART, TEMPTB.DTREALFINISH, TEMPTB.VLQTREALCOST, TEMPTB.QTPARTREAL, TEMPTB.QTTMTOTREAL, TEMPTB.IDCOMMERCIAL, TEMPTB.NMCOMPANY, TEMPTB.FGCANCEL, TEMPTB.FGINVALID, TEMPTB.FGTYPETRAIN, TEMPTB.FGTYPETRAIN AS NMFGTYPETRAIN, TEMPTB.NMFGSTATUS, TEMPTB.FGALLOWACESSCONTENTTRAIN, TEMPTB.CDCOURSE, TEMPTB.CDHISTCOURSE, C.IDCOURSE, C.NMCOURSE, CT.CDGENTYPE AS CDCOURSETYPE, CT.IDGENTYPE AS IDCOURSETYPE, CT.NMGENTYPE AS NMCOURSETYPE, CASE WHEN TEMPTB.FGTYPETRAIN=1 THEN (CAST ('Treinamento' AS VARCHAR(255))) WHEN TEMPTB.FGTYPETRAIN=2 THEN (CAST ('Curso do perfil' AS VARCHAR(255))) WHEN TEMPTB.FGTYPETRAIN=3 THEN (CAST ('Trilha' AS VARCHAR(255))) END AS IDNMFGTYPETRAIN, CASE WHEN TEMPTB.FGPARTTYPE=1 THEN (CAST ('Treinamento coletivo' AS VARCHAR(255))) WHEN TEMPTB.FGPARTTYPE=2 THEN (CAST ('Treinamento individual' AS VARCHAR(255))) END AS IDPARTTYPE, CASE WHEN TEMPTB.FGRESULT=1 THEN (CAST ('Aprovado' AS VARCHAR(255))) WHEN TEMPTB.FGRESULT=2 THEN (CAST ('Reprovado' AS VARCHAR(255))) WHEN TEMPTB.FGRESULT=3 THEN (CAST ('Não avaliado' AS VARCHAR(255))) END AS NMFGRESULT, TEMPTB.IDSTATUS, TEMPTB.IDNMTRAININGMETHOD, TEMPTB.IDNMCONFIGURATION, (TEMPTB.QTTMTOTPROG/60) AS QTTMTOTPROGINHOURS, (TEMPTB.QTTMTOTREAL/60) AS QTTMTOTREALINHOURS, (CAST(TEMPTB.QTTMTOTPROG AS NUMERIC)*60000) AS QTTOTPROGHOURS, (CAST(TEMPTB.QTTMTOTREAL AS NUMERIC)*60000) AS QTTOTREALHOURS, C.IDCOURSE+ ' - ' +C.NMCOURSE AS IDNMCOURSE, CT.IDGENTYPE+ ' - ' +CT.NMGENTYPE AS IDNMTYPECOURSE FROM (SELECT TU.CDUSER, AD.CDDEPARTMENT, AP.CDPOSITION, AP.IDPOSITION, AP.NMPOSITION, CASE WHEN AP.IDPOSITION IS NOT NULL THEN CAST(AP.IDPOSITION + ' - ' + AP.NMPOSITION AS VARCHAR(310)) ELSE NULL END AS IDNMPOSITION, CASE WHEN AD.IDDEPARTMENT IS NOT NULL THEN CAST (AD.IDDEPARTMENT + ' - ' + AD.NMDEPARTMENT AS VARCHAR(310)) ELSE NULL END AS IDNMDEPARTMENT, AD.IDDEPARTMENT, AD.NMDEPARTMENT, TEMPATTACH.FGATTACHMENT, TEMPDOC.FGDOCUMENT , T.FGSTATUS , T.FGPARTTYPE, TU.FGRESULT , TU.VLPROGRESS, T.IDTRAIN, T.NMTRAIN, CAST(T.IDTRAIN + ' - ' + T.NMTRAIN AS VARCHAR(305)) AS IDNMTRAIN, ADC.IDCOMMERCIAL, ADC.NMCOMPANY, TU.VLNOTE, TU.VLFREQ, T.DTPROGSTART, T.DTPROGFINISH , T.VLCOSTPROG AS VLQTPROGCOST, T.QTPARTPROG, T.QTTMTOTPROG, T.DTREALSTART, T.DTREALFINISH , T.CDUSERINST, T.VLCOSTREAL AS VLQTREALCOST, T.QTPARTREAL, T.QTTMTOTREAL, T.FGCANCEL , T.FGINVALID , T.CDTRAIN, -1 AS CDHISTCOURSE , T.CDCOURSE , T.DTVALID, CASE  WHEN T.DTVALID < <!%TODAY%>  THEN 1  ELSE 2 END FGVALID, CASE WHEN T.FGCANCEL=1 THEN (CAST ('Cancelado' AS VARCHAR(255))) WHEN T.FGINVALID=1 THEN (CAST ('Invalidado' AS VARCHAR(255))) WHEN T.FGSTATUS=1 THEN (CAST ('Planejamento' AS VARCHAR(255))) WHEN T.FGSTATUS=2 THEN (CAST ('Aprovação do planejamento' AS VARCHAR(255))) WHEN T.FGSTATUS=3 THEN (CAST ('Não aprovado' AS VARCHAR(255))) WHEN T.FGSTATUS=4 THEN (CAST ('Iniciar' AS VARCHAR(255))) WHEN T.FGSTATUS=5 THEN (CAST ('Execução' AS VARCHAR(255))) WHEN T.FGSTATUS=7 THEN (CAST ('Verificação de eficácia' AS VARCHAR(255))) WHEN T.FGSTATUS=8 THEN (CAST ('Encerrado' AS VARCHAR(255))) WHEN T.FGSTATUS=10 THEN (CAST ('Avaliação' AS VARCHAR(255))) END AS NMFGSTATUS, 1 AS FGTYPETRAIN, TU.CDTRAINUSER , TR.FGTRAUSRCONTACCESS, CASE WHEN T.FGPROFILE <> 1 AND EXISTS (SELECT 1 FROM TRTRAINCONTENT WHERE CDTRAIN=T.CDTRAIN) AND ((  EXISTS  (SELECT 1  FROM TRTRAINUSER  WHERE CDTRAIN=T.CDTRAIN  AND CDUSER=5608) AND ((TR.FGTRAUSRCONTACCESS=1  AND T.FGSTATUS=5  AND (( TR.FGBLOCKEXECONDUE=1 AND TR.DTCONTENTDEADLINE >= CAST(CURRENT_TIMESTAMP AS DATE)) OR TR.FGBLOCKEXECONDUE=2)  AND EXISTS (SELECT 1 FROM TRTRAINUSER TU WHERE TU.FGCONTENTSTATUS=3 AND TU.CDTRAIN=T.CDTRAIN AND TU.CDUSER=5608))  OR (TR.FGTRAUSRCONTACCESS=1  AND TR.FGRETAINCONTACCESS=1  AND (( TR.FGBLOCKEXECONDUE=1 AND TR.DTCONTENTDEADLINE >= CAST(CURRENT_TIMESTAMP AS DATE)) OR TR.FGBLOCKEXECONDUE=2)  AND (( T.FGSTATUS=5 AND EXISTS (SELECT 1 FROM TRTRAINUSER TU WHERE TU.FGCONTENTSTATUS=3 AND TU.CDTRAIN=T.CDTRAIN AND TU.CDUSER=5608)) OR T.FGSTATUS > 5))  OR (TR.FGTRAUSRCONTACCESS=2  AND (SELECT COUNT(1) FROM TRTRAINCONTENT WHERE CDTRAIN=T.CDTRAIN)=1  AND EXISTS (SELECT 1 FROM TRTRAINCONTENT TRTC INNER JOIN TRCONTENT TRC ON (TRC.CDCONTENT=TRTC.CDCONTENT AND TRTC.NRREVISION=TRC.NRREVISION) WHERE TRC.NRTOKEN IS NOT NULL AND TRTC.CDTRAIN=T.CDTRAIN)))) OR EXISTS (SELECT 1 FROM ADTEAMUSER WHERE CDTEAM=T.CDTEAMREAL AND CDUSER=5608) OR ( T.CDTEAMPROG IS NOT NULL AND EXISTS  (SELECT 1  FROM ADTEAMUSER  WHERE CDTEAM=T.CDTEAMPROG  AND CDUSER=5608)) OR ( EXISTS  (SELECT 1  FROM ADTEAMUSER  WHERE CDTEAM= (SELECT VLPARAM  FROM ADPARAMS  WHERE CDISOSYSTEM=153  AND CDPARAM =1)  AND CDUSER=5608)) OR ( T.CDUSERINST=5608)) THEN 1 ELSE 0 END AS FGALLOWACESSCONTENTTRAIN, TCONF.IDCONFIGURATION+ ' - ' +TCONF.NMCONFIGURATION AS IDNMCONFIGURATION, CASE WHEN T.FGCANCEL=1 THEN (CAST ('Cancelado' AS VARCHAR(255))) WHEN T.FGINVALID=1 THEN (CAST ('Invalidado' AS VARCHAR(255))) WHEN T.FGSTATUS=1 THEN (CAST ('Planejamento' AS VARCHAR(255))) WHEN T.FGSTATUS=2 THEN (CAST ('Aprovação do planejamento' AS VARCHAR(255))) WHEN T.FGSTATUS=3 THEN (CAST ('Não aprovado' AS VARCHAR(255))) WHEN T.FGSTATUS=4 THEN (CAST ('Iniciar' AS VARCHAR(255))) WHEN T.FGSTATUS=5 THEN (CAST ('Execução' AS VARCHAR(255))) WHEN T.FGSTATUS=7 THEN (CAST ('Verificação de eficácia' AS VARCHAR(255))) WHEN T.FGSTATUS=8 THEN (CAST ('Encerrado' AS VARCHAR(255))) WHEN T.FGSTATUS=10 THEN (CAST ('Avaliação' AS VARCHAR(255))) END AS IDSTATUS, CASE WHEN TRM.IDTRAININGMETHOD IS NOT NULL THEN CAST(TRM.IDTRAININGMETHOD + ' - ' + TRM.NMTRAININGMETHOD AS VARCHAR(350)) ELSE NULL END AS IDNMTRAININGMETHOD FROM TRTRAINING T INNER JOIN TRCONFIGURATION TCONF ON (T.CDCONFIGURATION=TCONF.CDCONFIGURATION) INNER JOIN TRCOURSE C ON (T.CDCOURSE=C.CDCOURSE) INNER JOIN TRTRAINUSER TU ON (T.CDTRAIN=TU.CDTRAIN) INNER JOIN ADDEPARTMENT AD ON (TU.CDDEPARTMENT=AD.CDDEPARTMENT) INNER JOIN ADPOSITION AP ON (TU.CDPOSITION=AP.CDPOSITION) INNER JOIN TRCONTENTCONFIG TR ON (TR.CDCONTENTCONFIG=T.CDCONTENTCONFIG) LEFT OUTER JOIN ADCOMPANY ADC ON (ADC.CDCOMPANY=T.CDCOMPANY) LEFT OUTER JOIN (SELECT CASE WHEN COUNT(1) > 0 THEN 2 ELSE 0 END AS FGATTACHMENT, TRTA.CDTRAIN FROM TRTRAINATTACH TRTA GROUP BY TRTA.CDTRAIN) TEMPATTACH ON (TEMPATTACH.CDTRAIN=T.CDTRAIN) LEFT OUTER JOIN (SELECT CASE WHEN COUNT(1) > 0 THEN 1 ELSE 2 END AS FGDOCUMENT, TD.CDTRAIN FROM DCDOCUMENT D INNER JOIN TRTRAINDOC TD ON ( D.CDDOCUMENT=TD.CDDOCUMENT) GROUP BY TD.CDTRAIN) TEMPDOC ON (TEMPDOC.CDTRAIN=T.CDTRAIN) LEFT OUTER JOIN TRTRAININGMETHOD TRM ON (TRM.CDTRAININGMETHOD=T.CDTRAININGMETHOD) WHERE T.FGPROFILE <> 1 AND COALESCE(T.FGCANCEL,2) <> 1 AND COALESCE(T.FGINVALID,2) <> 1 AND EXISTS (SELECT 1 FROM DCDOCTRAIN DT  INNER JOIN DCDOCUMENT DC ON (DT.CDDOCUMENT=DC.CDDOCUMENT)  INNER JOIN DCDOCREVISION DR ON (DR.CDDOCUMENT=DC.CDDOCUMENT AND DR.CDREVISION=DT.CDREVISION)  INNER JOIN DCCATEGORY CT ON (DR.CDCATEGORY=CT.CDCATEGORY) WHERE 1=1 AND DT.CDTRAIN=T.CDTRAIN AND UPPER(DR.IDDOCUMENT) LIKE UPPER('%POP-IN-O-076%')) UNION ALL SELECT TTC.CDUSER, AD.CDDEPARTMENT, AP.CDPOSITION, AP.IDPOSITION, AP.NMPOSITION, CASE WHEN AP.IDPOSITION IS NOT NULL THEN CAST(AP.IDPOSITION + ' - ' + AP.NMPOSITION AS VARCHAR(310)) ELSE NULL END AS IDNMPOSITION, CASE WHEN AD.IDDEPARTMENT IS NOT NULL THEN CAST (AD.IDDEPARTMENT + ' - ' + AD.NMDEPARTMENT AS VARCHAR(310)) ELSE NULL END AS IDNMDEPARTMENT, AD.IDDEPARTMENT, AD.NMDEPARTMENT, 0 AS FGATTACHMENT, -1 AS FGDOCUMENT, TTC.FGSTATUS, NULL AS FGPARTTYPE, TTC.FGCAPABLE AS FGRESULT, TTC.VLPROGRESS, CAST(NULL AS VARCHAR (305)) AS IDTRAIN, CAST(NULL AS VARCHAR (305)) AS NMTRAIN, CAST(NULL AS VARCHAR (305)) AS IDNMTRAIN, NULL AS IDCOMMERCIAL, NULL AS NMCOMPANY, NULL AS VLNOTE, NULL AS VLFREQ, NULL AS DTPROGSTART, NULL AS DTPROGFINISH, NULL AS VLQTPROGCOST, NULL AS QTPARTPROG, NULL AS QTTMTOTPROG, TTC.DTSTART AS DTREALSTART, TTC.DTFINISH AS DTREALFINISH, NULL AS CDUSERINST, NULL AS VLQTREALCOST, NULL AS QTPARTREAL, (SELECT COALESCE(SUM(QTTMTOT), 0) FROM TRCOURSETRAIL TCT INNER JOIN TRCOURSE TC ON (TC.CDCOURSE=TCT.CDCOURSETRAIL) WHERE TCT.CDCOURSE=TTC.CDCOURSE) AS QTTMTOTREAL, NULL AS FGCANCEL, NULL AS FGINVALID, -1 AS CDTRAIN, -1 AS CDHISTCOURSE, TTC.CDCOURSE, NULL AS DTVALID, NULL AS FGVALID, NULL AS NMFGSTATUS, 3 AS FGTYPETRAIN, NULL AS CDTRAINUSER, NULL AS FGTRAUSRCONTACCESS, 0 AS FGALLOWACESSCONTENTTRAIN, NULL AS IDNMCONFIGURATION, CASE WHEN TTC.FGSTATUS=1 THEN (CAST ('Iniciar' AS VARCHAR(255))) WHEN TTC.FGSTATUS=2 THEN (CAST ('Execução' AS VARCHAR(255))) WHEN TTC.FGSTATUS=3 THEN (CAST ('Encerrado' AS VARCHAR(255))) END AS IDSTATUS, NULL AS IDNMTRAININGMETHOD FROM TRTRAILEXECUSER TTC INNER JOIN ADUSERDEPTPOS ADP ON (ADP.CDUSER=TTC.CDUSER AND ADP.FGDEFAULTDEPTPOS=1) INNER JOIN ADDEPARTMENT AD ON (ADP.CDDEPARTMENT=AD.CDDEPARTMENT) INNER JOIN ADPOSITION AP ON (ADP.CDPOSITION=AP.CDPOSITION) WHERE 1=1 UNION ALL SELECT HC.CDUSER, AD.CDDEPARTMENT, AP.CDPOSITION, AP.IDPOSITION, AP.NMPOSITION, CASE WHEN AP.IDPOSITION IS NOT NULL THEN CAST(AP.IDPOSITION + ' - ' + AP.NMPOSITION AS VARCHAR(310)) ELSE NULL END AS IDNMPOSITION, CASE WHEN AD.IDDEPARTMENT IS NOT NULL THEN CAST (AD.IDDEPARTMENT + ' - ' + AD.NMDEPARTMENT AS VARCHAR(310)) ELSE NULL END AS IDNMDEPARTMENT, AD.IDDEPARTMENT, AD.NMDEPARTMENT, TEMPATTACH.FGATTACHMENT, -1 AS FGDOCUMENT, -1 AS FGSTATUS, -1 AS FGPARTTYPE, -1 AS FGRESULT, NULL AS VLPROGRESS, CAST(NULL AS VARCHAR (305)) AS IDTRAIN, CAST(NULL AS VARCHAR (305)) AS NMTRAIN, CAST(NULL AS VARCHAR (305)) AS IDNMTRAIN, AC.IDCOMMERCIAL , AC.NMCOMPANY, HC.VLNOTE, HC.VLFREQ, NULL AS DTPROGSTART , NULL AS DTPROGFINISH, NULL AS VLQTPROGCOST, NULL AS QTPARTPROG , NULL AS QTTMTOTPROG , HC.DTSTART AS DTREALSTART , HC.DTFINISH AS DTREALFINISH, NULL AS CDUSERINST , NULL AS VLQTREALCOST, NULL AS QTPARTREAL , HC.QTTMTOT AS QTTMTOTREAL, NULL AS FGCANCEL, NULL AS FGINVALID, -1 AS CDTRAIN, HC.CDHISTCOURSE , HC.CDCOURSE , TRA.DTVALID , CASE  WHEN TRA.DTVALID < <!%TODAY%>  THEN 1  ELSE 2 END FGVALID , NULL AS NMFGSTATUS , 2 AS FGTYPETRAIN , NULL AS CDTRAINUSER , NULL AS FGTRAUSRCONTACCESS , CASE WHEN TRA.FGPROFILE <> 1 AND EXISTS (SELECT 1 FROM TRTRAINCONTENT WHERE CDTRAIN=TRA.CDTRAIN) AND ((  EXISTS  (SELECT 1  FROM TRTRAINUSER  WHERE CDTRAIN=TRA.CDTRAIN  AND CDUSER=5608) AND ((TR.FGTRAUSRCONTACCESS=1  AND TRA.FGSTATUS=5  AND (( TR.FGBLOCKEXECONDUE=1 AND TR.DTCONTENTDEADLINE >= CAST(CURRENT_TIMESTAMP AS DATE)) OR TR.FGBLOCKEXECONDUE=2)  AND EXISTS (SELECT 1 FROM TRTRAINUSER TU WHERE TU.FGCONTENTSTATUS=3 AND TU.CDTRAIN=TRA.CDTRAIN AND TU.CDUSER=5608))  OR (TR.FGTRAUSRCONTACCESS=1  AND TR.FGRETAINCONTACCESS=1  AND (( TR.FGBLOCKEXECONDUE=1 AND TR.DTCONTENTDEADLINE >= CAST(CURRENT_TIMESTAMP AS DATE)) OR TR.FGBLOCKEXECONDUE=2)  AND (( TRA.FGSTATUS=5 AND EXISTS (SELECT 1 FROM TRTRAINUSER TU WHERE TU.FGCONTENTSTATUS=3 AND TU.CDTRAIN=TRA.CDTRAIN AND TU.CDUSER=5608)) OR TRA.FGSTATUS > 5))  OR (TR.FGTRAUSRCONTACCESS=2  AND (SELECT COUNT(1) FROM TRTRAINCONTENT WHERE CDTRAIN=TRA.CDTRAIN)=1  AND EXISTS (SELECT 1 FROM TRTRAINCONTENT TRTC INNER JOIN TRCONTENT TRC ON (TRC.CDCONTENT=TRTC.CDCONTENT AND TRTC.NRREVISION=TRC.NRREVISION) WHERE TRC.NRTOKEN IS NOT NULL AND TRTC.CDTRAIN=TRA.CDTRAIN)))) OR EXISTS (SELECT 1 FROM ADTEAMUSER WHERE CDTEAM=TRA.CDTEAMREAL AND CDUSER=5608) OR ( TRA.CDTEAMPROG IS NOT NULL AND EXISTS  (SELECT 1  FROM ADTEAMUSER  WHERE CDTEAM=TRA.CDTEAMPROG  AND CDUSER=5608)) OR ( EXISTS  (SELECT 1  FROM ADTEAMUSER  WHERE CDTEAM= (SELECT VLPARAM  FROM ADPARAMS  WHERE CDISOSYSTEM=153  AND CDPARAM =1)  AND CDUSER=5608)) OR ( TRA.CDUSERINST=5608)) THEN 1 ELSE 0 END AS FGALLOWACESSCONTENTTRAIN, NULL AS IDNMCONFIGURATION, NULL AS IDSTATUS, CASE WHEN TRM.IDTRAININGMETHOD IS NOT NULL THEN CAST(TRM.IDTRAININGMETHOD + ' - ' + TRM.NMTRAININGMETHOD AS VARCHAR(350)) ELSE NULL END AS IDNMTRAININGMETHOD FROM TRHISTCOURSE HC INNER JOIN ADCOMPANY AC ON (HC.CDCOMPANY=AC.CDCOMPANY) INNER JOIN ADUSERDEPTPOS ADP ON ( ADP.CDUSER=HC.CDUSER AND ADP.FGDEFAULTDEPTPOS=1) INNER JOIN ADDEPARTMENT AD ON ( ADP.CDDEPARTMENT=AD.CDDEPARTMENT) INNER JOIN ADPOSITION AP ON ( ADP.CDPOSITION=AP.CDPOSITION) LEFT OUTER JOIN TRTRAINING TRA ON (TRA.CDHISTCOURSE=HC.CDHISTCOURSE AND TRA.FGPROFILE=1) LEFT OUTER JOIN TRTRAININGMETHOD TRM ON (TRM.CDTRAININGMETHOD=TRA.CDTRAININGMETHOD) LEFT OUTER JOIN TRCONTENTCONFIG TR ON (TR.CDCONTENTCONFIG=TRA.CDCONTENTCONFIG) LEFT OUTER JOIN (SELECT CASE  WHEN COUNT(1) > 0  THEN 3  ELSE 0 END AS FGATTACHMENT, TRHC.CDHISTCOURSE FROM TRHISTCOURSEDOC TRHC GROUP BY TRHC.CDHISTCOURSE) TEMPATTACH ON (TEMPATTACH.CDHISTCOURSE=HC.CDHISTCOURSE) WHERE 1=1) TEMPTB INNER JOIN ADUSER USU ON (TEMPTB.CDUSER=USU.CDUSER) INNER JOIN TRCOURSE C ON (TEMPTB.CDCOURSE=C.CDCOURSE) INNER JOIN GNGENTYPE CT ON (C.CDCOURSETYPE=CT.CDGENTYPE)LEFT OUTER JOIN (SELECT DISTINCT Z.CDUSER, Z.CDUSERDATA FROM (/* Pares */ SELECT ADU1.CDUSER,  ADU2.CDUSER AS CDUSERDATA FROM ADUSER ADU1  INNER JOIN ADUSER ADU2  ON (ADU1.CDUSER <> ADU2.CDUSER)  INNER JOIN ADUSERDEPTPOS ADUDP1  ON (ADUDP1.CDUSER=ADU1.CDUSER)  INNER JOIN ADUSERDEPTPOS ADUDP2  ON (ADUDP2.CDUSER=ADU2.CDUSER)  INNER JOIN ADPARAMS ADP1  ON (ADP1.CDPARAM=20 AND ADP1.CDISOSYSTEM=153)  INNER JOIN ADPARAMS ADP2  ON (ADP2.CDPARAM=21 AND ADP2.CDISOSYSTEM=153)  INNER JOIN ADPARAMS ADP3  ON (ADP3.CDPARAM=22 AND ADP3.CDISOSYSTEM=153)  INNER JOIN ADPARAMS ADP  ON (ADP.CDPARAM=3 AND ADP.CDISOSYSTEM=153 AND ADP.VLPARAM=1) WHERE 1=1 AND  (( ADP1.VLPARAM=1 AND ADP2.VLPARAM=2 AND ADU2.CDLEADER=ADU1.CDLEADER)  OR (ADP2.VLPARAM=1 AND ADP1.VLPARAM=2 AND ADUDP2.CDDEPARTMENT=ADUDP1.CDDEPARTMENT AND ADUDP2.CDPOSITION=ADUDP1.CDPOSITION)  OR (ADP1.VLPARAM=1 AND ADP2.VLPARAM=1 AND ADP3.VLPARAM=2 AND (( ADU2.CDLEADER=ADU1.CDLEADER) OR  ( ADUDP2.CDDEPARTMENT=ADUDP1.CDDEPARTMENT  AND ADUDP2.CDPOSITION=ADUDP1.CDPOSITION)))  OR (ADP1.VLPARAM=1 AND ADP2.VLPARAM=1 AND ADP3.VLPARAM=1 AND (( ADU2.CDLEADER=ADU1.CDLEADER) AND  ( ADUDP2.CDDEPARTMENT=ADUDP1.CDDEPARTMENT  AND ADUDP2.CDPOSITION=ADUDP1.CDPOSITION)))) AND ADU2.CDUSER=5608 GROUP BY ADU1.CDUSER,  ADU2.CDUSER  UNION/**/ ALL  /* Lider */ SELECT ADL.CDLEADER AS CDUSER, ADL.CDUSER AS CDUSERDATA FROM ADUSER ADL INNER JOIN ADPARAMS ADP ON ( ADP.CDPARAM=4 AND ADP.CDISOSYSTEM=153 AND ADP.VLPARAM=1) WHERE ADL.CDLEADER IS NOT NULL AND ADL.CDUSER=5608  UNION/**/ ALL  /* Liderados */ SELECT T.CDUSER, 5608 AS CDUSERDATA FROM (SELECT ADU1.CDUSER, ADU0.CDUSER AS CDLEADER, 1 AS NRLEVEL FROM ADUSER ADU0 INNER JOIN ADUSER ADU1 ON (ADU1.CDLEADER=ADU0.CDUSER) WHERE ADU0.CDUSER=5608 UNION/**/ SELECT ADU2.CDUSER, ADU0.CDUSER AS CDLEADER, 2 AS NRLEVEL FROM ADUSER ADU0 INNER JOIN ADUSER ADU1 ON (ADU1.CDLEADER=ADU0.CDUSER) INNER JOIN ADUSER ADU2 ON (ADU2.CDLEADER=ADU1.CDUSER) WHERE ADU0.CDUSER=5608 UNION/**/ SELECT ADU3.CDUSER, ADU0.CDUSER AS CDLEADER, 3 AS NRLEVEL FROM ADUSER ADU0 INNER JOIN ADUSER ADU1 ON (ADU1.CDLEADER=ADU0.CDUSER) INNER JOIN ADUSER ADU2 ON (ADU2.CDLEADER=ADU1.CDUSER) INNER JOIN ADUSER ADU3 ON (ADU3.CDLEADER=ADU2.CDUSER) WHERE ADU0.CDUSER=5608 UNION/**/ SELECT ADU4.CDUSER, ADU0.CDUSER AS CDLEADER, 4 AS NRLEVEL FROM ADUSER ADU0 INNER JOIN ADUSER ADU1 ON (ADU1.CDLEADER=ADU0.CDUSER) INNER JOIN ADUSER ADU2 ON (ADU2.CDLEADER=ADU1.CDUSER) INNER JOIN ADUSER ADU3 ON (ADU3.CDLEADER=ADU2.CDUSER) INNER JOIN ADUSER ADU4 ON (ADU4.CDLEADER=ADU3.CDUSER) WHERE ADU0.CDUSER=5608 UNION/**/ SELECT ADU5.CDUSER, ADU0.CDUSER AS CDLEADER, 5 AS NRLEVEL FROM ADUSER ADU0 INNER JOIN ADUSER ADU1 ON (ADU1.CDLEADER=ADU0.CDUSER) INNER JOIN ADUSER ADU2 ON (ADU2.CDLEADER=ADU1.CDUSER) INNER JOIN ADUSER ADU3 ON (ADU3.CDLEADER=ADU2.CDUSER) INNER JOIN ADUSER ADU4 ON (ADU4.CDLEADER=ADU3.CDUSER) INNER JOIN ADUSER ADU5 ON (ADU5.CDLEADER=ADU4.CDUSER) WHERE ADU0.CDUSER=5608) T INNER JOIN ADPARAMS ADP ON ( ADP.CDPARAM=2 AND ADP.CDISOSYSTEM=153 AND ADP.VLPARAM=1)  UNION/**/ ALL  /* Proprio usuario */ SELECT 5608 AS CDUSER, 5608 AS CDUSERDATA FROM ADMINISTRATION) Z) USERPERM ON (USERPERM.CDUSER=USU.CDUSER AND USERPERM.CDUSERDATA=5608) WHERE 1=1 AND (EXISTS (SELECT ADT1.CDUSER FROM ADTEAMUSER ADT1  INNER JOIN ADPARAMS ADP  ON (ADP.CDPARAM=1 AND ADP.CDISOSYSTEM=153 AND ADP.VLPARAM=ADT1.CDTEAM) WHERE ADT1.CDUSER=5608)  OR USERPERM.CDUSER IS NOT NULL) AND USU.FGUSERENABLED=1 AND TEMPTB.FGTYPETRAIN IN (1)
