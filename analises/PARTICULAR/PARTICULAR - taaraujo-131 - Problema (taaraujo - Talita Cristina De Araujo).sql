SELECT ID_PROCESS,NMPROCESS,QTD_BI,IDSLASTATUS,DTSTART,NMUSERSTART,NMEVALRESULT,NMOCCURRENCETYPE,NMDEADLINE,IDSITUATION,NMREVISIONSTATUS,IDREVISIONSTATUS,DTDEADLINEFIELD,DTFINISH,DTSLAFINISH,TDS014TDS001,TDS014TDS002,TDS014TDS003,TDS014TDS004,TDS014TDS005,TDS014TDS006,TDS014TDS007,TDS014TDS008,TDS014TDS009,TDS014TDS010,TDS014TDS011,TDS014TDS012,TDS014TDS013,TDS014TDS014,TDS014TDS015,TDS014TDS016,TDS014TDS017,TDS014TDS018,TDS014TDS019,TDS014TDS020,TDS014TDS021,TDS014TDS022,TDS014TDS023,TDS014TDS024,TDS014TDS025,TDS014TDS026,TDS014TDS027,TDS014TDS028,TDS014TDS029,TDS014TDS030,TDS014TDS031,TDS014TDS032,TDS014TDS033,TDS014TDS034,TDS014TDS035,TDS014TDS036,TDS014TDS037,TDS014TDS038,TDS014TDS039,TDS014TDS040,TDS014TDS041,TDS014TDS042,TDS014TDS043,TDS014TDS044,TDS014TDS045,TDS014TDS046,TDS014TDS047,TDS014TDS048,TDS014TDS049,TDS014TDS050,TDS014TDS051,TDS014TDS052,TDS014TDS053,TDS014TDS054,TDS014TDS055,TDS014TDS056,TDS014TDS057,TDS014TDS058,TDS014TDS059,TDS014TDS060,TDS014TDS078,TDS014TDS079,TDS014TDS080,TDS014TDS081,TDS014TDS062,TDS014TDS082,TDS014TDS084,TDS014TDS083,TDS014TDS085,TDS014TDS086,TDS014TDS087,TDS014TDS088,TDS014TDS089,TDS014TDS090,TDS014TDS091,TDS014TDS092,TDS014TDS093,TDS014TDS094,TDS014TDS095,TDS014TDS096,TDS014TDS097,TDS014TDS098,TDS014TDS099,TDS014TDS100,TDS014TDS101,TDS014TDS061,TDS014TDS063,TDS014TDS064,TDS014TDS065,TDS014TDS066,TDS014TDS067,TDS014TDS068,TDS014TDS069,TDS014TDS070,TDS014TDS071,TDS014TDS072,TDS014TDS073,TDS014TDS074,TDS014TDS075,TDS014TDS076,TDS014TDS077,TDS035TDS001,ABCCC7ZU3EKCKX5TBS001,TDS035TDS002,TDS035TDS003,TDS035TDS004,TDS035TDS005,TDS035TDS006,TDS035TDS007,TDS035TDS008,TDS035TDS009,TDS035TDS010,TDS035TDS011,TDS035TDS012,TDS035TDS013,TDS035TDS014,TDS035TDS015,TDS035TDS016,TDS035TDS017,TDS035TDS018,TDS035TDS019,TDS035TDS020,TDS035TDS021,TDS035TDS022,TDS035TDS023,TDS035TDS024,TDS035TDS025,TDS035TDS026,TDS035TDS027,TDS035TDS028,TDS035TDS029,TDS035TDS033,TDS035TDS034,TDS035TDS035,TDS035TDS030,TDS035TDS031,TDS035TDS032,TDS036TDS014,ABC92YI09Y4CICZTBS001,TDS036TDS015,TDS036TDS017,TDS036TDS018,TDS036TDS020,TDS036TDS021,TDS036TDS022,TDS036TDS023,TDS036TDS024,TDS036TDS026,TDS036TDS029 FROM (SELECT ID_PROCESS,NMPROCESS,QTD_BI,IDSLASTATUS,DTSTART,NMUSERSTART,NMEVALRESULT,NMOCCURRENCETYPE,NMDEADLINE,IDSITUATION,NMREVISIONSTATUS,IDREVISIONSTATUS,DTDEADLINEFIELD,DTFINISH,DTSLAFINISH,TDS014TDS001,TDS014TDS002,TDS014TDS003,TDS014TDS004,TDS014TDS005,TDS014TDS006,TDS014TDS007,TDS014TDS008,TDS014TDS009,TDS014TDS010,TDS014TDS011,TDS014TDS012,TDS014TDS013,TDS014TDS014,TDS014TDS015,TDS014TDS016,TDS014TDS017,TDS014TDS018,TDS014TDS019,TDS014TDS020,TDS014TDS021,TDS014TDS022,TDS014TDS023,TDS014TDS024,TDS014TDS025,TDS014TDS026,TDS014TDS027,TDS014TDS028,TDS014TDS029,TDS014TDS030,TDS014TDS031,TDS014TDS032,TDS014TDS033,TDS014TDS034,TDS014TDS035,TDS014TDS036,TDS014TDS037,TDS014TDS038,TDS014TDS039,TDS014TDS040,TDS014TDS041,TDS014TDS042,TDS014TDS043,TDS014TDS044,TDS014TDS045,TDS014TDS046,TDS014TDS047,TDS014TDS048,TDS014TDS049,TDS014TDS050,TDS014TDS051,TDS014TDS052,TDS014TDS053,TDS014TDS054,TDS014TDS055,TDS014TDS056,TDS014TDS057,TDS014TDS058,TDS014TDS059,TDS014TDS060,TDS014TDS078,TDS014TDS079,TDS014TDS080,TDS014TDS081,TDS014TDS062,TDS014TDS082,TDS014TDS084,TDS014TDS083,TDS014TDS085,TDS014TDS086,TDS014TDS087,TDS014TDS088,TDS014TDS089,TDS014TDS090,TDS014TDS091,TDS014TDS092,TDS014TDS093,TDS014TDS094,TDS014TDS095,TDS014TDS096,TDS014TDS097,TDS014TDS098,TDS014TDS099,TDS014TDS100,TDS014TDS101,TDS014TDS061,TDS014TDS063,TDS014TDS064,TDS014TDS065,TDS014TDS066,TDS014TDS067,TDS014TDS068,TDS014TDS069,TDS014TDS070,TDS014TDS071,TDS014TDS072,TDS014TDS073,TDS014TDS074,TDS014TDS075,TDS014TDS076,TDS014TDS077,TDS035TDS001,ABCCC7ZU3EKCKX5TBS001,TDS035TDS002,TDS035TDS003,TDS035TDS004,TDS035TDS005,TDS035TDS006,TDS035TDS007,TDS035TDS008,TDS035TDS009,TDS035TDS010,TDS035TDS011,TDS035TDS012,TDS035TDS013,TDS035TDS014,TDS035TDS015,TDS035TDS016,TDS035TDS017,TDS035TDS018,TDS035TDS019,TDS035TDS020,TDS035TDS021,TDS035TDS022,TDS035TDS023,TDS035TDS024,TDS035TDS025,TDS035TDS026,TDS035TDS027,TDS035TDS028,TDS035TDS029,TDS035TDS033,TDS035TDS034,TDS035TDS035,TDS035TDS030,TDS035TDS031,TDS035TDS032,TDS036TDS014,ABC92YI09Y4CICZTBS001,TDS036TDS015,TDS036TDS017,TDS036TDS018,TDS036TDS020,TDS036TDS021,TDS036TDS022,TDS036TDS023,TDS036TDS024,TDS036TDS026,TDS036TDS029 FROM (SELECT ENT01.tds001 AS TDS014TDS001, ENT01.tds002 AS TDS014TDS002, ENT01.tds003 AS TDS014TDS003, ENT01.tds004 AS TDS014TDS004, ENT01.tds005 AS TDS014TDS005, ENT01.tds006 AS TDS014TDS006, ENT01.tds007 AS TDS014TDS007, ENT01.tds008 AS TDS014TDS008, ENT01.tds009 AS TDS014TDS009, ENT01.tds010 AS TDS014TDS010, ENT01.tds011 AS TDS014TDS011, CAST(ENT01.tds012 AS TEXT) AS TDS014TDS012, CAST(ENT01.tds013 AS TEXT) AS TDS014TDS013, CAST(ENT01.tds014 AS TEXT) AS TDS014TDS014, CAST(ENT01.tds015 AS TEXT) AS TDS014TDS015, ENT01.tds016 AS TDS014TDS016, CAST(ENT01.tds017 AS TEXT) AS TDS014TDS017, ENT01.tds018 AS TDS014TDS018, ENT01.tds019 AS TDS014TDS019, ENT01.tds020 AS TDS014TDS020, CASE WHEN ENT01.tds021 IS NULL THEN '' WHEN ENT01.tds021=1 THEN 'Sim' ELSE 'Não' END AS TDS014TDS021, CASE WHEN ENT01.tds022 IS NULL THEN '' WHEN ENT01.tds022=1 THEN 'Sim' ELSE 'Não' END AS TDS014TDS022, CASE WHEN ENT01.tds023 IS NULL THEN '' WHEN ENT01.tds023=1 THEN 'Sim' ELSE 'Não' END AS TDS014TDS023, CASE WHEN ENT01.tds024 IS NULL THEN '' WHEN ENT01.tds024=1 THEN 'Sim' ELSE 'Não' END AS TDS014TDS024, CASE WHEN ENT01.tds025 IS NULL THEN '' WHEN ENT01.tds025=1 THEN 'Sim' ELSE 'Não' END AS TDS014TDS025, ENT01.tds026 AS TDS014TDS026, ENT01.tds027 AS TDS014TDS027, ENT01.tds028 AS TDS014TDS028, ENT01.tds029 AS TDS014TDS029, ENT01.tds030 AS TDS014TDS030, ENT01.tds031 AS TDS014TDS031, ENT01.tds032 AS TDS014TDS032, ENT01.tds033 AS TDS014TDS033, ENT01.tds034 AS TDS014TDS034, ENT01.tds035 AS TDS014TDS035, ENT01.tds036 AS TDS014TDS036, ENT01.tds037 AS TDS014TDS037, ENT01.tds038 AS TDS014TDS038, ENT01.tds039 AS TDS014TDS039, ENT01.tds040 AS TDS014TDS040, ENT01.tds041 AS TDS014TDS041, CAST(ENT01.tds042 AS TEXT) AS TDS014TDS042, ENT01.tds043 AS TDS014TDS043, ENT01.tds044 AS TDS014TDS044, CAST(ENT01.tds045 AS TEXT) AS TDS014TDS045, CAST(ENT01.tds046 AS TEXT) AS TDS014TDS046, CAST(ENT01.tds047 AS TEXT) AS TDS014TDS047, CAST(ENT01.tds048 AS TEXT) AS TDS014TDS048, CAST(ENT01.tds049 AS TEXT) AS TDS014TDS049, ENT01.tds050 AS TDS014TDS050, CAST(ENT01.tds051 AS TEXT) AS TDS014TDS051, CAST(ENT01.tds052 AS TEXT) AS TDS014TDS052, CAST(ENT01.tds053 AS TEXT) AS TDS014TDS053, CAST(ENT01.tds054 AS TEXT) AS TDS014TDS054, CAST(ENT01.tds055 AS TEXT) AS TDS014TDS055, CAST(ENT01.tds056 AS TEXT) AS TDS014TDS056, ENT01.tds057 AS TDS014TDS057, CAST(ENT01.tds058 AS TEXT) AS TDS014TDS058, ENT01.tds059 AS TDS014TDS059, ENT01.tds060 AS TDS014TDS060, ENT01.tds078 AS TDS014TDS078, ENT01.tds079 AS TDS014TDS079, ENT01.tds080 AS TDS014TDS080, ENT01.tds081 AS TDS014TDS081, ENT01.tds062 AS TDS014TDS062, CAST(ENT01.tds082 AS TEXT) AS TDS014TDS082, CAST(ENT01.tds084 AS TEXT) AS TDS014TDS084, CASE WHEN ENT01.tds083 IS NULL THEN '' WHEN ENT01.tds083=1 THEN 'Sim' ELSE 'Não' END AS TDS014TDS083, CASE WHEN ENT01.tds085 IS NULL THEN '' WHEN ENT01.tds085=1 THEN 'Sim' ELSE 'Não' END AS TDS014TDS085, CASE WHEN ENT01.tds086 IS NULL THEN '' WHEN ENT01.tds086=1 THEN 'Sim' ELSE 'Não' END AS TDS014TDS086, CASE WHEN ENT01.tds087 IS NULL THEN '' WHEN ENT01.tds087=1 THEN 'Sim' ELSE 'Não' END AS TDS014TDS087, CASE WHEN ENT01.tds088 IS NULL THEN '' WHEN ENT01.tds088=1 THEN 'Sim' ELSE 'Não' END AS TDS014TDS088, CASE WHEN ENT01.tds089 IS NULL THEN '' WHEN ENT01.tds089=1 THEN 'Sim' ELSE 'Não' END AS TDS014TDS089, CASE WHEN ENT01.tds090 IS NULL THEN '' WHEN ENT01.tds090=1 THEN 'Sim' ELSE 'Não' END AS TDS014TDS090, CASE WHEN ENT01.tds091 IS NULL THEN '' WHEN ENT01.tds091=1 THEN 'Sim' ELSE 'Não' END AS TDS014TDS091, CASE WHEN ENT01.tds092 IS NULL THEN '' WHEN ENT01.tds092=1 THEN 'Sim' ELSE 'Não' END AS TDS014TDS092, CASE WHEN ENT01.tds093 IS NULL THEN '' WHEN ENT01.tds093=1 THEN 'Sim' ELSE 'Não' END AS TDS014TDS093, CAST(ENT01.tds094 AS TEXT) AS TDS014TDS094, CAST(ENT01.tds095 AS TEXT) AS TDS014TDS095, CAST(ENT01.tds096 AS TEXT) AS TDS014TDS096, CAST(ENT01.tds097 AS TEXT) AS TDS014TDS097, CAST(ENT01.tds098 AS TEXT) AS TDS014TDS098, CAST(ENT01.tds099 AS TEXT) AS TDS014TDS099, CAST(ENT01.tds100 AS TEXT) AS TDS014TDS100, CAST(ENT01.tds101 AS TEXT) AS TDS014TDS101, ENT01.tds061 AS TDS014TDS061, ENT01.tds063 AS TDS014TDS063, ENT01.tds064 AS TDS014TDS064, ENT01.tds065 AS TDS014TDS065, CASE WHEN ENT01.tds066 IS NULL THEN '' WHEN ENT01.tds066=1 THEN 'Sim' ELSE 'Não' END AS TDS014TDS066, CASE WHEN ENT01.tds067 IS NULL THEN '' WHEN ENT01.tds067=1 THEN 'Sim' ELSE 'Não' END AS TDS014TDS067, CASE WHEN ENT01.tds068 IS NULL THEN '' WHEN ENT01.tds068=1 THEN 'Sim' ELSE 'Não' END AS TDS014TDS068, CASE WHEN ENT01.tds069 IS NULL THEN '' WHEN ENT01.tds069=1 THEN 'Sim' ELSE 'Não' END AS TDS014TDS069, CAST(ENT01.tds070 AS TEXT) AS TDS014TDS070, CAST(ENT01.tds071 AS TEXT) AS TDS014TDS071, CAST(ENT01.tds072 AS TEXT) AS TDS014TDS072, CAST(ENT01.tds073 AS TEXT) AS TDS014TDS073, CASE WHEN ENT01.tds074 IS NULL THEN '' WHEN ENT01.tds074=1 THEN 'Sim' ELSE 'Não' END AS TDS014TDS074, CASE WHEN ENT01.tds075 IS NULL THEN '' WHEN ENT01.tds075=1 THEN 'Sim' ELSE 'Não' END AS TDS014TDS075, CAST(ENT01.tds076 AS TEXT) AS TDS014TDS076, CAST(ENT01.tds077 AS TEXT) AS TDS014TDS077, ENT02.tds001 AS TDS035TDS001, ENT02REF01.tbs001 AS ABCCC7ZU3EKCKX5TBS001, ENT02.tds002 AS TDS035TDS002, ENT02.tds003 AS TDS035TDS003, ENT02.tds004 AS TDS035TDS004, ENT02.tds005 AS TDS035TDS005, ENT02.tds006 AS TDS035TDS006, ENT02.tds007 AS TDS035TDS007, ENT02.tds008 AS TDS035TDS008, ENT02.tds009 AS TDS035TDS009, ENT02.tds010 AS TDS035TDS010, ENT02.tds011 AS TDS035TDS011, ENT02.tds012 AS TDS035TDS012, ENT02.tds013 AS TDS035TDS013, ENT02.tds014 AS TDS035TDS014, CAST(ENT02.tds015 AS TEXT) AS TDS035TDS015, CAST(ENT02.tds016 AS TEXT) AS TDS035TDS016, ENT02.tds017 AS TDS035TDS017, CAST(ENT02.tds018 AS TEXT) AS TDS035TDS018, CAST(ENT02.tds019 AS TEXT) AS TDS035TDS019, CAST(ENT02.tds020 AS TEXT) AS TDS035TDS020, CAST(ENT02.tds021 AS TEXT) AS TDS035TDS021, ENT02.tds022 AS TDS035TDS022, ENT02.tds023 AS TDS035TDS023, CAST(ENT02.tds024 AS TEXT) AS TDS035TDS024, CAST(ENT02.tds025 AS TEXT) AS TDS035TDS025, ENT02.tds026 AS TDS035TDS026, ENT02.tds027 AS TDS035TDS027, CAST(ENT02.tds028 AS TEXT) AS TDS035TDS028, ENT02.tds029 AS TDS035TDS029, ENT02.tds033 AS TDS035TDS033, ENT02.tds034 AS TDS035TDS034, ENT02.tds035 AS TDS035TDS035, ENT02.tds030 AS TDS035TDS030, ENT02.tds031 AS TDS035TDS031, ENT02.tds032 AS TDS035TDS032, ENT03.tds014 AS TDS036TDS014, ENT03REF02.tbs001 AS ABC92YI09Y4CICZTBS001, CAST(ENT03.tds015 AS TEXT) AS TDS036TDS015, ENT03.tds017 AS TDS036TDS017, CAST(ENT03.tds018 AS TEXT) AS TDS036TDS018, CAST(ENT03.tds020 AS TEXT) AS TDS036TDS020, CAST(ENT03.tds021 AS TEXT) AS TDS036TDS021, ENT03.tds022 AS TDS036TDS022, ENT03.tds023 AS TDS036TDS023, CAST(ENT03.tds024 AS TEXT) AS TDS036TDS024, ENT03.tds026 AS TDS036TDS026, ENT03.tds029 AS TDS036TDS029, 1 AS QTD_BI, P.IDOBJECT, P.IDPROCESS AS ID_PROCESS, P.NMPROCESS, P.CDPROCESSMODEL, P.CDREVISION, P.IDPROCESSMODEL, P.NMPROCESSMODEL, P.FGSTATUS AS FGSTATUS,CONVERT(DATETIME, P.DTSTART + ' ' + P.TMSTART, 120) AS DTSTART,CONVERT(DATETIME, P.DTFINISH + ' ' + P.TMFINISH, 120) AS DTFINISH,SWITCHOFFSET(CAST(DATEADD(MINUTE, (CAST(SLACTRL.BNSLAFINISH AS BIGINT) / 1000)/60, '1970-01-01') AS DATETIMEOFFSET),'-03:00') AS DTSLAFINISH, P.TMSTART, P.TMFINISH, P.CDUSERSTART, ADU.NMUSER AS NMUSERSTART, P.CDFAVORITE, P.FGSLASTATUS, CASE P.FGSTATUS WHEN 1 THEN 'Andamento' WHEN 2 THEN 'Suspenso' WHEN 3 THEN 'Cancelado' WHEN 4 THEN 'Encerrado' WHEN 5 THEN 'Bloqueado para edição' END AS IDSITUATION, CASE P.FGSLASTATUS WHEN 10 THEN 'Play' WHEN 30 THEN 'Pause' WHEN 40 THEN 'Stop' END AS IDSLASTATUS, CASE WHEN P.VLTIMEFINISH IS NULL THEN 9999999999 ELSE P.VLTIMEFINISH END AS VLTIMEFINISH, GREV.IDREVISION, SLACTRL.BNSLAFINISH, PT.CDACTTYPE, PT.IDACTTYPE, PT.NMACTTYPE, PP.NMACTIVITY AS PROCESSMODEL, GNRS.IDREVISIONSTATUS, GNRS.NMREVISIONSTATUS, GNRS.CDREVISIONSTATUS, GNRS.FGLOGO AS FGLOGOREVISIONSTATUS, GNRUS.VLEVALRESULT, GNR.NMEVALRESULT, GNR.FGSYMBOL, CASE WHEN GNR.NRORDER IS NULL THEN -999999999 ELSE GNR.NRORDER END AS NRORDERPRIORITY, dateadd(minute, P.NRTIMEESTFINISH, P.DTESTIMATEDFINISH) AS DTDEADLINEFIELD, P.NRTIMEESTFINISH AS NRHRDEADLINEFIELD, CAST('VLTIMEFINISH' AS VARCHAR(50)) AS NRDEADLINEFIELD_IMG, CAST('VLTIMEFINISH' AS VARCHAR(50)) AS DEADLINEFIELD_DT, (SELECT TOP 1 1 FROM WFPROCDOCUMENT T_QTD_DOC WHERE T_QTD_DOC.IDPROCESS=P.IDOBJECT) AS QTD_DOC, (SELECT TOP 1 1 FROM WFPROCATTACHMENT T_QTD_ATT WHERE T_QTD_ATT.IDPROCESS=P.IDOBJECT AND T_QTD_ATT.CDUSER IS NOT NULL) AS QTD_ATT, ROW_NUMBER() OVER (ORDER/**/ BY P.IDPROCESS ASC) AS ROW_NUM, CASE WHEN P.FGSTATUS IN (1,2,3,5) THEN (CAST(FLOOR(CAST((GETDATE()-(P.DTSTART+' '+P.TMSTART)) AS NUMERIC(18,8))) AS VARCHAR) + ' dia(s) ' + CAST(FLOOR((CAST((GETDATE()-(P.DTSTART+' '+P.TMSTART)) AS NUMERIC(18,8)) - FLOOR(CAST((GETDATE()-(P.DTSTART+' '+P.TMSTART)) AS NUMERIC(18,8))))*24) AS VARCHAR) + ' hora(s) ' + CAST(FLOOR((((CAST((GETDATE()-(P.DTSTART+' '+P.TMSTART)) AS NUMERIC(18,8)) - FLOOR(CAST((GETDATE()-(P.DTSTART+' '+P.TMSTART)) AS NUMERIC(18,8))))*24) - FLOOR((CAST((GETDATE()-(P.DTSTART+' '+P.TMSTART)) AS NUMERIC(18,8)) - FLOOR(CAST((GETDATE()-(P.DTSTART+' '+P.TMSTART)) AS NUMERIC(18,8))))*24))*60) AS VARCHAR) + ' minuto(s)') WHEN P.FGSTATUS=4 THEN (CAST(FLOOR(CAST(((P.DTFINISH+' '+P.TMFINISH) - (P.DTSTART+' '+P.TMSTART)) AS NUMERIC(18,8))) AS VARCHAR) + ' dia(s) ' + CAST(FLOOR((CAST(((P.DTFINISH+' '+P.TMFINISH) - (P.DTSTART+' '+P.TMSTART)) AS NUMERIC(18,8)) - FLOOR(CAST(((P.DTFINISH+' '+P.TMFINISH) - (P.DTSTART+' '+P.TMSTART)) AS NUMERIC(18,8))))*24) AS VARCHAR) + ' hora(s) ' + CAST(FLOOR((((CAST(((P.DTFINISH+' '+P.TMFINISH) - (P.DTSTART+' '+P.TMSTART)) AS NUMERIC(18,8)) - FLOOR(CAST(((P.DTFINISH+' '+P.TMFINISH) - (P.DTSTART+' '+P.TMSTART)) AS NUMERIC(18,8))))*24) - FLOOR((CAST(((P.DTFINISH+' '+P.TMFINISH) - (P.DTSTART+' '+P.TMSTART)) AS NUMERIC(18,8)) - FLOOR(CAST(((P.DTFINISH+' '+P.TMFINISH) - (P.DTSTART+' '+P.TMSTART)) AS NUMERIC(18,8))))*24))*60) AS VARCHAR) + ' minuto(s)') END AS DURATION_WF, CASE WHEN P.FGCONCLUDEDSTATUS IS NOT NULL THEN (CASE WHEN P.FGCONCLUDEDSTATUS=1 THEN 1 WHEN P.FGCONCLUDEDSTATUS=2 THEN 3 END) ELSE (CASE WHEN (( P.DTESTIMATEDFINISH > CAST((dateadd(dd, datediff(dd,0, getDate()), 0) + 1) AS DATETIME)) OR (P.DTESTIMATEDFINISH IS NULL)) THEN 1 WHEN (( P.DTESTIMATEDFINISH=CAST( dateadd(dd, datediff(dd,0, getDate()), 0) AS DATETIME) AND P.NRTIMEESTFINISH >= (datepart(minute, getdate()) + datepart(hour, getdate()) * 60)) OR (P.DTESTIMATEDFINISH=CAST((dateadd(dd, datediff(dd,0, getDate()), 0) + 1) AS DATETIME))) THEN 2 ELSE 3 END) END AS FGDEADLINE, CASE WHEN P.FGCONCLUDEDSTATUS IS NOT NULL THEN (CASE WHEN P.FGCONCLUDEDSTATUS=1 THEN 1 WHEN P.FGCONCLUDEDSTATUS=2 THEN 3 END) ELSE (CASE WHEN (( P.DTESTIMATEDFINISH > CAST((dateadd(dd, datediff(dd,0, getDate()), 0) + 1) AS DATETIME)) OR (P.DTESTIMATEDFINISH IS NULL)) THEN 1 WHEN (( P.DTESTIMATEDFINISH=CAST( dateadd(dd, datediff(dd,0, getDate()), 0) AS DATETIME) AND P.NRTIMEESTFINISH >= (datepart(minute, getdate()) + datepart(hour, getdate()) * 60)) OR (P.DTESTIMATEDFINISH=CAST((dateadd(dd, datediff(dd,0, getDate()), 0) + 1) AS DATETIME))) THEN 2 ELSE 3 END) END AS FGDEADLINE2, CASE WHEN P.FGCONCLUDEDSTATUS IS NOT NULL THEN (CASE WHEN P.FGCONCLUDEDSTATUS=1 THEN 'Em dia' WHEN P.FGCONCLUDEDSTATUS=2 THEN 'Em atraso' END) ELSE (CASE WHEN (( P.DTESTIMATEDFINISH > CAST((dateadd(dd, datediff(dd,0, getDate()), 0) + 1) AS DATETIME)) OR (P.DTESTIMATEDFINISH IS NULL)) THEN 'Em dia' WHEN (( P.DTESTIMATEDFINISH=CAST( dateadd(dd, datediff(dd,0, getDate()), 0) AS DATETIME) AND P.NRTIMEESTFINISH >= (datepart(minute, getdate()) + datepart(hour, getdate()) * 60)) OR (P.DTESTIMATEDFINISH=CAST((dateadd(dd, datediff(dd,0, getDate()), 0) + 1) AS DATETIME))) THEN 'Próximo do vencimento' ELSE 'Em atraso' END) END AS NMDEADLINE ,P.QTHOURS AS QTHOURS, P.FGDURATIONUNIT AS FGDURATIONUNIT, P.CDPROCESS, GNT.IDGENTYPE AS IDOCCURRENCETYPE, GNT.NMGENTYPE AS NMOCCURRENCETYPE, INCID.CDOCCURRENCETYPE AS CDOCCURRENCETYPE, GNT.FGLOGO AS FGLOGOOCCURRENCETYPE FROM WFPROCESS P LEFT OUTER JOIN GNREVISION GREV ON (P.CDREVISION=GREV.CDREVISION) LEFT OUTER JOIN GNSLACONTROL SLACTRL ON (P.CDSLACONTROL=SLACTRL.CDSLACONTROL) LEFT OUTER JOIN ADUSER ADU ON (ADU.CDUSER=P.CDUSERSTART) LEFT OUTER JOIN PMACTIVITY PP ON (PP.CDACTIVITY=P.CDPROCESSMODEL) LEFT OUTER JOIN PMACTTYPE PT ON (PT.CDACTTYPE=PP.CDACTTYPE) LEFT OUTER JOIN GNREVISIONSTATUS GNRS ON (P.CDSTATUS=GNRS.CDREVISIONSTATUS) LEFT OUTER JOIN GNEVALRESULTUSED GNRUS ON (GNRUS.CDEVALRESULTUSED=P.CDEVALRSLTPRIORITY) LEFT OUTER JOIN GNEVALRESULT GNR ON (GNRUS.CDEVALRESULT=GNR.CDEVALRESULT) INNER JOIN INOCCURRENCE INCID ON (P.IDOBJECT=INCID.IDWORKFLOW) LEFT OUTER JOIN GNGENTYPE GNT ON (INCID.CDOCCURRENCETYPE=GNT.CDGENTYPE) INNER JOIN PBPROBLEM PB ON PB.CDOCCURRENCE=INCID.CDOCCURRENCE INNER JOIN (SELECT DISTINCT Z.IDOBJECT FROM (SELECT P.IDOBJECT FROM WFPROCESS P INNER JOIN (SELECT PERM.USERCD, PERM.IDPROCESS, MIN(PERM.FGPERMISSION) AS FGPERMISSION FROM (SELECT WF.FGPERMISSION, WF.IDPROCESS, TM.CDUSER AS USERCD, WF.CDACCESSLIST FROM WFPROCSECURITYLIST WF INNER JOIN ADTEAMUSER TM ON WF.CDTEAM=TM.CDTEAM WHERE 1=1 AND WF.FGACCESSTYPE=1 AND TM.CDUSER=5768 UNION ALL SELECT WF.FGPERMISSION, WF.IDPROCESS, UDP.CDUSER AS USERCD, WF.CDACCESSLIST FROM WFPROCSECURITYLIST WF INNER JOIN ADUSERDEPTPOS UDP ON WF.CDDEPARTMENT=UDP.CDDEPARTMENT WHERE 1=1 AND WF.FGACCESSTYPE=2 AND UDP.CDUSER=5768 UNION ALL SELECT WF.FGPERMISSION, WF.IDPROCESS, UDP.CDUSER AS USERCD, WF.CDACCESSLIST FROM WFPROCSECURITYLIST WF INNER JOIN ADUSERDEPTPOS UDP ON WF.CDDEPARTMENT=UDP.CDDEPARTMENT AND WF.CDPOSITION=UDP.CDPOSITION WHERE 1=1 AND WF.FGACCESSTYPE=3 AND UDP.CDUSER=5768 UNION ALL SELECT WF.FGPERMISSION, WF.IDPROCESS, UDP.CDUSER AS USERCD, WF.CDACCESSLIST FROM WFPROCSECURITYLIST WF INNER JOIN ADUSERDEPTPOS UDP ON WF.CDPOSITION=UDP.CDPOSITION WHERE 1=1 AND WF.FGACCESSTYPE=4 AND UDP.CDUSER=5768 UNION ALL SELECT WF.FGPERMISSION, WF.IDPROCESS, WF.CDUSER AS USERCD, WF.CDACCESSLIST FROM WFPROCSECURITYLIST WF WHERE 1=1 AND WF.FGACCESSTYPE=5 AND WF.CDUSER=5768 UNION ALL SELECT WF.FGPERMISSION, WF.IDPROCESS, US.CDUSER AS USERCD, WF.CDACCESSLIST FROM WFPROCSECURITYLIST WF CROSS JOIN ADUSER US WHERE 1=1 AND WF.FGACCESSTYPE=6 AND US.CDUSER=5768 UNION ALL SELECT WF.FGPERMISSION, WF.IDPROCESS, RL.CDUSER AS USERCD, WF.CDACCESSLIST FROM WFPROCSECURITYLIST WF INNER JOIN ADUSERROLE RL ON RL.CDROLE=WF.CDROLE WHERE 1=1 AND WF.FGACCESSTYPE=7 AND RL.CDUSER=5768 UNION ALL SELECT WF.FGPERMISSION, WF.IDPROCESS, WFP.CDUSERSTART AS USERCD, WF.CDACCESSLIST FROM WFPROCSECURITYLIST WF INNER JOIN WFPROCESS WFP ON WFP.IDOBJECT=WF.IDPROCESS WHERE 1=1 AND WF.FGACCESSTYPE=30 AND WFP.CDUSERSTART=5768 UNION ALL SELECT WF.FGPERMISSION, WF.IDPROCESS, US.CDLEADER AS USERCD, WF.CDACCESSLIST FROM WFPROCSECURITYLIST WF INNER JOIN WFPROCESS WFP ON WFP.IDOBJECT=WF.IDPROCESS INNER JOIN ADUSER US ON US.CDUSER=WFP.CDUSERSTART WHERE 1=1 AND WF.FGACCESSTYPE=31 AND US.CDLEADER=5768) PERM INNER JOIN WFPROCSECURITYCTRL GNASSOC ON GNASSOC.CDACCESSLIST=PERM.CDACCESSLIST AND GNASSOC.IDPROCESS=PERM.IDPROCESS WHERE 1=1 AND GNASSOC.CDACCESSROLEFIELD=501 GROUP BY PERM.USERCD, PERM.IDPROCESS) PERMISSION ON PERMISSION.IDPROCESS=P.IDOBJECT INNER JOIN INOCCURRENCE INCID ON INCID.IDWORKFLOW=P.IDOBJECT WHERE 1=1 AND PERMISSION.FGPERMISSION=1 AND P.FGSTATUS <= 5 AND (P.FGMODELWFSECURITY IS NULL OR P.FGMODELWFSECURITY=0) AND INCID.FGOCCURRENCETYPE=2 UNION ALL SELECT T.IDOBJECT FROM (SELECT PERM.IDOBJECT, MIN(PERM.FGPERMISSION) AS FGPERMISSION FROM (SELECT WFP.IDOBJECT, PMA.FGUSETYPEACCESS, PERM1.FGPERMISSION FROM (SELECT PM.FGPERMISSION, PM.CDACTTYPE, PM.CDACCESSLIST, TM.CDUSER AS USERCD FROM PMACTTYPESECURLIST PM INNER JOIN ADTEAMUSER TM ON PM.CDTEAM=TM.CDTEAM WHERE 1=1 AND PM.FGACCESSTYPE=1 AND TM.CDUSER=5768 UNION ALL SELECT PM.FGPERMISSION, PM.CDACTTYPE, PM.CDACCESSLIST, UDP.CDUSER AS USERCD FROM PMACTTYPESECURLIST PM INNER JOIN ADUSERDEPTPOS UDP ON PM.CDDEPARTMENT=UDP.CDDEPARTMENT WHERE 1=1 AND PM.FGACCESSTYPE=2 AND UDP.CDUSER=5768 UNION ALL SELECT PM.FGPERMISSION, PM.CDACTTYPE, PM.CDACCESSLIST, UDP.CDUSER AS USERCD FROM PMACTTYPESECURLIST PM INNER JOIN ADUSERDEPTPOS UDP ON PM.CDDEPARTMENT=UDP.CDDEPARTMENT AND PM.CDPOSITION=UDP.CDPOSITION WHERE 1=1 AND PM.FGACCESSTYPE=3 AND UDP.CDUSER=5768 UNION ALL SELECT PM.FGPERMISSION, PM.CDACTTYPE, PM.CDACCESSLIST, UDP.CDUSER AS USERCD FROM PMACTTYPESECURLIST PM INNER JOIN ADUSERDEPTPOS UDP ON PM.CDPOSITION=UDP.CDPOSITION WHERE 1=1 AND PM.FGACCESSTYPE=4 AND UDP.CDUSER=5768 UNION ALL SELECT PM.FGPERMISSION, PM.CDACTTYPE, PM.CDACCESSLIST, PM.CDUSER AS USERCD FROM PMACTTYPESECURLIST PM WHERE 1=1 AND PM.FGACCESSTYPE=5 AND PM.CDUSER=5768 UNION ALL SELECT PM.FGPERMISSION, PM.CDACTTYPE, PM.CDACCESSLIST, US.CDUSER AS USERCD FROM PMACTTYPESECURLIST PM CROSS JOIN ADUSER US WHERE 1=1 AND PM.FGACCESSTYPE=6 AND US.CDUSER=5768 UNION ALL SELECT PM.FGPERMISSION, PM.CDACTTYPE, PM.CDACCESSLIST, RL.CDUSER AS USERCD FROM PMACTTYPESECURLIST PM INNER JOIN ADUSERROLE RL ON RL.CDROLE=PM.CDROLE WHERE 1=1 AND PM.FGACCESSTYPE=7 AND RL.CDUSER=5768) PERM1 INNER JOIN PMACTTYPESECURCTRL GNASSOC ON PERM1.CDACCESSLIST=GNASSOC.CDACCESSLIST AND PERM1.CDACTTYPE=GNASSOC.CDACTTYPE INNER JOIN PMACCESSROLEFIELD GNCTRL ON GNASSOC.CDACCESSROLEFIELD=GNCTRL.CDACCESSROLEFIELD INNER JOIN PMACCESSROLEFIELD GNCTRL_F ON GNCTRL.CDRELATEDFIELD=GNCTRL_F.CDACCESSROLEFIELD INNER JOIN PMACTIVITY PMA ON PERM1.CDACTTYPE=PMA.CDACTTYPE INNER JOIN WFPROCESS WFP ON PMA.CDACTIVITY=WFP.CDPROCESSMODEL WHERE 1=1 AND GNCTRL_F.CDRELATEDFIELD=501 AND WFP.FGSTATUS <= 5 AND PMA.FGUSETYPEACCESS=1 AND WFP.FGMODELWFSECURITY=1 UNION ALL SELECT WFP.IDOBJECT, PMA.FGUSETYPEACCESS, PERM2.FGPERMISSION FROM (SELECT PM.FGPERMISSION, PM.CDACTTYPE, PM.CDACCESSLIST, PMA.CDCREATEDBY AS USERCD FROM PMACTTYPESECURLIST PM INNER JOIN PMACTIVITY PMA ON PM.CDACTTYPE=PMA.CDACTTYPE WHERE 1=1 AND PM.FGACCESSTYPE=8 AND PMA.CDCREATEDBY=5768 UNION ALL SELECT PM.FGPERMISSION, PM.CDACTTYPE, PM.CDACCESSLIST, DEP2.CDUSER FROM PMACTTYPESECURLIST PM INNER JOIN PMACTIVITY PMA ON PM.CDACTTYPE=PMA.CDACTTYPE INNER JOIN ADUSERDEPTPOS DEP1 ON DEP1.CDUSER=PMA.CDCREATEDBY INNER JOIN ADUSERDEPTPOS DEP2 ON DEP2.CDDEPARTMENT=DEP1.CDDEPARTMENT WHERE 1=1 AND PM.FGACCESSTYPE=9 AND DEP2.CDUSER=5768 UNION ALL SELECT PM.FGPERMISSION, PM.CDACTTYPE, PM.CDACCESSLIST, DEP2.CDUSER FROM PMACTTYPESECURLIST PM INNER JOIN PMACTIVITY PMA ON PM.CDACTTYPE=PMA.CDACTTYPE INNER JOIN ADUSERDEPTPOS DEP1 ON DEP1.CDUSER=PMA.CDCREATEDBY INNER JOIN ADUSERDEPTPOS DEP2 ON DEP2.CDDEPARTMENT=DEP1.CDDEPARTMENT AND DEP2.CDPOSITION=DEP1.CDPOSITION WHERE 1=1 AND PM.FGACCESSTYPE=10 AND DEP2.CDUSER=5768 UNION ALL SELECT PM.FGPERMISSION, PM.CDACTTYPE, PM.CDACCESSLIST, DEP2.CDUSER FROM PMACTTYPESECURLIST PM INNER JOIN PMACTIVITY PMA ON PM.CDACTTYPE=PMA.CDACTTYPE INNER JOIN ADUSERDEPTPOS DEP1 ON DEP1.CDUSER=PMA.CDCREATEDBY INNER JOIN ADUSERDEPTPOS DEP2 ON DEP2.CDPOSITION=DEP1.CDPOSITION WHERE 1=1 AND PM.FGACCESSTYPE=11 AND DEP2.CDUSER=5768 UNION ALL SELECT PM.FGPERMISSION, PM.CDACTTYPE, PM.CDACCESSLIST, US.CDLEADER FROM PMACTTYPESECURLIST PM INNER JOIN PMACTIVITY PMA ON PM.CDACTTYPE=PMA.CDACTTYPE INNER JOIN ADUSER US ON US.CDUSER=PMA.CDCREATEDBY WHERE 1=1 AND PM.FGACCESSTYPE=12 AND US.CDLEADER=5768) PERM2 INNER JOIN PMACTTYPESECURCTRL GNASSOC ON PERM2.CDACCESSLIST=GNASSOC.CDACCESSLIST AND PERM2.CDACTTYPE=GNASSOC.CDACTTYPE INNER JOIN PMACCESSROLEFIELD GNCTRL ON GNASSOC.CDACCESSROLEFIELD=GNCTRL.CDACCESSROLEFIELD INNER JOIN PMACCESSROLEFIELD GNCTRL_F ON GNCTRL.CDRELATEDFIELD=GNCTRL_F.CDACCESSROLEFIELD INNER JOIN PMACTIVITY PMA ON PERM2.CDACTTYPE=PMA.CDACTTYPE INNER JOIN WFPROCESS WFP ON PMA.CDACTIVITY=WFP.CDPROCESSMODEL WHERE 1=1 AND GNCTRL_F.CDRELATEDFIELD=501 AND WFP.FGSTATUS <= 5 AND PMA.FGUSETYPEACCESS=1 AND WFP.FGMODELWFSECURITY=1 UNION ALL SELECT PERM3.IDOBJECT, PMA.FGUSETYPEACCESS, PERM3.FGPERMISSION FROM (SELECT PM.FGPERMISSION, PM.CDACTTYPE, PM.CDACCESSLIST, WFP.CDUSERSTART AS USERCD, WFP.IDOBJECT FROM PMACTTYPESECURLIST PM INNER JOIN PMACTIVITY PMA ON PM.CDACTTYPE=PMA.CDACTTYPE INNER JOIN WFPROCESS WFP ON PMA.CDACTIVITY=WFP.CDPROCESSMODEL WHERE 1=1 AND PM.FGACCESSTYPE=30 AND WFP.CDUSERSTART=5768 AND WFP.FGSTATUS <= 5 AND WFP.FGMODELWFSECURITY=1 UNION ALL SELECT PM.FGPERMISSION, PM.CDACTTYPE, PM.CDACCESSLIST, US.CDLEADER AS USERCD, WFP.IDOBJECT FROM PMACTTYPESECURLIST PM INNER JOIN PMACTIVITY PMA ON PM.CDACTTYPE=PMA.CDACTTYPE INNER JOIN WFPROCESS WFP ON PMA.CDACTIVITY=WFP.CDPROCESSMODEL INNER JOIN ADUSER US ON US.CDUSER=WFP.CDUSERSTART WHERE 1=1 AND PM.FGACCESSTYPE=31 AND US.CDLEADER=5768 AND WFP.FGSTATUS <= 5 AND WFP.FGMODELWFSECURITY=1) PERM3 INNER JOIN PMACTTYPESECURCTRL GNASSOC ON PERM3.CDACCESSLIST=GNASSOC.CDACCESSLIST AND PERM3.CDACTTYPE=GNASSOC.CDACTTYPE INNER JOIN PMACCESSROLEFIELD GNCTRL ON GNASSOC.CDACCESSROLEFIELD=GNCTRL.CDACCESSROLEFIELD INNER JOIN PMACCESSROLEFIELD GNCTRL_F ON GNCTRL.CDRELATEDFIELD=GNCTRL_F.CDACCESSROLEFIELD INNER JOIN PMACTIVITY PMA ON PERM3.CDACTTYPE=PMA.CDACTTYPE WHERE 1=1 AND GNCTRL_F.CDRELATEDFIELD=501 AND PMA.FGUSETYPEACCESS=1) PERM WHERE 1=1 GROUP BY PERM.IDOBJECT) T INNER JOIN INOCCURRENCE INCID ON INCID.IDWORKFLOW=T.IDOBJECT WHERE 1=1 AND T.FGPERMISSION=1 AND INCID.FGOCCURRENCETYPE=2 UNION ALL SELECT T.IDOBJECT FROM (SELECT MIN(PERM99.FGPERMISSION) AS FGPERMISSION, PERM99.IDOBJECT FROM (SELECT WFP.IDOBJECT, PERM1.FGPERMISSION FROM (SELECT PP.FGPERMISSION, PP.CDPROC, PP.CDACCESSLIST, TM.CDUSER AS USERCD FROM PMPROCACCESSLIST PP INNER JOIN ADTEAMUSER TM ON PP.CDTEAM=TM.CDTEAM WHERE 1=1 AND PP.FGACCESSTYPE=1 AND TM.CDUSER=5768 UNION ALL SELECT PP.FGPERMISSION, PP.CDPROC, PP.CDACCESSLIST, UDP.CDUSER AS USERCD FROM PMPROCACCESSLIST PP INNER JOIN ADUSERDEPTPOS UDP ON PP.CDDEPARTMENT=UDP.CDDEPARTMENT WHERE 1=1 AND PP.FGACCESSTYPE=2 AND UDP.CDUSER=5768 UNION ALL SELECT PP.FGPERMISSION, PP.CDPROC, PP.CDACCESSLIST, UDP.CDUSER AS USERCD FROM PMPROCACCESSLIST PP INNER JOIN ADUSERDEPTPOS UDP ON PP.CDDEPARTMENT=UDP.CDDEPARTMENT AND PP.CDPOSITION=UDP.CDPOSITION WHERE 1=1 AND PP.FGACCESSTYPE=3 AND UDP.CDUSER=5768 UNION ALL SELECT PP.FGPERMISSION, PP.CDPROC, PP.CDACCESSLIST, UDP.CDUSER AS USERCD FROM PMPROCACCESSLIST PP INNER JOIN ADUSERDEPTPOS UDP ON PP.CDPOSITION=UDP.CDPOSITION WHERE 1=1 AND PP.FGACCESSTYPE=4 AND UDP.CDUSER=5768 UNION ALL SELECT PP.FGPERMISSION, PP.CDPROC, PP.CDACCESSLIST, PP.CDUSER AS USERCD FROM PMPROCACCESSLIST PP WHERE 1=1 AND PP.FGACCESSTYPE=5 AND PP.CDUSER=5768 UNION ALL SELECT PP.FGPERMISSION, PP.CDPROC, PP.CDACCESSLIST, US.CDUSER AS USERCD FROM PMPROCACCESSLIST PP CROSS JOIN ADUSER US WHERE 1=1 AND PP.FGACCESSTYPE=6 AND US.CDUSER=5768 UNION ALL SELECT PP.FGPERMISSION, PP.CDPROC, PP.CDACCESSLIST, RL.CDUSER AS USERCD FROM PMPROCACCESSLIST PP INNER JOIN ADUSERROLE RL ON RL.CDROLE=PP.CDROLE WHERE 1=1 AND PP.FGACCESSTYPE=7 AND RL.CDUSER=5768) PERM1 INNER JOIN PMPROCSECURITYCTRL GNASSOC ON PERM1.CDACCESSLIST=GNASSOC.CDACCESSLIST AND PERM1.CDPROC=GNASSOC.CDPROC INNER JOIN PMACCESSROLEFIELD GNCTRL ON GNASSOC.CDACCESSROLEFIELD=GNCTRL.CDACCESSROLEFIELD INNER JOIN PMACTIVITY OBJ ON GNASSOC.CDPROC=OBJ.CDACTIVITY INNER JOIN WFPROCESS WFP ON WFP.CDPROCESSMODEL=PERM1.CDPROC WHERE 1=1 AND GNCTRL.CDRELATEDFIELD=501 AND (OBJ.FGUSETYPEACCESS=0 OR OBJ.FGUSETYPEACCESS IS NULL) AND WFP.FGMODELWFSECURITY=1 AND WFP.FGSTATUS <= 5 UNION ALL SELECT PERM2.IDOBJECT, PERM2.FGPERMISSION FROM (SELECT PP.FGPERMISSION, WFP.IDOBJECT, PP.CDPROC, PP.CDACCESSLIST, WFP.CDUSERSTART AS USERCD FROM PMPROCACCESSLIST PP INNER JOIN WFPROCESS WFP ON WFP.CDPROCESSMODEL=PP.CDPROC WHERE 1=1 AND PP.FGACCESSTYPE=30 AND WFP.CDUSERSTART=5768 AND WFP.FGMODELWFSECURITY=1 AND WFP.FGSTATUS <= 5 UNION ALL SELECT PP.FGPERMISSION, WFP.IDOBJECT, PP.CDPROC, PP.CDACCESSLIST, US.CDLEADER AS USERCD FROM PMPROCACCESSLIST PP INNER JOIN WFPROCESS WFP ON WFP.CDPROCESSMODEL=PP.CDPROC INNER JOIN ADUSER US ON US.CDUSER=WFP.CDUSERSTART WHERE 1=1 AND PP.FGACCESSTYPE=31 AND US.CDLEADER=5768 AND WFP.FGMODELWFSECURITY=1 AND WFP.FGSTATUS <= 5) PERM2 INNER JOIN PMPROCSECURITYCTRL GNASSOC ON PERM2.CDACCESSLIST=GNASSOC.CDACCESSLIST AND PERM2.CDPROC=GNASSOC.CDPROC INNER JOIN PMACCESSROLEFIELD GNCTRL ON GNASSOC.CDACCESSROLEFIELD=GNCTRL.CDACCESSROLEFIELD INNER JOIN PMACTIVITY OBJ ON GNASSOC.CDPROC=OBJ.CDACTIVITY WHERE 1=1 AND GNCTRL.CDRELATEDFIELD=501 AND (OBJ.FGUSETYPEACCESS=0 OR OBJ.FGUSETYPEACCESS IS NULL)) PERM99 WHERE 1=1 GROUP BY PERM99.IDOBJECT) T INNER JOIN INOCCURRENCE INCID ON INCID.IDWORKFLOW=T.IDOBJECT WHERE 1=1 AND T.FGPERMISSION=1 AND INCID.FGOCCURRENCETYPE=2) Z WHERE 1=1) MYPERM ON (P.IDOBJECT=MYPERM.IDOBJECT) LEFT OUTER JOIN (SELECT DYNtds014.*, GNASSOCFORMREG.CDASSOC FROM GNASSOCFORMREG INNER JOIN DYNtds014 ON (DYNtds014.OID=GNASSOCFORMREG.OIDENTITYREG)) ENT01 ON (ENT01.CDASSOC=P.CDASSOCREG) LEFT OUTER JOIN (SELECT DYNtds035.*, GNASSOCFORMREG.CDASSOC FROM GNASSOCFORMREG INNER JOIN DYNtds035 ON (DYNtds035.OID=GNASSOCFORMREG.OIDENTITYREG)) ENT02 ON (ENT02.CDASSOC=P.CDASSOCREG) LEFT OUTER JOIN (SELECT DYNtds036.*, GNASSOCFORMREG.CDASSOC FROM GNASSOCFORMREG INNER JOIN DYNtds036 ON (DYNtds036.OID=GNASSOCFORMREG.OIDENTITYREG)) ENT03 ON (ENT03.CDASSOC=P.CDASSOCREG) LEFT OUTER JOIN (SELECT DYNtbs001.*, GNASSOCFORMREG.CDASSOC FROM GNASSOCFORMREG INNER JOIN DYNtds035 ON (DYNtds035.OID=GNASSOCFORMREG.OIDENTITYREG) INNER JOIN DYNtbs001 ON (DYNtds035.OIDABCCC7ZU3EKCKX5=DYNtbs001.OID)) ENT02REF01 ON (ENT02REF01.CDASSOC=P.CDASSOCREG) LEFT OUTER JOIN (SELECT DYNtbs001.*, GNASSOCFORMREG.CDASSOC FROM GNASSOCFORMREG INNER JOIN DYNtds036 ON (DYNtds036.OID=GNASSOCFORMREG.OIDENTITYREG) INNER JOIN DYNtbs001 ON (DYNtds036.OIDABC92YI09Y4CICZ=DYNtbs001.OID)) ENT03REF02 ON (ENT03REF02.CDASSOC=P.CDASSOCREG) WHERE 1=1 AND GNT.cdgentype IN (<!%FUNC(com.softexpert.generic.parameter.InClauseBuilder, R05HRU5UWVBF, Y2RnZW50eXBl, Y2RnZW50eXBlb3duZXI=, ,OTQ=)%>) AND P.FGSTATUS <= 5 AND INCID.FGOCCURRENCETYPE=2 AND (GNT.CDTYPEROLE IS NULL OR EXISTS (SELECT 1 FROM (SELECT MAX(CHKUSRPERMTYPEROLE.FGPERMISSIONTYPE) AS FGACCESSLIST, CHKUSRPERMTYPEROLE.CDTYPEROLE AS CDTYPEROLE, CHKUSRPERMTYPEROLE.CDUSER FROM (SELECT PM.FGPERMISSIONTYPE, PM.CDUSER, PM.CDTYPEROLE FROM GNUSERPERMTYPEROLE PM WHERE 1=1 AND PM.CDUSER <> -1 AND PM.CDPERMISSION=5 /* Nao retirar este comentario */UNION ALL SELECT PM.FGPERMISSIONTYPE, US.CDUSER AS CDUSER, PM.CDTYPEROLE FROM GNUSERPERMTYPEROLE PM, ADUSER US WHERE 1=1 AND PM.CDUSER=-1 AND US.FGUSERENABLED=1 AND PM.CDPERMISSION=5) CHKUSRPERMTYPEROLE GROUP BY CHKUSRPERMTYPEROLE.CDTYPEROLE, CHKUSRPERMTYPEROLE.CDUSER) CHKPERMTYPEROLE WHERE CHKPERMTYPEROLE.FGACCESSLIST=1 AND CHKPERMTYPEROLE.CDTYPEROLE=GNT.CDTYPEROLE AND (CHKPERMTYPEROLE.CDUSER=5768 OR 5768=-1)))) TEMPTB0) TEMPTB1
