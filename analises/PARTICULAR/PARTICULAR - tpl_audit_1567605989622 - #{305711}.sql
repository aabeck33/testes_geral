SELECT 1 AS QTDE, COUNT(DISTINCT OCCUR.CDAUDIT) AS CNT, FGDEADLINE, NMDEADLINE FROM (SELECT RN.NRSEQNC AS CODE, CASE WHEN (AU.DTOCCURMONITDUEDT > CURRDATE.VAL OR AU.DTOCCURMONITDUEDT IS NULL) THEN 1 WHEN AU.DTOCCURMONITDUEDT >= GETDATE() THEN 2 ELSE 3 END AS FGDEADLINE, CAST (CASE WHEN (AU.DTOCCURMONITDUEDT > CURRDATE.VAL OR AU.DTOCCURMONITDUEDT IS NULL) THEN 3 WHEN AU.DTOCCURMONITDUEDT >= GETDATE() THEN 2 ELSE 1 END AS VARCHAR(50))+ '' + (CAST (CASE WHEN AU.DTOCCURMONITDUEDT IS NULL THEN 99999999 ELSE CAST(Convert(char , AU.DTOCCURMONITDUEDT, 112) AS INTEGER) END AS VARCHAR(50))) AS FGDEADLINEAU, CASE WHEN (AU.DTOCCURMONITDUEDT > CURRDATE.VAL OR AU.DTOCCURMONITDUEDT IS NULL) THEN '#{100900}' WHEN AU.DTOCCURMONITDUEDT >= GETDATE() THEN '#{201639}' ELSE '#{100899}' END AS NMDEADLINE, AU.CDAUDIT FROM AUAUDIT AU INNER JOIN AUAUDITTYPE AUTP ON (AU.CDAUDITTYPE = AUTP.CDAUDITTYPE) INNER JOIN AUSCOPESTRUCT ON AU.CDSCOPEDEFINITION = AUSCOPESTRUCT.CDSCOPEDEFINITION INNER JOIN GNASSOCACTION GNACT ON AUSCOPESTRUCT.CDASSOC = GNACT.CDASSOC INNER JOIN RNC RN ON RN.NRSEQNC = GNACT.CDACTION INNER JOIN CLASSIF CLOC ON RN.CDCLASSIF = CLOC.CDCLASSIF INNER JOIN ADDEPARTMENT ADPT2 ON RN.CDAREANC = ADPT2.CDDEPARTMENT INNER JOIN SITUACAO STOC ON RN.CDSITUACAO = STOC.CDFASE AND RN.CDSITESTADO = STOC.CDESTADO CROSS JOIN (SELECT dbo.SEF_DTEND_WK_DAYS_PERIOD(CONVERT(DATE, GETDATE()), CAST(3 AS INTEGER) + 1 , ( (SELECT CDCALENDAR FROM GNCALENDAR WHERE FGDEFAULT = 1 ))) VAL) CURRDATE WHERE AU.FGOCCURMONITORING = 1 AND AU.FGAUDITSTATUS = 56 AND AUSCOPESTRUCT.FGREQUIREMENT = 1 AND STOC.CDFASE NOT IN (9, 10) UNION SELECT P.CDPROCESS AS CODE, CASE WHEN (AU.DTOCCURMONITDUEDT > CURRDATE.VAL OR AU.DTOCCURMONITDUEDT IS NULL) THEN 1 WHEN AU.DTOCCURMONITDUEDT >= GETDATE() THEN 2 ELSE 3 END AS FGDEADLINE, CAST (CASE WHEN (AU.DTOCCURMONITDUEDT > CURRDATE.VAL OR AU.DTOCCURMONITDUEDT IS NULL) THEN 3 WHEN AU.DTOCCURMONITDUEDT >= GETDATE() THEN 2 ELSE 1 END AS VARCHAR(50))+ '' + (CAST (CASE WHEN AU.DTOCCURMONITDUEDT IS NULL THEN 99999999 ELSE CAST(Convert(char , AU.DTOCCURMONITDUEDT, 112) AS INTEGER) END AS VARCHAR(50))) AS FGDEADLINEAU, CASE WHEN (AU.DTOCCURMONITDUEDT > CURRDATE.VAL OR AU.DTOCCURMONITDUEDT IS NULL) THEN '#{100900}' WHEN AU.DTOCCURMONITDUEDT >= GETDATE() THEN '#{201639}' ELSE '#{100899}' END AS NMDEADLINE, AU.CDAUDIT FROM AUAUDIT AU INNER JOIN AUAUDITTYPE AUTP ON (AU.CDAUDITTYPE = AUTP.CDAUDITTYPE) INNER JOIN AUSCOPESTRUCT ON AU.CDSCOPEDEFINITION = AUSCOPESTRUCT.CDSCOPEDEFINITION INNER JOIN GNASSOCWORKFLOW GNWF ON AUSCOPESTRUCT.CDASSOC = GNWF.CDASSOC INNER JOIN WFPROCESS P ON (GNWF.IDPROCESS = P.IDOBJECT) INNER JOIN INOCCURRENCE INOCCUR ON (INOCCUR.IDWORKFLOW = P.IDOBJECT) INNER JOIN GNGENTYPE GNT ON (INOCCUR.CDOCCURRENCETYPE = GNT.CDGENTYPE) INNER JOIN ADTEAM ADOCCURTEAM ON AU.CDOCCURMONITTEAM = ADOCCURTEAM.CDTEAM CROSS JOIN (SELECT dbo.SEF_DTEND_WK_DAYS_PERIOD(CONVERT(DATE, GETDATE()), CAST(3 AS INTEGER) + 1 , ( (SELECT CDCALENDAR FROM GNCALENDAR WHERE FGDEFAULT = 1 ))) VAL) CURRDATE WHERE AU.FGOCCURMONITORING = 1 AND AU.FGAUDITSTATUS = 56 AND AUSCOPESTRUCT.FGREQUIREMENT = 1 AND P.FGSTATUS NOT IN (3, 4, 5) UNION SELECT GNACT.CDGENACTIVITY AS CODE, CASE WHEN (AU.DTOCCURMONITDUEDT > CURRDATE.VAL OR AU.DTOCCURMONITDUEDT IS NULL) THEN 1 WHEN AU.DTOCCURMONITDUEDT >= GETDATE() THEN 2 ELSE 3 END AS FGDEADLINE, CAST (CASE WHEN (AU.DTOCCURMONITDUEDT > CURRDATE.VAL OR AU.DTOCCURMONITDUEDT IS NULL) THEN 3 WHEN AU.DTOCCURMONITDUEDT >= GETDATE() THEN 2 ELSE 1 END AS VARCHAR(50))+ '' + (CAST (CASE WHEN AU.DTOCCURMONITDUEDT IS NULL THEN 99999999 ELSE CAST(Convert(char , AU.DTOCCURMONITDUEDT, 112) AS INTEGER) END AS VARCHAR(50))) AS FGDEADLINEAU, CASE WHEN (AU.DTOCCURMONITDUEDT > CURRDATE.VAL OR AU.DTOCCURMONITDUEDT IS NULL) THEN '#{100900}' WHEN AU.DTOCCURMONITDUEDT >= GETDATE() THEN '#{201639}' ELSE '#{100899}' END AS NMDEADLINE, AU.CDAUDIT FROM AUAUDIT AU INNER JOIN AUAUDITTYPE AUTP ON (AU.CDAUDITTYPE = AUTP.CDAUDITTYPE) INNER JOIN AUSCOPESTRUCT ON AU.CDSCOPEDEFINITION = AUSCOPESTRUCT.CDSCOPEDEFINITION INNER JOIN GNASSOCACTIONPLAN GNACTP ON AUSCOPESTRUCT.CDASSOC = GNACTP.CDASSOC INNER JOIN GNACTIVITY GNACT ON (GNACT.CDGENACTIVITY = GNACTP.CDACTIONPLAN) INNER JOIN GNACTIONPLAN GNACTPLAN ON (GNACT.CDGENACTIVITY = GNACTPLAN.CDGENACTIVITY) CROSS JOIN (SELECT dbo.SEF_DTEND_WK_DAYS_PERIOD(CONVERT(DATE, GETDATE()), CAST(3 AS INTEGER) + 1 , ( (SELECT CDCALENDAR FROM GNCALENDAR WHERE FGDEFAULT = 1 ))) VAL) CURRDATE WHERE AU.FGOCCURMONITORING = 1 AND AU.FGAUDITSTATUS = 56 AND AUSCOPESTRUCT.FGREQUIREMENT = 1 AND GNACT.FGSTATUS NOT IN (5, 6) UNION SELECT GNACT.CDGENACTIVITY AS CODE, CASE WHEN (AU.DTOCCURMONITDUEDT > CURRDATE.VAL OR AU.DTOCCURMONITDUEDT IS NULL) THEN 1 WHEN AU.DTOCCURMONITDUEDT >= GETDATE() THEN 2 ELSE 3 END AS FGDEADLINE, CAST (CASE WHEN (AU.DTOCCURMONITDUEDT > CURRDATE.VAL OR AU.DTOCCURMONITDUEDT IS NULL) THEN 3 WHEN AU.DTOCCURMONITDUEDT >= GETDATE() THEN 2 ELSE 1 END AS VARCHAR(50))+ '' + (CAST (CASE WHEN AU.DTOCCURMONITDUEDT IS NULL THEN 99999999 ELSE CAST(Convert(char , AU.DTOCCURMONITDUEDT, 112) AS INTEGER) END AS VARCHAR(50))) AS FGDEADLINEAU, CASE WHEN (AU.DTOCCURMONITDUEDT > CURRDATE.VAL OR AU.DTOCCURMONITDUEDT IS NULL) THEN '#{100900}' WHEN AU.DTOCCURMONITDUEDT >= GETDATE() THEN '#{201639}' ELSE '#{100899}' END AS NMDEADLINE, AU.CDAUDIT FROM AUAUDIT AU INNER JOIN AUAUDITTYPE AUTP ON (AU.CDAUDITTYPE = AUTP.CDAUDITTYPE) INNER JOIN AUSCOPESTRUCT ON AU.CDSCOPEDEFINITION = AUSCOPESTRUCT.CDSCOPEDEFINITION INNER JOIN GNASSOCACTIONPLAN GNACTP ON AUSCOPESTRUCT.CDASSOC = GNACTP.CDASSOC INNER JOIN GNACTIVITY GNACT ON (GNACT.CDGENACTIVITY = GNACTP.CDACTIONPLAN) INNER JOIN GNTASK GNTK ON (GNACT.CDGENACTIVITY = GNTK.CDGENACTIVITY) CROSS JOIN (SELECT dbo.SEF_DTEND_WK_DAYS_PERIOD(CONVERT(DATE, GETDATE()), CAST(3 AS INTEGER) + 1 , ( (SELECT CDCALENDAR FROM GNCALENDAR WHERE FGDEFAULT = 1 ))) VAL) CURRDATE WHERE AU.FGOCCURMONITORING = 1 AND AU.FGAUDITSTATUS = 56 AND AUSCOPESTRUCT.FGREQUIREMENT = 1 AND GNACT.FGSTATUS NOT IN (5, 6) AND GNACT.CDACTIVITYOWNER IS NULL ) OCCUR GROUP BY FGDEADLINE, NMDEADLINE
